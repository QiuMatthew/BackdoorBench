/home/fmg/yuran/miniconda3/envs/backdoorbenchv2/lib/python3.8/site-packages/torchvision/io/image.py:13: UserWarning: Failed to load image Python extension: libc10_hip.so: cannot open shared object file: No such file or directory
  warn(f"Failed to load image Python extension: {e}")
WARNING:root:save_path MUST have 'record' in its abspath, and data_path in attack result MUST have 'data' in its path
WARNING:root:For ImageNet, this script need large size of RAM to load the whole dataset.
WARNING:root:save_path MUST have 'record' in its abspath, and data_path in attack result MUST have 'data' in its path
WARNING:root:For ImageNet, this script need large size of RAM to load the whole dataset.
INFO:root:{'amp': True,
 'batch_size': 256,
 'beta1': 500,
 'beta2': 1000,
 'beta3': 1000,
 'checkpoint_load': None,
 'checkpoint_save': 'record/badnet_attack_efficientnet_ffpp_2classes/defense/nad/checkpoint/',
 'client_optimizer': 'sgd',
 'dataset': 'ffpp_2classes',
 'dataset_path': './data/ffpp_2classes',
 'device': 'cuda',
 'epochs': 100,
 'frequency_save': 0,
 'img_size': (64, 64, 3),
 'index': None,
 'input_channel': 3,
 'input_height': 64,
 'input_width': 64,
 'log': 'record/badnet_attack_efficientnet_ffpp_2classes/defense/nad/log/',
 'lr': 0.01,
 'lr_scheduler': 'CosineAnnealingLR',
 'model': 'efficientnet_b3',
 'momentum': 0.9,
 'non_blocking': True,
 'num_classes': 2,
 'num_workers': 4,
 'p': 2.0,
 'pin_memory': True,
 'prefetch': False,
 'random_seed': 0,
 'ratio': 0.05,
 'result_file': 'badnet_attack_efficientnet_ffpp_2classes',
 'save_path': 'record/badnet_attack_efficientnet_ffpp_2classes/defense/nad/',
 'sgd_momentum': 0.9,
 'te_epochs': 10,
 'teacher_model_loc': None,
 'terminal_info': ['./defense/nad.py',
                   '--yaml_path',
                   './config/defense/nad/cifar10.yaml',
                   '--model',
                   'efficientnet_b3',
                   '--dataset',
                   'ffpp_2classes',
                   '--result_file',
                   'badnet_attack_efficientnet_ffpp_2classes'],
 'wd': 0.0005,
 'weight_decay': 0.0001,
 'yaml_path': './config/defense/nad/cifar10.yaml'}
2024-11-27:11:57:36 [INFO    ] [nad.py:722] {'amp': True,
 'batch_size': 256,
 'beta1': 500,
 'beta2': 1000,
 'beta3': 1000,
 'checkpoint_load': None,
 'checkpoint_save': 'record/badnet_attack_efficientnet_ffpp_2classes/defense/nad/checkpoint/',
 'client_optimizer': 'sgd',
 'dataset': 'ffpp_2classes',
 'dataset_path': './data/ffpp_2classes',
 'device': 'cuda',
 'epochs': 100,
 'frequency_save': 0,
 'img_size': (64, 64, 3),
 'index': None,
 'input_channel': 3,
 'input_height': 64,
 'input_width': 64,
 'log': 'record/badnet_attack_efficientnet_ffpp_2classes/defense/nad/log/',
 'lr': 0.01,
 'lr_scheduler': 'CosineAnnealingLR',
 'model': 'efficientnet_b3',
 'momentum': 0.9,
 'non_blocking': True,
 'num_classes': 2,
 'num_workers': 4,
 'p': 2.0,
 'pin_memory': True,
 'prefetch': False,
 'random_seed': 0,
 'ratio': 0.05,
 'result_file': 'badnet_attack_efficientnet_ffpp_2classes',
 'save_path': 'record/badnet_attack_efficientnet_ffpp_2classes/defense/nad/',
 'sgd_momentum': 0.9,
 'te_epochs': 10,
 'teacher_model_loc': None,
 'terminal_info': ['./defense/nad.py',
                   '--yaml_path',
                   './config/defense/nad/cifar10.yaml',
                   '--model',
                   'efficientnet_b3',
                   '--dataset',
                   'ffpp_2classes',
                   '--result_file',
                   'badnet_attack_efficientnet_ffpp_2classes'],
 'wd': 0.0005,
 'weight_decay': 0.0001,
 'yaml_path': './config/defense/nad/cifar10.yaml'}
INFO:root:{'git hash': None,
 'last 3 log': 'commit 120fb5158c8452beb1d6b1e9be6474e81854d34b\n'
               'Author: QiuMatthew <uzenkyu@gmail.com>\n'
               'Date:   Tue Nov 26 18:36:04 2024 +0900\n'
               '\n'
               '    support ffpp_2classes, including the script for generating '
               'dataset, badnet attack and defenses\n'
               '\n'
               'commit 4212971a9441615e655fb5342e42cce2ea328322\n'
               'Merge: 69383ef 61fdc8d\n'
               'Author: QiuMatthew <q_masio@outlook.com>\n'
               'Date:   Tue Nov 26 18:23:45 2024 +0900\n'
               '\n'
               "    Merge branch 'test-number-of-class' of "
               'GitHub:QiuMatthew/BackdoorBench into test-number-of-class\n'
               '\n'
               'commit 69383ef844bef38506b61f33b2bf24dda42a450e\n'
               'Author: QiuMatthew <q_masio@outlook.com>\n'
               'Date:   Tue Nov 26 18:22:12 2024 +0900\n'
               '\n'
               '    new results badnet abl 5 classes',
 'status': 'On branch test-number-of-class\n'
           "Your branch is up to date with 'origin/test-number-of-class'.\n"
           '\n'
           'Changes to be committed:\n'
           '  (use "git reset HEAD <file>..." to unstage)\n'
           '\n'
           '\tnew file:   out/badnet_abl_efficientnet_ffpp_2classes.out\n'
           '\tnew file:   out/badnet_attack_efficientnet_ffpp_2classes.out\n'
           '\tnew file:   out/badnet_ibau_efficientnet_ffpp_2classes.out\n'
           '\tnew file:   out/badnet_nad_efficientnet_ffpp_2classes.out\n'
           '\tnew file:   out/generate_ffpp_with_2_classes.out\n'
           '\tnew file:   '
           'record/badnet_attack_efficientnet_ffpp_2classes/acc_like_metric_plots.png\n'
           '\tnew file:   '
           'record/badnet_attack_efficientnet_ffpp_2classes/attack_df.csv\n'
           '\tnew file:   '
           'record/badnet_attack_efficientnet_ffpp_2classes/attack_df_summary.csv\n'
           '\tnew file:   '
           'record/badnet_attack_efficientnet_ffpp_2classes/defense/abl/pre_train_acc_like_metric_plots.png\n'
           '\tnew file:   '
           'record/badnet_attack_efficientnet_ffpp_2classes/defense/abl/pre_train_df.csv\n'
           '\tnew file:   '
           'record/badnet_attack_efficientnet_ffpp_2classes/defense/abl/pre_train_loss_metric_plots.png\n'
           '\tnew file:   '
           'record/badnet_attack_efficientnet_ffpp_2classes/defense/i-bau/i-bau_acc_like_metric_plots.png\n'
           '\tnew file:   '
           'record/badnet_attack_efficientnet_ffpp_2classes/defense/i-bau/i-bau_loss_metric_plots.png\n'
           '\tnew file:   '
           'record/badnet_attack_efficientnet_ffpp_2classes/defense/i-bau/log/index.txt\n'
           '\tnew file:   '
           'record/badnet_attack_efficientnet_ffpp_2classes/defense/nad/acc_like_metric_plots.png\n'
           '\tnew file:   '
           'record/badnet_attack_efficientnet_ffpp_2classes/defense/nad/log/index.txt\n'
           '\tnew file:   '
           'record/badnet_attack_efficientnet_ffpp_2classes/defense/nad/loss_metric_plots.png\n'
           '\tnew file:   '
           'record/badnet_attack_efficientnet_ffpp_2classes/defense/nad/nad_df.csv\n'
           '\tnew file:   '
           'record/badnet_attack_efficientnet_ffpp_2classes/defense/nad/nad_df_summary.csv\n'
           '\tnew file:   '
           'record/badnet_attack_efficientnet_ffpp_2classes/defense/nad/nad_te_df.csv\n'
           '\tnew file:   '
           'record/badnet_attack_efficientnet_ffpp_2classes/defense/nad/nad_te_df_summary.csv\n'
           '\tnew file:   '
           'record/badnet_attack_efficientnet_ffpp_2classes/loss_metric_plots.png\n'
           '\n'
           'Changes not staged for commit:\n'
           '  (use "git add <file>..." to update what will be committed)\n'
           '  (use "git checkout -- <file>..." to discard changes in working '
           'directory)\n'
           '\n'
           '\tmodified:   out/badnet_abl_efficientnet_ffpp_2classes.out\n'
           '\tmodified:   out/badnet_nad_efficientnet_ffpp_2classes.out'}
2024-11-27:11:57:36 [INFO    ] [nad.py:725] {'git hash': None,
 'last 3 log': 'commit 120fb5158c8452beb1d6b1e9be6474e81854d34b\n'
               'Author: QiuMatthew <uzenkyu@gmail.com>\n'
               'Date:   Tue Nov 26 18:36:04 2024 +0900\n'
               '\n'
               '    support ffpp_2classes, including the script for generating '
               'dataset, badnet attack and defenses\n'
               '\n'
               'commit 4212971a9441615e655fb5342e42cce2ea328322\n'
               'Merge: 69383ef 61fdc8d\n'
               'Author: QiuMatthew <q_masio@outlook.com>\n'
               'Date:   Tue Nov 26 18:23:45 2024 +0900\n'
               '\n'
               "    Merge branch 'test-number-of-class' of "
               'GitHub:QiuMatthew/BackdoorBench into test-number-of-class\n'
               '\n'
               'commit 69383ef844bef38506b61f33b2bf24dda42a450e\n'
               'Author: QiuMatthew <q_masio@outlook.com>\n'
               'Date:   Tue Nov 26 18:22:12 2024 +0900\n'
               '\n'
               '    new results badnet abl 5 classes',
 'status': 'On branch test-number-of-class\n'
           "Your branch is up to date with 'origin/test-number-of-class'.\n"
           '\n'
           'Changes to be committed:\n'
           '  (use "git reset HEAD <file>..." to unstage)\n'
           '\n'
           '\tnew file:   out/badnet_abl_efficientnet_ffpp_2classes.out\n'
           '\tnew file:   out/badnet_attack_efficientnet_ffpp_2classes.out\n'
           '\tnew file:   out/badnet_ibau_efficientnet_ffpp_2classes.out\n'
           '\tnew file:   out/badnet_nad_efficientnet_ffpp_2classes.out\n'
           '\tnew file:   out/generate_ffpp_with_2_classes.out\n'
           '\tnew file:   '
           'record/badnet_attack_efficientnet_ffpp_2classes/acc_like_metric_plots.png\n'
           '\tnew file:   '
           'record/badnet_attack_efficientnet_ffpp_2classes/attack_df.csv\n'
           '\tnew file:   '
           'record/badnet_attack_efficientnet_ffpp_2classes/attack_df_summary.csv\n'
           '\tnew file:   '
           'record/badnet_attack_efficientnet_ffpp_2classes/defense/abl/pre_train_acc_like_metric_plots.png\n'
           '\tnew file:   '
           'record/badnet_attack_efficientnet_ffpp_2classes/defense/abl/pre_train_df.csv\n'
           '\tnew file:   '
           'record/badnet_attack_efficientnet_ffpp_2classes/defense/abl/pre_train_loss_metric_plots.png\n'
           '\tnew file:   '
           'record/badnet_attack_efficientnet_ffpp_2classes/defense/i-bau/i-bau_acc_like_metric_plots.png\n'
           '\tnew file:   '
           'record/badnet_attack_efficientnet_ffpp_2classes/defense/i-bau/i-bau_loss_metric_plots.png\n'
           '\tnew file:   '
           'record/badnet_attack_efficientnet_ffpp_2classes/defense/i-bau/log/index.txt\n'
           '\tnew file:   '
           'record/badnet_attack_efficientnet_ffpp_2classes/defense/nad/acc_like_metric_plots.png\n'
           '\tnew file:   '
           'record/badnet_attack_efficientnet_ffpp_2classes/defense/nad/log/index.txt\n'
           '\tnew file:   '
           'record/badnet_attack_efficientnet_ffpp_2classes/defense/nad/loss_metric_plots.png\n'
           '\tnew file:   '
           'record/badnet_attack_efficientnet_ffpp_2classes/defense/nad/nad_df.csv\n'
           '\tnew file:   '
           'record/badnet_attack_efficientnet_ffpp_2classes/defense/nad/nad_df_summary.csv\n'
           '\tnew file:   '
           'record/badnet_attack_efficientnet_ffpp_2classes/defense/nad/nad_te_df.csv\n'
           '\tnew file:   '
           'record/badnet_attack_efficientnet_ffpp_2classes/defense/nad/nad_te_df_summary.csv\n'
           '\tnew file:   '
           'record/badnet_attack_efficientnet_ffpp_2classes/loss_metric_plots.png\n'
           '\n'
           'Changes not staged for commit:\n'
           '  (use "git add <file>..." to update what will be committed)\n'
           '  (use "git checkout -- <file>..." to discard changes in working '
           'directory)\n'
           '\n'
           '\tmodified:   out/badnet_abl_efficientnet_ffpp_2classes.out\n'
           '\tmodified:   out/badnet_nad_efficientnet_ffpp_2classes.out'}
INFO:root:----------- Network Initialization --------------
2024-11-27:11:57:36 [INFO    ] [nad.py:745] ----------- Network Initialization --------------
INFO:root:finished teacher student init...
2024-11-27:11:57:40 [INFO    ] [nad.py:757] finished teacher student init...
INFO:root:finished student student init...
2024-11-27:11:57:40 [INFO    ] [nad.py:769] finished student student init...
INFO:root:save file format is .png
2024-11-27:11:57:40 [INFO    ] [bd_dataset_v2.py:133] save file format is .png
INFO:root:Do NOT set the settings/parameters attr manually after you start training!
You may break the relationship between them.
2024-11-27:11:57:41 [INFO    ] [trainer_cls.py:972] Do NOT set the settings/parameters attr manually after you start training!
You may break the relationship between them.
loading...
loading...
INFO:root:('epoch_now:0, '
 'batch_now:0self.amp:True,self.criterion:CrossEntropyLoss(),self.optimizer:SGD '
 '(\n'
 'Parameter Group 0\n'
 '    dampening: 0\n'
 '    initial_lr: 0.01\n'
 '    lr: 0.01\n'
 '    maximize: False\n'
 '    momentum: 0.9\n'
 '    nesterov: False\n'
 '    weight_decay: 0.0005\n'
 "),self.scheduler:{'T_max': 100, 'eta_min': 0, 'base_lrs': [0.01], "
 "'last_epoch': 0, '_step_count': 1, 'verbose': False, "
 "'_get_lr_called_within_step': False, '_last_lr': "
 "[0.01]},self.scaler:{'scale': 65536.0, 'growth_factor': 2.0, "
 "'backoff_factor': 0.5, 'growth_interval': 2000, '_growth_tracker': 0})")
2024-11-27:11:57:43 [INFO    ] [trainer_cls.py:1030] ('epoch_now:0, '
 'batch_now:0self.amp:True,self.criterion:CrossEntropyLoss(),self.optimizer:SGD '
 '(\n'
 'Parameter Group 0\n'
 '    dampening: 0\n'
 '    initial_lr: 0.01\n'
 '    lr: 0.01\n'
 '    maximize: False\n'
 '    momentum: 0.9\n'
 '    nesterov: False\n'
 '    weight_decay: 0.0005\n'
 "),self.scheduler:{'T_max': 100, 'eta_min': 0, 'base_lrs': [0.01], "
 "'last_epoch': 0, '_step_count': 1, 'verbose': False, "
 "'_get_lr_called_within_step': False, '_last_lr': "
 "[0.01]},self.scaler:{'scale': 65536.0, 'growth_factor': 2.0, "
 "'backoff_factor': 0.5, 'growth_interval': 2000, '_growth_tracker': 0})")
INFO:root:one epoch training part done, use time = 7.0400848388671875 s
2024-11-27:11:57:50 [INFO    ] [trainer_cls.py:1489] one epoch training part done, use time = 7.0400848388671875 s
INFO:root:{'batch': 29,
 'bd_test_loss_avg_over_batch': 32955983.333333332,
 'clean_test_loss_avg_over_batch': 0.6244458908384497,
 'epoch': 0,
 'test_acc': 0.8439285714285715,
 'test_asr': 0.11285714285714285,
 'test_ra': 0.8871428571428571,
 'train_acc': 0.9952777777777778,
 'train_epoch_loss_avg_over_batch': 0.021339305403546012}
2024-11-27:11:57:52 [INFO    ] [trainer_cls.py:65] {'batch': 29,
 'bd_test_loss_avg_over_batch': 32955983.333333332,
 'clean_test_loss_avg_over_batch': 0.6244458908384497,
 'epoch': 0,
 'test_acc': 0.8439285714285715,
 'test_asr': 0.11285714285714285,
 'test_ra': 0.8871428571428571,
 'train_acc': 0.9952777777777778,
 'train_epoch_loss_avg_over_batch': 0.021339305403546012}
INFO:root:one epoch training part done, use time = 6.8994505405426025 s
2024-11-27:11:57:59 [INFO    ] [trainer_cls.py:1489] one epoch training part done, use time = 6.8994505405426025 s
INFO:root:{'batch': 29,
 'bd_test_loss_avg_over_batch': 27.115843137105305,
 'clean_test_loss_avg_over_batch': 1.400013197552074,
 'epoch': 1,
 'test_acc': 0.7742857142857142,
 'test_asr': 0.6792857142857143,
 'test_ra': 0.32071428571428573,
 'train_acc': 0.98,
 'train_epoch_loss_avg_over_batch': 0.06467105865735433}
2024-11-27:11:58:01 [INFO    ] [trainer_cls.py:65] {'batch': 29,
 'bd_test_loss_avg_over_batch': 27.115843137105305,
 'clean_test_loss_avg_over_batch': 1.400013197552074,
 'epoch': 1,
 'test_acc': 0.7742857142857142,
 'test_asr': 0.6792857142857143,
 'test_ra': 0.32071428571428573,
 'train_acc': 0.98,
 'train_epoch_loss_avg_over_batch': 0.06467105865735433}
INFO:root:one epoch training part done, use time = 6.957761764526367 s
2024-11-27:11:58:08 [INFO    ] [trainer_cls.py:1489] one epoch training part done, use time = 6.957761764526367 s
INFO:root:{'batch': 29,
 'bd_test_loss_avg_over_batch': 4.01911981900533,
 'clean_test_loss_avg_over_batch': 2.1309591477567498,
 'epoch': 2,
 'test_acc': 0.7628571428571429,
 'test_asr': 0.24214285714285713,
 'test_ra': 0.7578571428571429,
 'train_acc': 0.9044444444444445,
 'train_epoch_loss_avg_over_batch': 0.2834831039453375}
2024-11-27:11:58:11 [INFO    ] [trainer_cls.py:65] {'batch': 29,
 'bd_test_loss_avg_over_batch': 4.01911981900533,
 'clean_test_loss_avg_over_batch': 2.1309591477567498,
 'epoch': 2,
 'test_acc': 0.7628571428571429,
 'test_asr': 0.24214285714285713,
 'test_ra': 0.7578571428571429,
 'train_acc': 0.9044444444444445,
 'train_epoch_loss_avg_over_batch': 0.2834831039453375}
INFO:root:one epoch training part done, use time = 6.943406343460083 s
2024-11-27:11:58:18 [INFO    ] [trainer_cls.py:1489] one epoch training part done, use time = 6.943406343460083 s
INFO:root:{'batch': 29,
 'bd_test_loss_avg_over_batch': 2.7961730559666953,
 'clean_test_loss_avg_over_batch': 0.8379352580417286,
 'epoch': 3,
 'test_acc': 0.8053571428571429,
 'test_asr': 0.23714285714285716,
 'test_ra': 0.7628571428571429,
 'train_acc': 0.8826388888888889,
 'train_epoch_loss_avg_over_batch': 0.3044613717958845}
2024-11-27:11:58:20 [INFO    ] [trainer_cls.py:65] {'batch': 29,
 'bd_test_loss_avg_over_batch': 2.7961730559666953,
 'clean_test_loss_avg_over_batch': 0.8379352580417286,
 'epoch': 3,
 'test_acc': 0.8053571428571429,
 'test_asr': 0.23714285714285716,
 'test_ra': 0.7628571428571429,
 'train_acc': 0.8826388888888889,
 'train_epoch_loss_avg_over_batch': 0.3044613717958845}
INFO:root:one epoch training part done, use time = 6.924119472503662 s
2024-11-27:11:58:27 [INFO    ] [trainer_cls.py:1489] one epoch training part done, use time = 6.924119472503662 s
INFO:root:{'batch': 29,
 'bd_test_loss_avg_over_batch': 2.5197814305623374,
 'clean_test_loss_avg_over_batch': 0.5884336585348303,
 'epoch': 4,
 'test_acc': 0.8203571428571429,
 'test_asr': 0.305,
 'test_ra': 0.695,
 'train_acc': 0.8851388888888889,
 'train_epoch_loss_avg_over_batch': 0.2757684526772335}
2024-11-27:11:58:30 [INFO    ] [trainer_cls.py:65] {'batch': 29,
 'bd_test_loss_avg_over_batch': 2.5197814305623374,
 'clean_test_loss_avg_over_batch': 0.5884336585348303,
 'epoch': 4,
 'test_acc': 0.8203571428571429,
 'test_asr': 0.305,
 'test_ra': 0.695,
 'train_acc': 0.8851388888888889,
 'train_epoch_loss_avg_over_batch': 0.2757684526772335}
INFO:root:one epoch training part done, use time = 7.00519585609436 s
2024-11-27:11:58:37 [INFO    ] [trainer_cls.py:1489] one epoch training part done, use time = 7.00519585609436 s
INFO:root:{'batch': 29,
 'bd_test_loss_avg_over_batch': 3.2009130318959556,
 'clean_test_loss_avg_over_batch': 0.5180942605842244,
 'epoch': 5,
 'test_acc': 0.8396428571428571,
 'test_asr': 0.24071428571428571,
 'test_ra': 0.7592857142857142,
 'train_acc': 0.9419444444444445,
 'train_epoch_loss_avg_over_batch': 0.14046518119244739}
2024-11-27:11:58:39 [INFO    ] [trainer_cls.py:65] {'batch': 29,
 'bd_test_loss_avg_over_batch': 3.2009130318959556,
 'clean_test_loss_avg_over_batch': 0.5180942605842244,
 'epoch': 5,
 'test_acc': 0.8396428571428571,
 'test_asr': 0.24071428571428571,
 'test_ra': 0.7592857142857142,
 'train_acc': 0.9419444444444445,
 'train_epoch_loss_avg_over_batch': 0.14046518119244739}
INFO:root:one epoch training part done, use time = 6.800464153289795 s
2024-11-27:11:58:46 [INFO    ] [trainer_cls.py:1489] one epoch training part done, use time = 6.800464153289795 s
INFO:root:{'batch': 29,
 'bd_test_loss_avg_over_batch': 3.0434871117273965,
 'clean_test_loss_avg_over_batch': 0.5760614167560231,
 'epoch': 6,
 'test_acc': 0.8196428571428571,
 'test_asr': 0.32142857142857145,
 'test_ra': 0.6785714285714286,
 'train_acc': 0.9672222222222222,
 'train_epoch_loss_avg_over_batch': 0.09205981022838888}
2024-11-27:11:58:48 [INFO    ] [trainer_cls.py:65] {'batch': 29,
 'bd_test_loss_avg_over_batch': 3.0434871117273965,
 'clean_test_loss_avg_over_batch': 0.5760614167560231,
 'epoch': 6,
 'test_acc': 0.8196428571428571,
 'test_asr': 0.32142857142857145,
 'test_ra': 0.6785714285714286,
 'train_acc': 0.9672222222222222,
 'train_epoch_loss_avg_over_batch': 0.09205981022838888}
INFO:root:one epoch training part done, use time = 6.664374589920044 s
2024-11-27:11:58:55 [INFO    ] [trainer_cls.py:1489] one epoch training part done, use time = 6.664374589920044 s
INFO:root:{'batch': 29,
 'bd_test_loss_avg_over_batch': 3.398666262626648,
 'clean_test_loss_avg_over_batch': 0.5384342507882551,
 'epoch': 7,
 'test_acc': 0.8267857142857142,
 'test_asr': 0.21714285714285714,
 'test_ra': 0.7828571428571428,
 'train_acc': 0.9555555555555556,
 'train_epoch_loss_avg_over_batch': 0.11808169710225072}
2024-11-27:11:58:57 [INFO    ] [trainer_cls.py:65] {'batch': 29,
 'bd_test_loss_avg_over_batch': 3.398666262626648,
 'clean_test_loss_avg_over_batch': 0.5384342507882551,
 'epoch': 7,
 'test_acc': 0.8267857142857142,
 'test_asr': 0.21714285714285714,
 'test_ra': 0.7828571428571428,
 'train_acc': 0.9555555555555556,
 'train_epoch_loss_avg_over_batch': 0.11808169710225072}
INFO:root:one epoch training part done, use time = 6.812089681625366 s
2024-11-27:11:59:05 [INFO    ] [trainer_cls.py:1489] one epoch training part done, use time = 6.812089681625366 s
INFO:root:{'batch': 29,
 'bd_test_loss_avg_over_batch': 3.219137946764628,
 'clean_test_loss_avg_over_batch': 0.5773523043502461,
 'epoch': 8,
 'test_acc': 0.8235714285714286,
 'test_asr': 0.2835714285714286,
 'test_ra': 0.7164285714285714,
 'train_acc': 0.9656944444444444,
 'train_epoch_loss_avg_over_batch': 0.09631529874328909}
2024-11-27:11:59:07 [INFO    ] [trainer_cls.py:65] {'batch': 29,
 'bd_test_loss_avg_over_batch': 3.219137946764628,
 'clean_test_loss_avg_over_batch': 0.5773523043502461,
 'epoch': 8,
 'test_acc': 0.8235714285714286,
 'test_asr': 0.2835714285714286,
 'test_ra': 0.7164285714285714,
 'train_acc': 0.9656944444444444,
 'train_epoch_loss_avg_over_batch': 0.09631529874328909}
INFO:root:one epoch training part done, use time = 6.933173656463623 s
2024-11-27:11:59:14 [INFO    ] [trainer_cls.py:1489] one epoch training part done, use time = 6.933173656463623 s
INFO:root:{'batch': 29,
 'bd_test_loss_avg_over_batch': 3.6338425079981485,
 'clean_test_loss_avg_over_batch': 0.5787450102242556,
 'epoch': 9,
 'test_acc': 0.84,
 'test_asr': 0.2571428571428571,
 'test_ra': 0.7428571428571429,
 'train_acc': 0.9659722222222222,
 'train_epoch_loss_avg_over_batch': 0.08979085845680072}
2024-11-27:11:59:16 [INFO    ] [trainer_cls.py:65] {'batch': 29,
 'bd_test_loss_avg_over_batch': 3.6338425079981485,
 'clean_test_loss_avg_over_batch': 0.5787450102242556,
 'epoch': 9,
 'test_acc': 0.84,
 'test_asr': 0.2571428571428571,
 'test_ra': 0.7428571428571429,
 'train_acc': 0.9659722222222222,
 'train_epoch_loss_avg_over_batch': 0.08979085845680072}
INFO:root:----------- Train Initialization --------------
2024-11-27:11:59:17 [INFO    ] [nad.py:838] ----------- Train Initialization --------------
INFO:root:Do NOT set the settings/parameters attr manually after you start training!
You may break the relationship between them.
2024-11-27:11:59:17 [INFO    ] [trainer_cls.py:972] Do NOT set the settings/parameters attr manually after you start training!
You may break the relationship between them.
INFO:root:('epoch_now:0, '
 'batch_now:0self.amp:True,self.criterion:CrossEntropyLoss(),self.optimizer:SGD '
 '(\n'
 'Parameter Group 0\n'
 '    dampening: 0\n'
 '    initial_lr: 0.01\n'
 '    lr: 0.01\n'
 '    maximize: False\n'
 '    momentum: 0.9\n'
 '    nesterov: False\n'
 '    weight_decay: 0.0005\n'
 "),self.scheduler:{'T_max': 100, 'eta_min': 0, 'base_lrs': [0.01], "
 "'last_epoch': 0, '_step_count': 1, 'verbose': False, "
 "'_get_lr_called_within_step': False, '_last_lr': "
 "[0.01]},self.scaler:{'scale': 65536.0, 'growth_factor': 2.0, "
 "'backoff_factor': 0.5, 'growth_interval': 2000, '_growth_tracker': 0})")
2024-11-27:11:59:17 [INFO    ] [trainer_cls.py:1030] ('epoch_now:0, '
 'batch_now:0self.amp:True,self.criterion:CrossEntropyLoss(),self.optimizer:SGD '
 '(\n'
 'Parameter Group 0\n'
 '    dampening: 0\n'
 '    initial_lr: 0.01\n'
 '    lr: 0.01\n'
 '    maximize: False\n'
 '    momentum: 0.9\n'
 '    nesterov: False\n'
 '    weight_decay: 0.0005\n'
 "),self.scheduler:{'T_max': 100, 'eta_min': 0, 'base_lrs': [0.01], "
 "'last_epoch': 0, '_step_count': 1, 'verbose': False, "
 "'_get_lr_called_within_step': False, '_last_lr': "
 "[0.01]},self.scaler:{'scale': 65536.0, 'growth_factor': 2.0, "
 "'backoff_factor': 0.5, 'growth_interval': 2000, '_growth_tracker': 0})")
INFO:root:epoch: 0  lr: 0.0100
2024-11-27:11:59:17 [INFO    ] [nad.py:86] epoch: 0  lr: 0.0100
WARNING:root:zero len array in func all_acc(), return None!
2024-11-27:11:59:26 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
WARNING:root:zero len array in func all_acc(), return None!
2024-11-27:11:59:26 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
INFO:root:Epoch0: Loss:1.2814042149111629 Training Acc:99.04166666666667(7131/7200)
2024-11-27:11:59:26 [INFO    ] [nad.py:546] Epoch0: Loss:1.2814042149111629 Training Acc:99.04166666666667(7131/7200)
INFO:root:{'batch': 0,
 'bd_test_loss_avg_over_batch': 12.417691866556803,
 'clean_test_loss_avg_over_batch': 0.8680389469320123,
 'epoch': 0,
 'test_acc': 0.8096428571428571,
 'test_asr': 0.8085714285714286,
 'test_ra': 0.19142857142857142,
 'train_acc': 0.9904166666666666,
 'train_epoch_loss_avg_over_batch': 0.04418635223831596}
2024-11-27:11:59:28 [INFO    ] [trainer_cls.py:65] {'batch': 0,
 'bd_test_loss_avg_over_batch': 12.417691866556803,
 'clean_test_loss_avg_over_batch': 0.8680389469320123,
 'epoch': 0,
 'test_acc': 0.8096428571428571,
 'test_asr': 0.8085714285714286,
 'test_ra': 0.19142857142857142,
 'train_acc': 0.9904166666666666,
 'train_epoch_loss_avg_over_batch': 0.04418635223831596}
INFO:root:epoch: 1  lr: 0.0100
2024-11-27:11:59:28 [INFO    ] [nad.py:86] epoch: 1  lr: 0.0100
WARNING:root:zero len array in func all_acc(), return None!
2024-11-27:11:59:36 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
WARNING:root:zero len array in func all_acc(), return None!
2024-11-27:11:59:36 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
INFO:root:Epoch1: Loss:8.490467466413975 Training Acc:90.16666666666667(6492/7200)
2024-11-27:11:59:36 [INFO    ] [nad.py:546] Epoch1: Loss:8.490467466413975 Training Acc:90.16666666666667(6492/7200)
INFO:root:{'batch': 0,
 'bd_test_loss_avg_over_batch': 2.773296515146891,
 'clean_test_loss_avg_over_batch': 1.0032459714195945,
 'epoch': 0,
 'test_acc': 0.8125,
 'test_asr': 0.28785714285714287,
 'test_ra': 0.7121428571428572,
 'train_acc': 0.9016666666666666,
 'train_epoch_loss_avg_over_batch': 0.29277474022117156}
2024-11-27:11:59:39 [INFO    ] [trainer_cls.py:65] {'batch': 0,
 'bd_test_loss_avg_over_batch': 2.773296515146891,
 'clean_test_loss_avg_over_batch': 1.0032459714195945,
 'epoch': 0,
 'test_acc': 0.8125,
 'test_asr': 0.28785714285714287,
 'test_ra': 0.7121428571428572,
 'train_acc': 0.9016666666666666,
 'train_epoch_loss_avg_over_batch': 0.29277474022117156}
INFO:root:epoch: 2  lr: 0.0100
2024-11-27:11:59:39 [INFO    ] [nad.py:86] epoch: 2  lr: 0.0100
WARNING:root:zero len array in func all_acc(), return None!
2024-11-27:11:59:47 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
WARNING:root:zero len array in func all_acc(), return None!
2024-11-27:11:59:47 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
INFO:root:Epoch2: Loss:8.603501431643963 Training Acc:88.36111111111111(6362/7200)
2024-11-27:11:59:47 [INFO    ] [nad.py:546] Epoch2: Loss:8.603501431643963 Training Acc:88.36111111111111(6362/7200)
INFO:root:{'batch': 0,
 'bd_test_loss_avg_over_batch': 3.250637173652649,
 'clean_test_loss_avg_over_batch': 0.4264088137583299,
 'epoch': 0,
 'test_acc': 0.8196428571428571,
 'test_asr': 0.15142857142857144,
 'test_ra': 0.8485714285714285,
 'train_acc': 0.8836111111111111,
 'train_epoch_loss_avg_over_batch': 0.2966724631601366}
2024-11-27:11:59:49 [INFO    ] [trainer_cls.py:65] {'batch': 0,
 'bd_test_loss_avg_over_batch': 3.250637173652649,
 'clean_test_loss_avg_over_batch': 0.4264088137583299,
 'epoch': 0,
 'test_acc': 0.8196428571428571,
 'test_asr': 0.15142857142857144,
 'test_ra': 0.8485714285714285,
 'train_acc': 0.8836111111111111,
 'train_epoch_loss_avg_over_batch': 0.2966724631601366}
INFO:root:epoch: 3  lr: 0.0100
2024-11-27:11:59:50 [INFO    ] [nad.py:86] epoch: 3  lr: 0.0100
WARNING:root:zero len array in func all_acc(), return None!
2024-11-27:11:59:58 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
WARNING:root:zero len array in func all_acc(), return None!
2024-11-27:11:59:58 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
INFO:root:Epoch3: Loss:4.818388484418392 Training Acc:93.06944444444444(6701/7200)
2024-11-27:11:59:58 [INFO    ] [nad.py:546] Epoch3: Loss:4.818388484418392 Training Acc:93.06944444444444(6701/7200)
INFO:root:{'batch': 0,
 'bd_test_loss_avg_over_batch': 3.4098066091537476,
 'clean_test_loss_avg_over_batch': 0.4480964920737527,
 'epoch': 0,
 'test_acc': 0.8271428571428572,
 'test_asr': 0.18928571428571428,
 'test_ra': 0.8107142857142857,
 'train_acc': 0.9306944444444445,
 'train_epoch_loss_avg_over_batch': 0.16615132704891009}
2024-11-27:12:00:00 [INFO    ] [trainer_cls.py:65] {'batch': 0,
 'bd_test_loss_avg_over_batch': 3.4098066091537476,
 'clean_test_loss_avg_over_batch': 0.4480964920737527,
 'epoch': 0,
 'test_acc': 0.8271428571428572,
 'test_asr': 0.18928571428571428,
 'test_ra': 0.8107142857142857,
 'train_acc': 0.9306944444444445,
 'train_epoch_loss_avg_over_batch': 0.16615132704891009}
INFO:root:epoch: 4  lr: 0.0100
2024-11-27:12:00:00 [INFO    ] [nad.py:86] epoch: 4  lr: 0.0100
WARNING:root:zero len array in func all_acc(), return None!
2024-11-27:12:00:08 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
WARNING:root:zero len array in func all_acc(), return None!
2024-11-27:12:00:08 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
INFO:root:Epoch4: Loss:3.314656600356102 Training Acc:95.80555555555556(6898/7200)
2024-11-27:12:00:08 [INFO    ] [nad.py:546] Epoch4: Loss:3.314656600356102 Training Acc:95.80555555555556(6898/7200)
INFO:root:{'batch': 0,
 'bd_test_loss_avg_over_batch': 3.818351904551188,
 'clean_test_loss_avg_over_batch': 0.4921648177233609,
 'epoch': 0,
 'test_acc': 0.8496428571428571,
 'test_asr': 0.20642857142857143,
 'test_ra': 0.7935714285714286,
 'train_acc': 0.9580555555555555,
 'train_epoch_loss_avg_over_batch': 0.11429850346055524}
2024-11-27:12:00:10 [INFO    ] [trainer_cls.py:65] {'batch': 0,
 'bd_test_loss_avg_over_batch': 3.818351904551188,
 'clean_test_loss_avg_over_batch': 0.4921648177233609,
 'epoch': 0,
 'test_acc': 0.8496428571428571,
 'test_asr': 0.20642857142857143,
 'test_ra': 0.7935714285714286,
 'train_acc': 0.9580555555555555,
 'train_epoch_loss_avg_over_batch': 0.11429850346055524}
INFO:root:epoch: 5  lr: 0.0100
2024-11-27:12:00:11 [INFO    ] [nad.py:86] epoch: 5  lr: 0.0100
WARNING:root:zero len array in func all_acc(), return None!
2024-11-27:12:00:19 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
WARNING:root:zero len array in func all_acc(), return None!
2024-11-27:12:00:19 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
INFO:root:Epoch5: Loss:3.6319787688553333 Training Acc:95.31944444444444(6863/7200)
2024-11-27:12:00:19 [INFO    ] [nad.py:546] Epoch5: Loss:3.6319787688553333 Training Acc:95.31944444444444(6863/7200)
INFO:root:{'batch': 0,
 'bd_test_loss_avg_over_batch': 4.09905469417572,
 'clean_test_loss_avg_over_batch': 0.4643134799870578,
 'epoch': 0,
 'test_acc': 0.8578571428571429,
 'test_asr': 0.17857142857142858,
 'test_ra': 0.8214285714285714,
 'train_acc': 0.9531944444444445,
 'train_epoch_loss_avg_over_batch': 0.12524064720190806}
2024-11-27:12:00:21 [INFO    ] [trainer_cls.py:65] {'batch': 0,
 'bd_test_loss_avg_over_batch': 4.09905469417572,
 'clean_test_loss_avg_over_batch': 0.4643134799870578,
 'epoch': 0,
 'test_acc': 0.8578571428571429,
 'test_asr': 0.17857142857142858,
 'test_ra': 0.8214285714285714,
 'train_acc': 0.9531944444444445,
 'train_epoch_loss_avg_over_batch': 0.12524064720190806}
INFO:root:epoch: 6  lr: 0.0100
2024-11-27:12:00:21 [INFO    ] [nad.py:86] epoch: 6  lr: 0.0100
WARNING:root:zero len array in func all_acc(), return None!
2024-11-27:12:00:29 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
WARNING:root:zero len array in func all_acc(), return None!
2024-11-27:12:00:29 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
INFO:root:Epoch6: Loss:2.1814752519130707 Training Acc:97.40277777777777(7013/7200)
2024-11-27:12:00:29 [INFO    ] [nad.py:546] Epoch6: Loss:2.1814752519130707 Training Acc:97.40277777777777(7013/7200)
INFO:root:{'batch': 0,
 'bd_test_loss_avg_over_batch': 4.249099810918172,
 'clean_test_loss_avg_over_batch': 0.4423120048913089,
 'epoch': 0,
 'test_acc': 0.8617857142857143,
 'test_asr': 0.1692857142857143,
 'test_ra': 0.8307142857142857,
 'train_acc': 0.9740277777777778,
 'train_epoch_loss_avg_over_batch': 0.07522328454872658}
2024-11-27:12:00:32 [INFO    ] [trainer_cls.py:65] {'batch': 0,
 'bd_test_loss_avg_over_batch': 4.249099810918172,
 'clean_test_loss_avg_over_batch': 0.4423120048913089,
 'epoch': 0,
 'test_acc': 0.8617857142857143,
 'test_asr': 0.1692857142857143,
 'test_ra': 0.8307142857142857,
 'train_acc': 0.9740277777777778,
 'train_epoch_loss_avg_over_batch': 0.07522328454872658}
INFO:root:epoch: 7  lr: 0.0100
2024-11-27:12:00:32 [INFO    ] [nad.py:86] epoch: 7  lr: 0.0100
WARNING:root:zero len array in func all_acc(), return None!
2024-11-27:12:00:40 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
WARNING:root:zero len array in func all_acc(), return None!
2024-11-27:12:00:40 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
INFO:root:Epoch7: Loss:1.6254710778594017 Training Acc:98.04166666666667(7059/7200)
2024-11-27:12:00:40 [INFO    ] [nad.py:546] Epoch7: Loss:1.6254710778594017 Training Acc:98.04166666666667(7059/7200)
INFO:root:{'batch': 0,
 'bd_test_loss_avg_over_batch': 3.5288518269856772,
 'clean_test_loss_avg_over_batch': 0.5186171314933083,
 'epoch': 0,
 'test_acc': 0.8435714285714285,
 'test_asr': 0.205,
 'test_ra': 0.795,
 'train_acc': 0.9804166666666667,
 'train_epoch_loss_avg_over_batch': 0.05605072682273799}
2024-11-27:12:00:42 [INFO    ] [trainer_cls.py:65] {'batch': 0,
 'bd_test_loss_avg_over_batch': 3.5288518269856772,
 'clean_test_loss_avg_over_batch': 0.5186171314933083,
 'epoch': 0,
 'test_acc': 0.8435714285714285,
 'test_asr': 0.205,
 'test_ra': 0.795,
 'train_acc': 0.9804166666666667,
 'train_epoch_loss_avg_over_batch': 0.05605072682273799}
INFO:root:epoch: 8  lr: 0.0100
2024-11-27:12:00:43 [INFO    ] [nad.py:86] epoch: 8  lr: 0.0100
WARNING:root:zero len array in func all_acc(), return None!
2024-11-27:12:00:50 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
WARNING:root:zero len array in func all_acc(), return None!
2024-11-27:12:00:50 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
INFO:root:Epoch8: Loss:1.3256875462830067 Training Acc:98.56944444444444(7097/7200)
2024-11-27:12:00:50 [INFO    ] [nad.py:546] Epoch8: Loss:1.3256875462830067 Training Acc:98.56944444444444(7097/7200)
INFO:root:{'batch': 0,
 'bd_test_loss_avg_over_batch': 3.8935334285100303,
 'clean_test_loss_avg_over_batch': 0.5628151514313438,
 'epoch': 0,
 'test_acc': 0.8375,
 'test_asr': 0.20285714285714285,
 'test_ra': 0.7971428571428572,
 'train_acc': 0.9856944444444444,
 'train_epoch_loss_avg_over_batch': 0.04571336366493126}
2024-11-27:12:00:52 [INFO    ] [trainer_cls.py:65] {'batch': 0,
 'bd_test_loss_avg_over_batch': 3.8935334285100303,
 'clean_test_loss_avg_over_batch': 0.5628151514313438,
 'epoch': 0,
 'test_acc': 0.8375,
 'test_asr': 0.20285714285714285,
 'test_ra': 0.7971428571428572,
 'train_acc': 0.9856944444444444,
 'train_epoch_loss_avg_over_batch': 0.04571336366493126}
INFO:root:epoch: 9  lr: 0.0100
2024-11-27:12:00:52 [INFO    ] [nad.py:86] epoch: 9  lr: 0.0100
WARNING:root:zero len array in func all_acc(), return None!
2024-11-27:12:01:01 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
WARNING:root:zero len array in func all_acc(), return None!
2024-11-27:12:01:01 [WARNING ] [trainer_cls.py:590] zero len array in func all_acc(), return None!
INFO:root:Epoch9: Loss:1.5785458972677588 Training Acc:98.08333333333333(7062/7200)
2024-11-27:12:01:01 [INFO    ] [nad.py:546] Epoch9: Loss:1.5785458972677588 Training Acc:98.08333333333333(7062/7200)
INFO:root:{'batch': 0,
 'bd_test_loss_avg_over_batch': 3.7535349130630493,
 'clean_test_loss_avg_over_batch': 0.5789114047180522,
 'epoch': 0,
 'test_acc': 0.8507142857142858,
 'test_asr': 0.21285714285714286,
 'test_ra': 0.7871428571428571,
 'train_acc': 0.9808333333333333,
 'train_epoch_loss_avg_over_batch': 0.054432617147164096}
2024-11-27:12:01:03 [INFO    ] [trainer_cls.py:65] {'batch': 0,
 'bd_test_loss_avg_over_batch': 3.7535349130630493,
 'clean_test_loss_avg_over_batch': 0.5789114047180522,
 'epoch': 0,
 'test_acc': 0.8507142857142858,
 'test_asr': 0.21285714285714286,
 'test_ra': 0.7871428571428571,
 'train_acc': 0.9808333333333333,
 'train_epoch_loss_avg_over_batch': 0.054432617147164096}
INFO:root:saving...
2024-11-27:12:01:04 [INFO    ] [save_load_attack.py:176] saving...
