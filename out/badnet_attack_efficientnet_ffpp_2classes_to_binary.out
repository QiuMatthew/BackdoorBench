/home/fmg/yuran/miniconda3/envs/backdoorbenchv2/lib/python3.8/site-packages/torchvision/io/image.py:13: UserWarning: Failed to load image Python extension: libc10_hip.so: cannot open shared object file: No such file or directory
  warn(f"Failed to load image Python extension: {e}")
INFO:root:{'amp': False,
 'attack': 'badnet',
 'attack_label_trans': 'all2one',
 'attack_target': 0,
 'batch_size': 128,
 'bd_yaml_path': './config/attack/badnet/default.yaml',
 'client_optimizer': 'sgd',
 'dataset': 'ffpp_2classes',
 'dataset_path': './data/ffpp_2classes',
 'device': 'cuda:0',
 'epochs': 100,
 'frequency_save': 0,
 'img_size': (64, 64, 3),
 'input_channel': 3,
 'input_height': 64,
 'input_width': 64,
 'lr': 0.01,
 'lr_scheduler': 'CosineAnnealingLR',
 'model': 'efficientnet_b3',
 'non_blocking': True,
 'num_classes': 2,
 'num_workers': 4,
 'patch_mask_path': './resource/badnet/trigger_image.png',
 'pin_memory': True,
 'pratio': 0.1,
 'prefetch': False,
 'random_seed': 0,
 'save_folder_name': 'badnet_attack_efficientnet_ffpp_2classes_to_binary',
 'save_path': './record/badnet_attack_efficientnet_ffpp_2classes_to_binary',
 'sgd_momentum': 0.9,
 'terminal_info': ['./attack/badnet.py',
                   '--yaml_path',
                   './config/attack/prototype/cifar10.yaml',
                   '--model',
                   'efficientnet_b3',
                   '--dataset',
                   'ffpp_2classes',
                   '--patch_mask_path',
                   './resource/badnet/trigger_image.png',
                   '--save_folder_name',
                   'badnet_attack_efficientnet_ffpp_2classes_to_binary'],
 'wd': 0.0005,
 'yaml_path': './config/attack/prototype/cifar10.yaml'}
2024-12-24:00:13:42 [INFO    ] [prototype.py:124] {'amp': False,
 'attack': 'badnet',
 'attack_label_trans': 'all2one',
 'attack_target': 0,
 'batch_size': 128,
 'bd_yaml_path': './config/attack/badnet/default.yaml',
 'client_optimizer': 'sgd',
 'dataset': 'ffpp_2classes',
 'dataset_path': './data/ffpp_2classes',
 'device': 'cuda:0',
 'epochs': 100,
 'frequency_save': 0,
 'img_size': (64, 64, 3),
 'input_channel': 3,
 'input_height': 64,
 'input_width': 64,
 'lr': 0.01,
 'lr_scheduler': 'CosineAnnealingLR',
 'model': 'efficientnet_b3',
 'non_blocking': True,
 'num_classes': 2,
 'num_workers': 4,
 'patch_mask_path': './resource/badnet/trigger_image.png',
 'pin_memory': True,
 'pratio': 0.1,
 'prefetch': False,
 'random_seed': 0,
 'save_folder_name': 'badnet_attack_efficientnet_ffpp_2classes_to_binary',
 'save_path': './record/badnet_attack_efficientnet_ffpp_2classes_to_binary',
 'sgd_momentum': 0.9,
 'terminal_info': ['./attack/badnet.py',
                   '--yaml_path',
                   './config/attack/prototype/cifar10.yaml',
                   '--model',
                   'efficientnet_b3',
                   '--dataset',
                   'ffpp_2classes',
                   '--patch_mask_path',
                   './resource/badnet/trigger_image.png',
                   '--save_folder_name',
                   'badnet_attack_efficientnet_ffpp_2classes_to_binary'],
 'wd': 0.0005,
 'yaml_path': './config/attack/prototype/cifar10.yaml'}
DEBUG:root:Only INFO or above level log will show in cmd. DEBUG level log only will show in log file.
DEBUG:root:{'git hash': None,
 'last 3 log': 'commit 024056b20df53b8c8115e4995426bcfdba2a2e88\n'
               'Author: QiuMatthew <q_masio@outlook.com>\n'
               'Date:   Mon Dec 23 19:07:19 2024 +0900\n'
               '\n'
               '    edit script for 2 classes\n'
               '\n'
               'commit 504a765718527880673a616e3c65b00b63f20f4b\n'
               'Author: QiuMatthew <q_masio@outlook.com>\n'
               'Date:   Mon Dec 23 18:55:43 2024 +0900\n'
               '\n'
               '    badnet attack with merged metrics\n'
               '\n'
               'commit baafb796919dbe5ea0faf001b1e1287def93a2ff\n'
               'Author: QiuMatthew <uzenkyu@gmail.com>\n'
               'Date:   Mon Dec 23 01:31:30 2024 +0900\n'
               '\n'
               '    new script: badnet attack with merged fake classes metric',
 'status': 'On branch modify-metric\n'
           "Your branch is up to date with 'origin/modify-metric'.\n"
           '\n'
           'Changes not staged for commit:\n'
           '  (use "git add/rm <file>..." to update what will be committed)\n'
           '  (use "git checkout -- <file>..." to discard changes in working '
           'directory)\n'
           '\n'
           '\tmodified:   '
           'out/badnet_attack_efficientnet_ffpp_2classes_to_binary.out\n'
           '\tdeleted:    '
           'record/badnet_attack_efficientnet_ffpp_2classes_to_binary/acc_like_metric_plots.png\n'
           '\tdeleted:    '
           'record/badnet_attack_efficientnet_ffpp_2classes_to_binary/attack_df.csv\n'
           '\tdeleted:    '
           'record/badnet_attack_efficientnet_ffpp_2classes_to_binary/attack_df_summary.csv\n'
           '\tdeleted:    '
           'record/badnet_attack_efficientnet_ffpp_2classes_to_binary/loss_metric_plots.png\n'
           '\n'
           'no changes added to commit (use "git add" and/or "git commit -a")'}
INFO:root:stage1 start
2024-12-24:00:13:43 [INFO    ] [badnet.py:111] stage1 start
WARNING:root:For ImageNet, this script need large size of RAM to load the whole dataset.
2024-12-24:00:13:43 [WARNING ] [dataset_and_transform_generate.py:359] For ImageNet, this script need large size of RAM to load the whole dataset.
DEBUG:root:We will provide a different script later to handle this problem for backdoor ImageNet.
DEBUG:root:dataset_and_transform_generate done
DEBUG:root:get .targets
DEBUG:root:get .targets
DEBUG:root:Reminder: plz note that if p_num or pratio exceed the number of possible candidate samples
 then only maximum number of samples will be applied
DEBUG:root:Reminder: priority p_num > pratio, and choosing fix number of sample is prefered if possible 
INFO:root:poison num:14400.0,real pratio:0.1
2024-12-24:00:16:22 [INFO    ] [backdoor_generate_poison_index.py:61] poison num:14400.0,real pratio:0.1
DEBUG:root:poison train idx is saved
INFO:root:save file format is .png
2024-12-24:00:16:22 [INFO    ] [bd_dataset_v2.py:133] save file format is .png
prepro_backdoor:   0%|          | 0/144000 [00:00<?, ?it/s]prepro_backdoor:   0%|          | 303/144000 [00:00<00:47, 3017.54it/s]prepro_backdoor:   0%|          | 661/144000 [00:00<00:42, 3337.70it/s]prepro_backdoor:   1%|          | 1013/144000 [00:00<00:41, 3408.14it/s]prepro_backdoor:   1%|          | 1481/144000 [00:00<00:36, 3888.54it/s]prepro_backdoor:   1%|▏         | 1897/144000 [00:00<00:35, 3968.39it/s]prepro_backdoor:   2%|▏         | 2350/144000 [00:00<00:34, 4141.32it/s]prepro_backdoor:   2%|▏         | 2779/144000 [00:00<00:33, 4180.46it/s]prepro_backdoor:   2%|▏         | 3197/144000 [00:00<00:47, 2944.55it/s]prepro_backdoor:   2%|▏         | 3540/144000 [00:01<00:46, 3047.21it/s]prepro_backdoor:   3%|▎         | 3881/144000 [00:01<00:44, 3120.76it/s]prepro_backdoor:   3%|▎         | 4420/144000 [00:01<00:37, 3713.89it/s]prepro_backdoor:   3%|▎         | 4843/144000 [00:01<00:36, 3846.44it/s]prepro_backdoor:   4%|▎         | 5248/144000 [00:01<00:36, 3803.31it/s]prepro_backdoor:   4%|▍         | 5653/144000 [00:01<00:35, 3863.64it/s]prepro_backdoor:   4%|▍         | 6050/144000 [00:01<00:36, 3796.53it/s]prepro_backdoor:   4%|▍         | 6437/144000 [00:01<00:37, 3671.31it/s]prepro_backdoor:   5%|▍         | 6810/144000 [00:01<00:46, 2919.89it/s]prepro_backdoor:   5%|▌         | 7244/144000 [00:02<00:42, 3249.23it/s]prepro_backdoor:   5%|▌         | 7607/144000 [00:02<00:40, 3337.75it/s]prepro_backdoor:   6%|▌         | 8014/144000 [00:02<00:38, 3514.94it/s]prepro_backdoor:   6%|▌         | 8382/144000 [00:02<00:38, 3559.85it/s]prepro_backdoor:   6%|▌         | 8765/144000 [00:02<00:37, 3628.71it/s]prepro_backdoor:   6%|▋         | 9238/144000 [00:02<00:34, 3940.40it/s]prepro_backdoor:   7%|▋         | 9680/144000 [00:02<00:33, 4051.24it/s]prepro_backdoor:   7%|▋         | 10091/144000 [00:02<00:34, 3888.65it/s]prepro_backdoor:   7%|▋         | 10493/144000 [00:02<00:34, 3908.60it/s]prepro_backdoor:   8%|▊         | 10888/144000 [00:03<00:47, 2778.07it/s]prepro_backdoor:   8%|▊         | 11411/144000 [00:03<00:39, 3316.16it/s]prepro_backdoor:   8%|▊         | 11793/144000 [00:03<00:39, 3384.86it/s]prepro_backdoor:   9%|▊         | 12275/144000 [00:03<00:35, 3742.63it/s]prepro_backdoor:   9%|▉         | 12681/144000 [00:03<00:35, 3749.40it/s]prepro_backdoor:   9%|▉         | 13132/144000 [00:03<00:33, 3932.79it/s]prepro_backdoor:   9%|▉         | 13573/144000 [00:03<00:32, 4053.91it/s]prepro_backdoor:  10%|▉         | 13992/144000 [00:03<00:33, 3886.21it/s]prepro_backdoor:  10%|█         | 14477/144000 [00:03<00:31, 4147.38it/s]prepro_backdoor:  10%|█         | 14901/144000 [00:04<00:31, 4062.05it/s]prepro_backdoor:  11%|█         | 15314/144000 [00:04<00:32, 3951.93it/s]prepro_backdoor:  11%|█         | 15714/144000 [00:04<00:40, 3149.72it/s]prepro_backdoor:  11%|█▏        | 16267/144000 [00:04<00:34, 3724.34it/s]prepro_backdoor:  12%|█▏        | 16673/144000 [00:04<00:33, 3794.18it/s]prepro_backdoor:  12%|█▏        | 17077/144000 [00:04<00:34, 3679.12it/s]prepro_backdoor:  12%|█▏        | 17462/144000 [00:04<00:35, 3520.04it/s]prepro_backdoor:  12%|█▏        | 17827/144000 [00:04<00:35, 3540.10it/s]prepro_backdoor:  13%|█▎        | 18215/144000 [00:05<00:34, 3626.55it/s]prepro_backdoor:  13%|█▎        | 18627/144000 [00:05<00:33, 3757.54it/s]prepro_backdoor:  13%|█▎        | 19009/144000 [00:05<00:39, 3168.68it/s]prepro_backdoor:  13%|█▎        | 19393/144000 [00:05<00:37, 3326.78it/s]prepro_backdoor:  14%|█▎        | 19742/144000 [00:05<00:43, 2850.12it/s]prepro_backdoor:  14%|█▍        | 20117/144000 [00:05<00:40, 3067.56it/s]prepro_backdoor:  14%|█▍        | 20562/144000 [00:05<00:36, 3410.66it/s]prepro_backdoor:  15%|█▍        | 20922/144000 [00:05<00:44, 2738.51it/s]prepro_backdoor:  15%|█▍        | 21244/144000 [00:06<00:43, 2850.59it/s]prepro_backdoor:  15%|█▌        | 21663/144000 [00:06<00:38, 3167.05it/s]prepro_backdoor:  15%|█▌        | 22018/144000 [00:06<00:37, 3251.44it/s]prepro_backdoor:  16%|█▌        | 22468/144000 [00:06<00:33, 3574.95it/s]prepro_backdoor:  16%|█▌        | 22842/144000 [00:06<00:34, 3476.02it/s]prepro_backdoor:  16%|█▌        | 23332/144000 [00:06<00:31, 3848.88it/s]prepro_backdoor:  16%|█▋        | 23756/144000 [00:06<00:30, 3935.39it/s]prepro_backdoor:  17%|█▋        | 24183/144000 [00:06<00:29, 4006.95it/s]prepro_backdoor:  17%|█▋        | 24590/144000 [00:06<00:31, 3804.57it/s]prepro_backdoor:  17%|█▋        | 24977/144000 [00:07<00:31, 3727.64it/s]prepro_backdoor:  18%|█▊        | 25360/144000 [00:07<00:31, 3741.47it/s]prepro_backdoor:  18%|█▊        | 25797/144000 [00:07<00:30, 3910.45it/s]prepro_backdoor:  18%|█▊        | 26249/144000 [00:07<00:29, 4060.31it/s]prepro_backdoor:  19%|█▊        | 26658/144000 [00:07<00:31, 3754.55it/s]prepro_backdoor:  19%|█▉        | 27144/144000 [00:07<00:28, 4050.18it/s]prepro_backdoor:  19%|█▉        | 27556/144000 [00:07<00:30, 3830.87it/s]prepro_backdoor:  19%|█▉        | 27957/144000 [00:07<00:37, 3134.58it/s]prepro_backdoor:  20%|█▉        | 28411/144000 [00:07<00:33, 3472.90it/s]prepro_backdoor:  20%|██        | 28872/144000 [00:08<00:30, 3756.36it/s]prepro_backdoor:  20%|██        | 29270/144000 [00:08<00:30, 3726.77it/s]prepro_backdoor:  21%|██        | 29686/144000 [00:08<00:29, 3820.03it/s]prepro_backdoor:  21%|██        | 30090/144000 [00:08<00:29, 3863.24it/s]prepro_backdoor:  21%|██        | 30485/144000 [00:08<00:29, 3868.80it/s]prepro_backdoor:  21%|██▏       | 30890/144000 [00:08<00:28, 3905.85it/s]prepro_backdoor:  22%|██▏       | 31285/144000 [00:08<00:29, 3854.57it/s]prepro_backdoor:  22%|██▏       | 31675/144000 [00:08<00:29, 3850.88it/s]prepro_backdoor:  22%|██▏       | 32063/144000 [00:08<00:36, 3050.70it/s]prepro_backdoor:  22%|██▏       | 32395/144000 [00:09<00:35, 3113.83it/s]prepro_backdoor:  23%|██▎       | 32751/144000 [00:09<00:34, 3217.58it/s]prepro_backdoor:  23%|██▎       | 33122/144000 [00:09<00:33, 3326.39it/s]prepro_backdoor:  23%|██▎       | 33491/144000 [00:09<00:32, 3403.89it/s]prepro_backdoor:  24%|██▎       | 33918/144000 [00:09<00:30, 3647.49it/s]prepro_backdoor:  24%|██▍       | 34335/144000 [00:09<00:28, 3785.68it/s]prepro_backdoor:  24%|██▍       | 34747/144000 [00:09<00:28, 3879.65it/s]prepro_backdoor:  24%|██▍       | 35162/144000 [00:09<00:27, 3944.12it/s]prepro_backdoor:  25%|██▍       | 35560/144000 [00:09<00:27, 3935.82it/s]prepro_backdoor:  25%|██▌       | 36018/144000 [00:10<00:26, 4124.50it/s]prepro_backdoor:  25%|██▌       | 36463/144000 [00:10<00:25, 4217.32it/s]prepro_backdoor:  26%|██▌       | 36899/144000 [00:10<00:28, 3819.00it/s]prepro_backdoor:  26%|██▌       | 37290/144000 [00:10<00:27, 3833.73it/s]prepro_backdoor:  26%|██▋       | 37816/144000 [00:10<00:25, 4226.12it/s]prepro_backdoor:  27%|██▋       | 38249/144000 [00:10<00:24, 4238.56it/s]prepro_backdoor:  27%|██▋       | 38701/144000 [00:10<00:24, 4293.27it/s]prepro_backdoor:  27%|██▋       | 39134/144000 [00:10<00:24, 4238.82it/s]prepro_backdoor:  27%|██▋       | 39561/144000 [00:10<00:33, 3122.93it/s]prepro_backdoor:  28%|██▊       | 39917/144000 [00:11<00:32, 3164.49it/s]prepro_backdoor:  28%|██▊       | 40281/144000 [00:11<00:31, 3276.34it/s]prepro_backdoor:  28%|██▊       | 40665/144000 [00:11<00:30, 3414.78it/s]prepro_backdoor:  29%|██▊       | 41093/144000 [00:11<00:28, 3640.63it/s]prepro_backdoor:  29%|██▉       | 41552/144000 [00:11<00:26, 3904.39it/s]prepro_backdoor:  29%|██▉       | 42065/144000 [00:11<00:24, 4225.82it/s]prepro_backdoor:  30%|██▉       | 42563/144000 [00:11<00:22, 4411.15it/s]prepro_backdoor:  30%|██▉       | 43012/144000 [00:11<00:24, 4185.63it/s]prepro_backdoor:  30%|███       | 43449/144000 [00:11<00:23, 4232.85it/s]prepro_backdoor:  30%|███       | 43878/144000 [00:12<00:24, 4160.42it/s]prepro_backdoor:  31%|███       | 44298/144000 [00:12<00:27, 3662.07it/s]prepro_backdoor:  31%|███       | 44677/144000 [00:12<00:26, 3679.23it/s]prepro_backdoor:  31%|███▏      | 45083/144000 [00:12<00:26, 3781.51it/s]prepro_backdoor:  32%|███▏      | 45535/144000 [00:12<00:24, 3977.74it/s]prepro_backdoor:  32%|███▏      | 45940/144000 [00:12<00:30, 3256.98it/s]prepro_backdoor:  32%|███▏      | 46291/144000 [00:12<00:30, 3233.50it/s]prepro_backdoor:  32%|███▏      | 46696/144000 [00:12<00:28, 3442.33it/s]prepro_backdoor:  33%|███▎      | 47056/144000 [00:12<00:29, 3270.75it/s]prepro_backdoor:  33%|███▎      | 47395/144000 [00:13<00:29, 3282.04it/s]prepro_backdoor:  33%|███▎      | 47789/144000 [00:13<00:27, 3438.26it/s]prepro_backdoor:  33%|███▎      | 48227/144000 [00:13<00:25, 3693.99it/s]prepro_backdoor:  34%|███▍      | 48620/144000 [00:13<00:25, 3757.46it/s]prepro_backdoor:  34%|███▍      | 49091/144000 [00:13<00:23, 4031.92it/s]prepro_backdoor:  34%|███▍      | 49499/144000 [00:13<00:23, 4019.98it/s]prepro_backdoor:  35%|███▍      | 49905/144000 [00:13<00:23, 3923.31it/s]prepro_backdoor:  35%|███▍      | 50300/144000 [00:13<00:24, 3760.20it/s]prepro_backdoor:  35%|███▌      | 50687/144000 [00:13<00:24, 3781.95it/s]prepro_backdoor:  35%|███▌      | 51068/144000 [00:14<00:25, 3587.93it/s]prepro_backdoor:  36%|███▌      | 51481/144000 [00:14<00:24, 3721.20it/s]prepro_backdoor:  36%|███▌      | 51950/144000 [00:14<00:23, 3987.65it/s]prepro_backdoor:  36%|███▋      | 52475/144000 [00:14<00:21, 4329.99it/s]prepro_backdoor:  37%|███▋      | 52912/144000 [00:14<00:21, 4229.02it/s]prepro_backdoor:  37%|███▋      | 53338/144000 [00:14<00:23, 3846.45it/s]prepro_backdoor:  37%|███▋      | 53762/144000 [00:14<00:22, 3941.74it/s]prepro_backdoor:  38%|███▊      | 54163/144000 [00:14<00:23, 3760.78it/s]prepro_backdoor:  38%|███▊      | 54545/144000 [00:14<00:25, 3518.92it/s]prepro_backdoor:  38%|███▊      | 55051/144000 [00:15<00:22, 3920.20it/s]prepro_backdoor:  39%|███▊      | 55510/144000 [00:15<00:21, 4100.91it/s]prepro_backdoor:  39%|███▉      | 55928/144000 [00:15<00:22, 3993.15it/s]prepro_backdoor:  39%|███▉      | 56333/144000 [00:15<00:22, 3908.52it/s]prepro_backdoor:  39%|███▉      | 56728/144000 [00:15<00:24, 3557.81it/s]prepro_backdoor:  40%|███▉      | 57174/144000 [00:15<00:22, 3795.13it/s]prepro_backdoor:  40%|███▉      | 57562/144000 [00:15<00:23, 3742.39it/s]prepro_backdoor:  40%|████      | 58047/144000 [00:15<00:21, 4029.07it/s]prepro_backdoor:  41%|████      | 58456/144000 [00:15<00:23, 3604.40it/s]prepro_backdoor:  41%|████      | 58840/144000 [00:16<00:23, 3665.66it/s]prepro_backdoor:  41%|████      | 59216/144000 [00:16<00:23, 3630.65it/s]prepro_backdoor:  41%|████▏     | 59652/144000 [00:16<00:22, 3814.00it/s]prepro_backdoor:  42%|████▏     | 60164/144000 [00:16<00:20, 4156.87it/s]prepro_backdoor:  42%|████▏     | 60585/144000 [00:16<00:20, 4159.02it/s]prepro_backdoor:  42%|████▏     | 61005/144000 [00:16<00:20, 4114.60it/s]prepro_backdoor:  43%|████▎     | 61430/144000 [00:16<00:19, 4146.31it/s]prepro_backdoor:  43%|████▎     | 61847/144000 [00:16<00:21, 3839.15it/s]prepro_backdoor:  43%|████▎     | 62261/144000 [00:16<00:20, 3908.01it/s]prepro_backdoor:  44%|████▎     | 62657/144000 [00:17<00:21, 3769.45it/s]prepro_backdoor:  44%|████▍     | 63048/144000 [00:17<00:21, 3796.84it/s]prepro_backdoor:  44%|████▍     | 63441/144000 [00:17<00:21, 3827.85it/s]prepro_backdoor:  44%|████▍     | 63879/144000 [00:17<00:20, 3966.67it/s]prepro_backdoor:  45%|████▍     | 64278/144000 [00:17<00:20, 3854.77it/s]prepro_backdoor:  45%|████▌     | 64809/144000 [00:17<00:18, 4261.13it/s]prepro_backdoor:  45%|████▌     | 65238/144000 [00:17<00:18, 4261.87it/s]prepro_backdoor:  46%|████▌     | 65667/144000 [00:17<00:18, 4123.71it/s]prepro_backdoor:  46%|████▌     | 66082/144000 [00:17<00:26, 2889.66it/s]prepro_backdoor:  46%|████▌     | 66423/144000 [00:18<00:25, 2998.43it/s]prepro_backdoor:  46%|████▋     | 66842/144000 [00:18<00:23, 3274.35it/s]prepro_backdoor:  47%|████▋     | 67221/144000 [00:18<00:22, 3402.92it/s]prepro_backdoor:  47%|████▋     | 67604/144000 [00:18<00:21, 3500.51it/s]prepro_backdoor:  47%|████▋     | 68029/144000 [00:18<00:20, 3695.10it/s]prepro_backdoor:  48%|████▊     | 68414/144000 [00:18<00:20, 3607.26it/s]prepro_backdoor:  48%|████▊     | 68786/144000 [00:18<00:22, 3405.84it/s]prepro_backdoor:  48%|████▊     | 69177/144000 [00:18<00:21, 3542.70it/s]prepro_backdoor:  48%|████▊     | 69566/144000 [00:18<00:20, 3635.47it/s]prepro_backdoor:  49%|████▊     | 69936/144000 [00:19<00:20, 3583.83it/s]prepro_backdoor:  49%|████▉     | 70299/144000 [00:19<00:26, 2777.60it/s]prepro_backdoor:  49%|████▉     | 70665/144000 [00:19<00:24, 2971.03it/s]prepro_backdoor:  49%|████▉     | 71165/144000 [00:19<00:20, 3483.51it/s]prepro_backdoor:  50%|████▉     | 71541/144000 [00:19<00:20, 3496.75it/s]prepro_backdoor:  50%|████▉     | 71950/144000 [00:19<00:19, 3652.78it/s]prepro_backdoor:  50%|█████     | 72360/144000 [00:19<00:18, 3770.77it/s]prepro_backdoor:  51%|█████     | 72807/144000 [00:19<00:17, 3964.97it/s]prepro_backdoor:  51%|█████     | 73213/144000 [00:19<00:17, 3953.18it/s]prepro_backdoor:  51%|█████     | 73615/144000 [00:20<00:18, 3787.28it/s]prepro_backdoor:  51%|█████▏    | 74000/144000 [00:20<00:18, 3787.37it/s]prepro_backdoor:  52%|█████▏    | 74383/144000 [00:20<00:20, 3340.83it/s]prepro_backdoor:  52%|█████▏    | 74729/144000 [00:20<00:23, 2889.49it/s]prepro_backdoor:  52%|█████▏    | 75135/144000 [00:20<00:21, 3174.87it/s]prepro_backdoor:  52%|█████▏    | 75471/144000 [00:20<00:21, 3118.82it/s]prepro_backdoor:  53%|█████▎    | 75896/144000 [00:20<00:19, 3406.29it/s]prepro_backdoor:  53%|█████▎    | 76249/144000 [00:20<00:24, 2777.64it/s]prepro_backdoor:  53%|█████▎    | 76562/144000 [00:21<00:23, 2858.72it/s]prepro_backdoor:  53%|█████▎    | 77027/144000 [00:21<00:20, 3298.73it/s]prepro_backdoor:  54%|█████▎    | 77378/144000 [00:21<00:20, 3315.44it/s]prepro_backdoor:  54%|█████▍    | 77955/144000 [00:21<00:16, 3968.72it/s]prepro_backdoor:  54%|█████▍    | 78388/144000 [00:21<00:16, 4062.26it/s]prepro_backdoor:  55%|█████▍    | 78807/144000 [00:21<00:17, 3771.98it/s]prepro_backdoor:  55%|█████▌    | 79208/144000 [00:21<00:16, 3830.25it/s]prepro_backdoor:  55%|█████▌    | 79631/144000 [00:21<00:16, 3927.28it/s]prepro_backdoor:  56%|█████▌    | 80032/144000 [00:21<00:16, 3942.61it/s]prepro_backdoor:  56%|█████▌    | 80432/144000 [00:22<00:16, 3942.56it/s]prepro_backdoor:  56%|█████▌    | 80830/144000 [00:22<00:17, 3628.60it/s]prepro_backdoor:  56%|█████▋    | 81200/144000 [00:22<00:24, 2576.75it/s]prepro_backdoor:  57%|█████▋    | 81640/144000 [00:22<00:21, 2963.42it/s]prepro_backdoor:  57%|█████▋    | 81982/144000 [00:22<00:20, 3069.11it/s]prepro_backdoor:  57%|█████▋    | 82444/144000 [00:22<00:17, 3459.40it/s]prepro_backdoor:  58%|█████▊    | 82890/144000 [00:22<00:16, 3722.46it/s]prepro_backdoor:  58%|█████▊    | 83394/144000 [00:22<00:14, 4061.37it/s]prepro_backdoor:  58%|█████▊    | 83821/144000 [00:23<00:15, 3982.09it/s]prepro_backdoor:  59%|█████▊    | 84268/144000 [00:23<00:14, 4108.01it/s]prepro_backdoor:  59%|█████▉    | 84711/144000 [00:23<00:14, 4198.61it/s]prepro_backdoor:  59%|█████▉    | 85140/144000 [00:23<00:14, 3951.31it/s]prepro_backdoor:  59%|█████▉    | 85544/144000 [00:23<00:14, 3948.72it/s]prepro_backdoor:  60%|█████▉    | 86109/144000 [00:23<00:13, 4418.55it/s]prepro_backdoor:  60%|██████    | 86558/144000 [00:23<00:13, 4331.54it/s]prepro_backdoor:  60%|██████    | 87042/144000 [00:23<00:12, 4470.26it/s]prepro_backdoor:  61%|██████    | 87493/144000 [00:23<00:13, 4311.86it/s]prepro_backdoor:  61%|██████    | 87928/144000 [00:23<00:13, 4272.49it/s]prepro_backdoor:  61%|██████▏   | 88358/144000 [00:24<00:13, 4272.77it/s]prepro_backdoor:  62%|██████▏   | 88858/144000 [00:24<00:12, 4471.21it/s]prepro_backdoor:  62%|██████▏   | 89307/144000 [00:24<00:16, 3360.76it/s]prepro_backdoor:  62%|██████▏   | 89697/144000 [00:24<00:15, 3470.44it/s]prepro_backdoor:  63%|██████▎   | 90196/144000 [00:24<00:13, 3843.66it/s]prepro_backdoor:  63%|██████▎   | 90609/144000 [00:24<00:15, 3460.81it/s]prepro_backdoor:  63%|██████▎   | 91089/144000 [00:24<00:13, 3792.94it/s]prepro_backdoor:  64%|██████▎   | 91618/144000 [00:24<00:12, 4176.48it/s]prepro_backdoor:  64%|██████▍   | 92058/144000 [00:25<00:12, 4182.65it/s]prepro_backdoor:  64%|██████▍   | 92492/144000 [00:25<00:12, 4076.94it/s]prepro_backdoor:  65%|██████▍   | 92934/144000 [00:25<00:12, 4149.38it/s]prepro_backdoor:  65%|██████▍   | 93422/144000 [00:25<00:11, 4329.29it/s]prepro_backdoor:  65%|██████▌   | 93865/144000 [00:25<00:11, 4338.62it/s]prepro_backdoor:  65%|██████▌   | 94304/144000 [00:25<00:11, 4282.46it/s]prepro_backdoor:  66%|██████▌   | 94761/144000 [00:25<00:11, 4342.69it/s]prepro_backdoor:  66%|██████▌   | 95198/144000 [00:25<00:11, 4165.36it/s]prepro_backdoor:  66%|██████▋   | 95618/144000 [00:25<00:13, 3660.47it/s]prepro_backdoor:  67%|██████▋   | 96024/144000 [00:26<00:12, 3746.73it/s]prepro_backdoor:  67%|██████▋   | 96423/144000 [00:26<00:12, 3811.24it/s]prepro_backdoor:  67%|██████▋   | 96812/144000 [00:26<00:12, 3759.47it/s]prepro_backdoor:  68%|██████▊   | 97214/144000 [00:26<00:12, 3824.93it/s]prepro_backdoor:  68%|██████▊   | 97601/144000 [00:26<00:12, 3749.09it/s]prepro_backdoor:  68%|██████▊   | 98008/144000 [00:26<00:11, 3836.60it/s]prepro_backdoor:  68%|██████▊   | 98395/144000 [00:26<00:11, 3844.84it/s]prepro_backdoor:  69%|██████▊   | 98782/144000 [00:26<00:12, 3758.62it/s]prepro_backdoor:  69%|██████▉   | 99181/144000 [00:26<00:11, 3805.59it/s]prepro_backdoor:  69%|██████▉   | 99583/144000 [00:26<00:11, 3857.62it/s]prepro_backdoor:  69%|██████▉   | 99996/144000 [00:27<00:11, 3934.24it/s]prepro_backdoor:  70%|██████▉   | 100434/144000 [00:27<00:10, 4065.04it/s]prepro_backdoor:  70%|███████   | 100941/144000 [00:27<00:09, 4357.14it/s]prepro_backdoor:  70%|███████   | 101390/144000 [00:27<00:09, 4379.31it/s]prepro_backdoor:  71%|███████   | 101833/144000 [00:27<00:09, 4391.08it/s]prepro_backdoor:  71%|███████   | 102273/144000 [00:27<00:09, 4231.48it/s]prepro_backdoor:  71%|███████▏  | 102698/144000 [00:27<00:09, 4164.57it/s]prepro_backdoor:  72%|███████▏  | 103116/144000 [00:27<00:10, 3787.51it/s]prepro_backdoor:  72%|███████▏  | 103504/144000 [00:27<00:10, 3801.34it/s]prepro_backdoor:  72%|███████▏  | 103924/144000 [00:28<00:10, 3911.18it/s]prepro_backdoor:  72%|███████▏  | 104381/144000 [00:28<00:09, 4093.59it/s]prepro_backdoor:  73%|███████▎  | 104795/144000 [00:28<00:09, 3962.63it/s]prepro_backdoor:  73%|███████▎  | 105248/144000 [00:28<00:09, 4104.69it/s]prepro_backdoor:  73%|███████▎  | 105662/144000 [00:28<00:10, 3674.97it/s]prepro_backdoor:  74%|███████▎  | 106146/144000 [00:28<00:09, 3969.47it/s]prepro_backdoor:  74%|███████▍  | 106553/144000 [00:28<00:10, 3721.20it/s]prepro_backdoor:  74%|███████▍  | 107037/144000 [00:28<00:09, 4000.14it/s]prepro_backdoor:  75%|███████▍  | 107548/144000 [00:28<00:08, 4303.50it/s]prepro_backdoor:  75%|███████▍  | 107988/144000 [00:29<00:08, 4309.75it/s]prepro_backdoor:  75%|███████▌  | 108426/144000 [00:29<00:08, 4194.67it/s]prepro_backdoor:  76%|███████▌  | 108851/144000 [00:29<00:08, 4069.47it/s]prepro_backdoor:  76%|███████▌  | 109262/144000 [00:29<00:09, 3597.23it/s]prepro_backdoor:  76%|███████▌  | 109633/144000 [00:29<00:09, 3532.50it/s]prepro_backdoor:  76%|███████▋  | 110081/144000 [00:29<00:08, 3777.50it/s]prepro_backdoor:  77%|███████▋  | 110540/144000 [00:29<00:08, 3989.97it/s]prepro_backdoor:  77%|███████▋  | 110947/144000 [00:29<00:08, 3882.54it/s]prepro_backdoor:  77%|███████▋  | 111341/144000 [00:30<00:11, 2864.48it/s]prepro_backdoor:  78%|███████▊  | 111773/144000 [00:30<00:10, 3178.15it/s]prepro_backdoor:  78%|███████▊  | 112211/144000 [00:30<00:09, 3469.98it/s]prepro_backdoor:  78%|███████▊  | 112610/144000 [00:30<00:08, 3592.09it/s]prepro_backdoor:  79%|███████▊  | 113074/144000 [00:30<00:08, 3863.34it/s]prepro_backdoor:  79%|███████▉  | 113605/144000 [00:30<00:07, 4245.18it/s]prepro_backdoor:  79%|███████▉  | 114056/144000 [00:30<00:06, 4311.58it/s]prepro_backdoor:  80%|███████▉  | 114543/144000 [00:30<00:06, 4446.08it/s]prepro_backdoor:  80%|███████▉  | 114997/144000 [00:30<00:08, 3441.06it/s]prepro_backdoor:  80%|████████  | 115432/144000 [00:31<00:07, 3641.34it/s]prepro_backdoor:  81%|████████  | 115980/144000 [00:31<00:06, 4088.27it/s]prepro_backdoor:  81%|████████  | 116433/144000 [00:31<00:06, 4205.56it/s]prepro_backdoor:  81%|████████  | 116876/144000 [00:31<00:06, 3907.48it/s]prepro_backdoor:  81%|████████▏ | 117286/144000 [00:31<00:07, 3782.27it/s]prepro_backdoor:  82%|████████▏ | 117678/144000 [00:31<00:07, 3734.49it/s]prepro_backdoor:  82%|████████▏ | 118163/144000 [00:31<00:06, 4013.95it/s]prepro_backdoor:  82%|████████▏ | 118574/144000 [00:31<00:06, 3695.80it/s]prepro_backdoor:  83%|████████▎ | 118975/144000 [00:31<00:06, 3760.60it/s]prepro_backdoor:  83%|████████▎ | 119359/144000 [00:32<00:07, 3104.73it/s]prepro_backdoor:  83%|████████▎ | 119844/144000 [00:32<00:06, 3523.42it/s]prepro_backdoor:  83%|████████▎ | 120222/144000 [00:32<00:06, 3502.98it/s]prepro_backdoor:  84%|████████▍ | 120626/144000 [00:32<00:06, 3629.68it/s]prepro_backdoor:  84%|████████▍ | 121003/144000 [00:32<00:06, 3645.33it/s]prepro_backdoor:  84%|████████▍ | 121406/144000 [00:32<00:06, 3733.65it/s]prepro_backdoor:  85%|████████▍ | 121930/144000 [00:32<00:05, 4139.06it/s]prepro_backdoor:  85%|████████▍ | 122351/144000 [00:32<00:05, 3987.94it/s]prepro_backdoor:  85%|████████▌ | 122756/144000 [00:32<00:05, 3903.69it/s]prepro_backdoor:  86%|████████▌ | 123197/144000 [00:33<00:05, 4038.59it/s]prepro_backdoor:  86%|████████▌ | 123605/144000 [00:33<00:05, 3729.00it/s]prepro_backdoor:  86%|████████▌ | 124064/144000 [00:33<00:05, 3948.04it/s]prepro_backdoor:  86%|████████▋ | 124466/144000 [00:33<00:04, 3932.71it/s]prepro_backdoor:  87%|████████▋ | 124864/144000 [00:33<00:05, 3324.43it/s]prepro_backdoor:  87%|████████▋ | 125215/144000 [00:33<00:05, 3258.73it/s]prepro_backdoor:  87%|████████▋ | 125660/144000 [00:33<00:05, 3563.02it/s]prepro_backdoor:  88%|████████▊ | 126091/144000 [00:33<00:04, 3750.22it/s]prepro_backdoor:  88%|████████▊ | 126560/144000 [00:34<00:04, 3988.47it/s]prepro_backdoor:  88%|████████▊ | 126968/144000 [00:34<00:04, 3797.87it/s]prepro_backdoor:  88%|████████▊ | 127368/144000 [00:34<00:04, 3846.03it/s]prepro_backdoor:  89%|████████▉ | 127879/144000 [00:34<00:03, 4187.19it/s]prepro_backdoor:  89%|████████▉ | 128304/144000 [00:34<00:03, 4124.07it/s]prepro_backdoor:  89%|████████▉ | 128742/144000 [00:34<00:03, 4173.24it/s]prepro_backdoor:  90%|████████▉ | 129163/144000 [00:34<00:04, 3147.59it/s]prepro_backdoor:  90%|████████▉ | 129517/144000 [00:34<00:04, 3219.29it/s]prepro_backdoor:  90%|█████████ | 129885/144000 [00:34<00:04, 3322.04it/s]prepro_backdoor:  90%|█████████ | 130240/144000 [00:35<00:04, 3335.31it/s]prepro_backdoor:  91%|█████████ | 130662/144000 [00:35<00:03, 3556.33it/s]prepro_backdoor:  91%|█████████ | 131355/144000 [00:35<00:02, 4469.71it/s]prepro_backdoor:  92%|█████████▏| 131817/144000 [00:35<00:02, 4372.38it/s]prepro_backdoor:  92%|█████████▏| 132265/144000 [00:35<00:02, 4319.73it/s]prepro_backdoor:  92%|█████████▏| 132764/144000 [00:35<00:02, 4492.46it/s]prepro_backdoor:  93%|█████████▎| 133220/144000 [00:35<00:02, 4342.35it/s]prepro_backdoor:  93%|█████████▎| 133660/144000 [00:35<00:02, 4011.71it/s]prepro_backdoor:  93%|█████████▎| 134069/144000 [00:36<00:03, 2984.07it/s]prepro_backdoor:  93%|█████████▎| 134447/144000 [00:36<00:03, 3146.03it/s]prepro_backdoor:  94%|█████████▎| 134891/144000 [00:36<00:02, 3450.02it/s]prepro_backdoor:  94%|█████████▍| 135386/144000 [00:36<00:02, 3822.95it/s]prepro_backdoor:  94%|█████████▍| 135843/144000 [00:36<00:02, 4007.93it/s]prepro_backdoor:  95%|█████████▍| 136266/144000 [00:36<00:01, 3981.95it/s]prepro_backdoor:  95%|█████████▍| 136680/144000 [00:36<00:01, 3921.47it/s]prepro_backdoor:  95%|█████████▌| 137091/144000 [00:36<00:01, 3966.00it/s]prepro_backdoor:  95%|█████████▌| 137496/144000 [00:36<00:01, 3955.43it/s]prepro_backdoor:  96%|█████████▌| 137897/144000 [00:37<00:01, 3229.81it/s]prepro_backdoor:  96%|█████████▌| 138245/144000 [00:37<00:01, 3108.47it/s]prepro_backdoor:  96%|█████████▌| 138573/144000 [00:37<00:01, 3030.23it/s]prepro_backdoor:  96%|█████████▋| 138922/144000 [00:37<00:01, 3129.50it/s]prepro_backdoor:  97%|█████████▋| 139273/144000 [00:37<00:01, 3218.12it/s]prepro_backdoor:  97%|█████████▋| 139670/144000 [00:37<00:01, 3416.85it/s]prepro_backdoor:  97%|█████████▋| 140058/144000 [00:37<00:01, 3530.54it/s]prepro_backdoor:  98%|█████████▊| 140459/144000 [00:37<00:00, 3658.21it/s]prepro_backdoor:  98%|█████████▊| 140832/144000 [00:37<00:00, 3669.34it/s]prepro_backdoor:  98%|█████████▊| 141220/144000 [00:38<00:00, 3707.54it/s]prepro_backdoor:  98%|█████████▊| 141593/144000 [00:38<00:00, 3065.71it/s]prepro_backdoor:  99%|█████████▊| 141986/144000 [00:38<00:00, 3284.22it/s]prepro_backdoor:  99%|█████████▉| 142379/144000 [00:38<00:00, 3449.54it/s]prepro_backdoor:  99%|█████████▉| 142738/144000 [00:38<00:00, 3427.26it/s]prepro_backdoor:  99%|█████████▉| 143145/144000 [00:38<00:00, 3583.94it/s]prepro_backdoor: 100%|█████████▉| 143610/144000 [00:38<00:00, 3872.05it/s]prepro_backdoor: 100%|██████████| 144000/144000 [00:38<00:00, 3712.54it/s]
DEBUG:root:Reminder: plz note that if p_num or pratio exceed the number of possible candidate samples
 then only maximum number of samples will be applied
DEBUG:root:Reminder: priority p_num > pratio, and choosing fix number of sample is prefered if possible 
INFO:root:poison num:1400.0,real pratio:0.5
2024-12-24:00:17:01 [INFO    ] [backdoor_generate_poison_index.py:61] poison num:1400.0,real pratio:0.5
INFO:root:save file format is .png
2024-12-24:00:17:01 [INFO    ] [bd_dataset_v2.py:133] save file format is .png
prepro_backdoor:   0%|          | 0/2800 [00:00<?, ?it/s]prepro_backdoor:  51%|█████▏    | 1439/2800 [00:00<00:00, 14297.43it/s]prepro_backdoor: 100%|██████████| 2800/2800 [00:04<00:00, 699.11it/s]  
INFO:root:stage2 start
2024-12-24:00:17:05 [INFO    ] [badnet.py:193] stage2 start
DEBUG:root:image_size ONLY apply for vit!!!
If you use vit make sure you set the image size!
DEBUG:root:This class REQUIRE bd dataset to implement overwrite methods. This is NOT a general class for all cls task.
INFO:root:Do NOT set the settings/parameters attr manually after you start training!
You may break the relationship between them.
2024-12-24:00:17:05 [INFO    ] [trainer_cls.py:977] Do NOT set the settings/parameters attr manually after you start training!
You may break the relationship between them.
INFO:root:('epoch_now:0, '
 'batch_now:0self.amp:False,self.criterion:CrossEntropyLoss(),self.optimizer:SGD '
 '(\n'
 'Parameter Group 0\n'
 '    dampening: 0\n'
 '    initial_lr: 0.01\n'
 '    lr: 0.01\n'
 '    maximize: False\n'
 '    momentum: 0.9\n'
 '    nesterov: False\n'
 '    weight_decay: 0.0005\n'
 "),self.scheduler:{'T_max': 100, 'eta_min': 0, 'base_lrs': [0.01], "
 "'last_epoch': 0, '_step_count': 1, 'verbose': False, "
 "'_get_lr_called_within_step': False, '_last_lr': [0.01]},self.scaler:{})")
2024-12-24:00:17:06 [INFO    ] [trainer_cls.py:1035] ('epoch_now:0, '
 'batch_now:0self.amp:False,self.criterion:CrossEntropyLoss(),self.optimizer:SGD '
 '(\n'
 'Parameter Group 0\n'
 '    dampening: 0\n'
 '    initial_lr: 0.01\n'
 '    lr: 0.01\n'
 '    maximize: False\n'
 '    momentum: 0.9\n'
 '    nesterov: False\n'
 '    weight_decay: 0.0005\n'
 "),self.scheduler:{'T_max': 100, 'eta_min': 0, 'base_lrs': [0.01], "
 "'last_epoch': 0, '_step_count': 1, 'verbose': False, "
 "'_get_lr_called_within_step': False, '_last_lr': [0.01]},self.scaler:{})")
INFO:root:one epoch training part done, use time = 111.42425394058228 s
2024-12-24:00:18:58 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 111.42425394058228 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.7012819322672758,
 'clean_test_loss_avg_over_batch': 0.695609986782074,
 'epoch': 0,
 'test_acc': 0.4832142857142857,
 'test_asr': 0.37285714285714283,
 'test_ra': 0.6271428571428571,
 'train_acc': 0.5201180555555556,
 'train_acc_clean_only': 0.5017515432098766,
 'train_asr_bd_only': 0.6854166666666667,
 'train_epoch_loss_avg_over_batch': 1.152209150314331,
 'train_ra_bd_only': 0.5047916666666666}
2024-12-24:00:19:00 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.7012819322672758,
 'clean_test_loss_avg_over_batch': 0.695609986782074,
 'epoch': 0,
 'test_acc': 0.4832142857142857,
 'test_asr': 0.37285714285714283,
 'test_ra': 0.6271428571428571,
 'train_acc': 0.5201180555555556,
 'train_acc_clean_only': 0.5017515432098766,
 'train_asr_bd_only': 0.6854166666666667,
 'train_epoch_loss_avg_over_batch': 1.152209150314331,
 'train_ra_bd_only': 0.5047916666666666}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.85900402069092 s
2024-12-24:00:20:44 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.85900402069092 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.6904949464581229,
 'clean_test_loss_avg_over_batch': 0.8703462088649924,
 'epoch': 1,
 'test_acc': 0.5,
 'test_asr': 0.9935714285714285,
 'test_ra': 0.0064285714285714285,
 'train_acc': 0.5313819444444444,
 'train_acc_clean_only': 0.5011111111111111,
 'train_asr_bd_only': 0.8038194444444444,
 'train_epoch_loss_avg_over_batch': 0.8231370509995355,
 'train_ra_bd_only': 0.5022222222222222}
2024-12-24:00:20:46 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.6904949464581229,
 'clean_test_loss_avg_over_batch': 0.8703462088649924,
 'epoch': 1,
 'test_acc': 0.5,
 'test_asr': 0.9935714285714285,
 'test_ra': 0.0064285714285714285,
 'train_acc': 0.5313819444444444,
 'train_acc_clean_only': 0.5011111111111111,
 'train_asr_bd_only': 0.8038194444444444,
 'train_epoch_loss_avg_over_batch': 0.8231370509995355,
 'train_ra_bd_only': 0.5022222222222222}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.9780797958374 s
2024-12-24:00:22:30 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.9780797958374 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.5876899903470819,
 'clean_test_loss_avg_over_batch': 0.6999084786935286,
 'epoch': 2,
 'test_acc': 0.5,
 'test_asr': 1.0,
 'test_ra': 0.0,
 'train_acc': 0.5333472222222222,
 'train_acc_clean_only': 0.5002777777777778,
 'train_asr_bd_only': 0.8309722222222222,
 'train_epoch_loss_avg_over_batch': 0.7815487736596002,
 'train_ra_bd_only': 0.5028472222222222}
2024-12-24:00:22:32 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.5876899903470819,
 'clean_test_loss_avg_over_batch': 0.6999084786935286,
 'epoch': 2,
 'test_acc': 0.5,
 'test_asr': 1.0,
 'test_ra': 0.0,
 'train_acc': 0.5333472222222222,
 'train_acc_clean_only': 0.5002777777777778,
 'train_asr_bd_only': 0.8309722222222222,
 'train_epoch_loss_avg_over_batch': 0.7815487736596002,
 'train_ra_bd_only': 0.5028472222222222}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.86274409294128 s
2024-12-24:00:24:16 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.86274409294128 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.5256934707814996,
 'clean_test_loss_avg_over_batch': 0.7112635401162234,
 'epoch': 3,
 'test_acc': 0.5,
 'test_asr': 1.0,
 'test_ra': 0.0,
 'train_acc': 0.53775,
 'train_acc_clean_only': 0.5017052469135802,
 'train_asr_bd_only': 0.8621527777777778,
 'train_epoch_loss_avg_over_batch': 0.754497534222073,
 'train_ra_bd_only': 0.5}
2024-12-24:00:24:18 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.5256934707814996,
 'clean_test_loss_avg_over_batch': 0.7112635401162234,
 'epoch': 3,
 'test_acc': 0.5,
 'test_asr': 1.0,
 'test_ra': 0.0,
 'train_acc': 0.53775,
 'train_acc_clean_only': 0.5017052469135802,
 'train_asr_bd_only': 0.8621527777777778,
 'train_epoch_loss_avg_over_batch': 0.754497534222073,
 'train_ra_bd_only': 0.5}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.16277194023132 s
2024-12-24:00:26:02 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.16277194023132 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.6472634239630266,
 'clean_test_loss_avg_over_batch': 0.7238818976012144,
 'epoch': 4,
 'test_acc': 0.5,
 'test_asr': 0.9992857142857143,
 'test_ra': 0.0007142857142857143,
 'train_acc': 0.5420138888888889,
 'train_acc_clean_only': 0.502854938271605,
 'train_asr_bd_only': 0.8944444444444445,
 'train_epoch_loss_avg_over_batch': 0.7302837124400668,
 'train_ra_bd_only': 0.49840277777777775}
2024-12-24:00:26:04 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.6472634239630266,
 'clean_test_loss_avg_over_batch': 0.7238818976012144,
 'epoch': 4,
 'test_acc': 0.5,
 'test_asr': 0.9992857142857143,
 'test_ra': 0.0007142857142857143,
 'train_acc': 0.5420138888888889,
 'train_acc_clean_only': 0.502854938271605,
 'train_asr_bd_only': 0.8944444444444445,
 'train_epoch_loss_avg_over_batch': 0.7302837124400668,
 'train_ra_bd_only': 0.49840277777777775}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.63587260246277 s
2024-12-24:00:27:48 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.63587260246277 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.8081347725608132,
 'clean_test_loss_avg_over_batch': 0.727102745663036,
 'epoch': 5,
 'test_acc': 0.5164285714285715,
 'test_asr': 0.2885714285714286,
 'test_ra': 0.7114285714285714,
 'train_acc': 0.5421111111111111,
 'train_acc_clean_only': 0.5033796296296297,
 'train_asr_bd_only': 0.8906944444444445,
 'train_epoch_loss_avg_over_batch': 0.7207376408576965,
 'train_ra_bd_only': 0.5027083333333333}
2024-12-24:00:27:50 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.8081347725608132,
 'clean_test_loss_avg_over_batch': 0.727102745663036,
 'epoch': 5,
 'test_acc': 0.5164285714285715,
 'test_asr': 0.2885714285714286,
 'test_ra': 0.7114285714285714,
 'train_acc': 0.5421111111111111,
 'train_acc_clean_only': 0.5033796296296297,
 'train_asr_bd_only': 0.8906944444444445,
 'train_epoch_loss_avg_over_batch': 0.7207376408576965,
 'train_ra_bd_only': 0.5027083333333333}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 104.8906660079956 s
2024-12-24:00:29:35 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 104.8906660079956 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.6040327928282998,
 'clean_test_loss_avg_over_batch': 0.698783814907074,
 'epoch': 6,
 'test_acc': 0.4975,
 'test_asr': 0.9871428571428571,
 'test_ra': 0.012857142857142857,
 'train_acc': 0.5462291666666667,
 'train_acc_clean_only': 0.5077314814814815,
 'train_asr_bd_only': 0.8927083333333333,
 'train_epoch_loss_avg_over_batch': 0.7139298328823513,
 'train_ra_bd_only': 0.5045833333333334}
2024-12-24:00:29:37 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.6040327928282998,
 'clean_test_loss_avg_over_batch': 0.698783814907074,
 'epoch': 6,
 'test_acc': 0.4975,
 'test_asr': 0.9871428571428571,
 'test_ra': 0.012857142857142857,
 'train_acc': 0.5462291666666667,
 'train_acc_clean_only': 0.5077314814814815,
 'train_asr_bd_only': 0.8927083333333333,
 'train_epoch_loss_avg_over_batch': 0.7139298328823513,
 'train_ra_bd_only': 0.5045833333333334}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 105.03027415275574 s
2024-12-24:00:31:23 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 105.03027415275574 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.596566991372542,
 'clean_test_loss_avg_over_batch': 0.6966279907660051,
 'epoch': 7,
 'test_acc': 0.5046428571428572,
 'test_asr': 0.9907142857142858,
 'test_ra': 0.009285714285714286,
 'train_acc': 0.5516944444444445,
 'train_acc_clean_only': 0.512824074074074,
 'train_asr_bd_only': 0.9015277777777778,
 'train_epoch_loss_avg_over_batch': 0.7054229290750291,
 'train_ra_bd_only': 0.5107638888888889}
2024-12-24:00:31:25 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.596566991372542,
 'clean_test_loss_avg_over_batch': 0.6966279907660051,
 'epoch': 7,
 'test_acc': 0.5046428571428572,
 'test_asr': 0.9907142857142858,
 'test_ra': 0.009285714285714286,
 'train_acc': 0.5516944444444445,
 'train_acc_clean_only': 0.512824074074074,
 'train_asr_bd_only': 0.9015277777777778,
 'train_epoch_loss_avg_over_batch': 0.7054229290750291,
 'train_ra_bd_only': 0.5107638888888889}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 104.48996949195862 s
2024-12-24:00:33:10 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 104.48996949195862 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.5594505288384177,
 'clean_test_loss_avg_over_batch': 0.7284642430869016,
 'epoch': 8,
 'test_acc': 0.5,
 'test_asr': 1.0,
 'test_ra': 0.0,
 'train_acc': 0.5486388888888889,
 'train_acc_clean_only': 0.5054243827160494,
 'train_asr_bd_only': 0.9375694444444445,
 'train_epoch_loss_avg_over_batch': 0.6997140884399414,
 'train_ra_bd_only': 0.5052777777777778}
2024-12-24:00:33:12 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.5594505288384177,
 'clean_test_loss_avg_over_batch': 0.7284642430869016,
 'epoch': 8,
 'test_acc': 0.5,
 'test_asr': 1.0,
 'test_ra': 0.0,
 'train_acc': 0.5486388888888889,
 'train_acc_clean_only': 0.5054243827160494,
 'train_asr_bd_only': 0.9375694444444445,
 'train_epoch_loss_avg_over_batch': 0.6997140884399414,
 'train_ra_bd_only': 0.5052777777777778}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 104.74594950675964 s
2024-12-24:00:34:57 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 104.74594950675964 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.6585797504945234,
 'clean_test_loss_avg_over_batch': 0.8054169335148551,
 'epoch': 9,
 'test_acc': 0.5060714285714286,
 'test_asr': 0.89,
 'test_ra': 0.11,
 'train_acc': 0.5484236111111112,
 'train_acc_clean_only': 0.5039891975308642,
 'train_asr_bd_only': 0.9483333333333334,
 'train_epoch_loss_avg_over_batch': 0.6966709846920437,
 'train_ra_bd_only': 0.5017361111111112}
2024-12-24:00:34:59 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.6585797504945234,
 'clean_test_loss_avg_over_batch': 0.8054169335148551,
 'epoch': 9,
 'test_acc': 0.5060714285714286,
 'test_asr': 0.89,
 'test_ra': 0.11,
 'train_acc': 0.5484236111111112,
 'train_acc_clean_only': 0.5039891975308642,
 'train_asr_bd_only': 0.9483333333333334,
 'train_epoch_loss_avg_over_batch': 0.6966709846920437,
 'train_ra_bd_only': 0.5017361111111112}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.82326412200928 s
2024-12-24:00:36:43 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.82326412200928 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.5613764524459839,
 'clean_test_loss_avg_over_batch': 0.7866744046861475,
 'epoch': 10,
 'test_acc': 0.5064285714285715,
 'test_asr': 0.9828571428571429,
 'test_ra': 0.017142857142857144,
 'train_acc': 0.5543055555555556,
 'train_acc_clean_only': 0.5112808641975308,
 'train_asr_bd_only': 0.9415277777777777,
 'train_epoch_loss_avg_over_batch': 0.6952945719824897,
 'train_ra_bd_only': 0.5110416666666666}
2024-12-24:00:36:45 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.5613764524459839,
 'clean_test_loss_avg_over_batch': 0.7866744046861475,
 'epoch': 10,
 'test_acc': 0.5064285714285715,
 'test_asr': 0.9828571428571429,
 'test_ra': 0.017142857142857144,
 'train_acc': 0.5543055555555556,
 'train_acc_clean_only': 0.5112808641975308,
 'train_asr_bd_only': 0.9415277777777777,
 'train_epoch_loss_avg_over_batch': 0.6952945719824897,
 'train_ra_bd_only': 0.5110416666666666}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 105.27701354026794 s
2024-12-24:00:38:31 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 105.27701354026794 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.7811278375712308,
 'clean_test_loss_avg_over_batch': 0.7065198001536456,
 'epoch': 11,
 'test_acc': 0.6282142857142857,
 'test_asr': 0.6321428571428571,
 'test_ra': 0.3678571428571429,
 'train_acc': 0.5858472222222222,
 'train_acc_clean_only': 0.5561265432098765,
 'train_asr_bd_only': 0.8533333333333334,
 'train_epoch_loss_avg_over_batch': 0.6791828992101882,
 'train_ra_bd_only': 0.554375}
2024-12-24:00:38:33 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.7811278375712308,
 'clean_test_loss_avg_over_batch': 0.7065198001536456,
 'epoch': 11,
 'test_acc': 0.6282142857142857,
 'test_asr': 0.6321428571428571,
 'test_ra': 0.3678571428571429,
 'train_acc': 0.5858472222222222,
 'train_acc_clean_only': 0.5561265432098765,
 'train_asr_bd_only': 0.8533333333333334,
 'train_epoch_loss_avg_over_batch': 0.6791828992101882,
 'train_ra_bd_only': 0.554375}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 104.42430257797241 s
2024-12-24:00:40:18 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 104.42430257797241 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.8410984982143749,
 'clean_test_loss_avg_over_batch': 0.7894298691641201,
 'epoch': 12,
 'test_acc': 0.6878571428571428,
 'test_asr': 0.52,
 'test_ra': 0.48,
 'train_acc': 0.6697013888888889,
 'train_acc_clean_only': 0.6695447530864198,
 'train_asr_bd_only': 0.6711111111111111,
 'train_epoch_loss_avg_over_batch': 0.618897414472368,
 'train_ra_bd_only': 0.6685416666666667}
2024-12-24:00:40:20 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.8410984982143749,
 'clean_test_loss_avg_over_batch': 0.7894298691641201,
 'epoch': 12,
 'test_acc': 0.6878571428571428,
 'test_asr': 0.52,
 'test_ra': 0.48,
 'train_acc': 0.6697013888888889,
 'train_acc_clean_only': 0.6695447530864198,
 'train_asr_bd_only': 0.6711111111111111,
 'train_epoch_loss_avg_over_batch': 0.618897414472368,
 'train_ra_bd_only': 0.6685416666666667}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 104.32739233970642 s
2024-12-24:00:42:05 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 104.32739233970642 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 1.0076960000124844,
 'clean_test_loss_avg_over_batch': 0.6960057724605907,
 'epoch': 13,
 'test_acc': 0.7175,
 'test_asr': 0.47285714285714286,
 'test_ra': 0.5271428571428571,
 'train_acc': 0.7209513888888889,
 'train_acc_clean_only': 0.731983024691358,
 'train_asr_bd_only': 0.6216666666666667,
 'train_epoch_loss_avg_over_batch': 0.5651313017209371,
 'train_ra_bd_only': 0.7311805555555555}
2024-12-24:00:42:07 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 1.0076960000124844,
 'clean_test_loss_avg_over_batch': 0.6960057724605907,
 'epoch': 13,
 'test_acc': 0.7175,
 'test_asr': 0.47285714285714286,
 'test_ra': 0.5271428571428571,
 'train_acc': 0.7209513888888889,
 'train_acc_clean_only': 0.731983024691358,
 'train_asr_bd_only': 0.6216666666666667,
 'train_epoch_loss_avg_over_batch': 0.5651313017209371,
 'train_ra_bd_only': 0.7311805555555555}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.81086611747742 s
2024-12-24:00:43:51 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.81086611747742 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 1.3466454961083152,
 'clean_test_loss_avg_over_batch': 1.2395581982352517,
 'epoch': 14,
 'test_acc': 0.7435714285714285,
 'test_asr': 0.31785714285714284,
 'test_ra': 0.6821428571428572,
 'train_acc': 0.7591666666666667,
 'train_acc_clean_only': 0.7784104938271605,
 'train_asr_bd_only': 0.5859722222222222,
 'train_epoch_loss_avg_over_batch': 0.5137518165376451,
 'train_ra_bd_only': 0.7799305555555556}
2024-12-24:00:43:53 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 1.3466454961083152,
 'clean_test_loss_avg_over_batch': 1.2395581982352517,
 'epoch': 14,
 'test_acc': 0.7435714285714285,
 'test_asr': 0.31785714285714284,
 'test_ra': 0.6821428571428572,
 'train_acc': 0.7591666666666667,
 'train_acc_clean_only': 0.7784104938271605,
 'train_asr_bd_only': 0.5859722222222222,
 'train_epoch_loss_avg_over_batch': 0.5137518165376451,
 'train_ra_bd_only': 0.7799305555555556}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 104.66765809059143 s
2024-12-24:00:45:39 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 104.66765809059143 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 1.263026085766879,
 'clean_test_loss_avg_over_batch': 0.8216798068447546,
 'epoch': 15,
 'test_acc': 0.7564285714285715,
 'test_asr': 0.3535714285714286,
 'test_ra': 0.6464285714285715,
 'train_acc': 0.7963055555555556,
 'train_acc_clean_only': 0.8217978395061728,
 'train_asr_bd_only': 0.566875,
 'train_epoch_loss_avg_over_batch': 0.4558352053430345,
 'train_ra_bd_only': 0.8258333333333333}
2024-12-24:00:45:41 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 1.263026085766879,
 'clean_test_loss_avg_over_batch': 0.8216798068447546,
 'epoch': 15,
 'test_acc': 0.7564285714285715,
 'test_asr': 0.3535714285714286,
 'test_ra': 0.6464285714285715,
 'train_acc': 0.7963055555555556,
 'train_acc_clean_only': 0.8217978395061728,
 'train_asr_bd_only': 0.566875,
 'train_epoch_loss_avg_over_batch': 0.4558352053430345,
 'train_ra_bd_only': 0.8258333333333333}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 104.07393527030945 s
2024-12-24:00:47:25 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 104.07393527030945 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 1.5392814007672397,
 'clean_test_loss_avg_over_batch': 0.7164341163906184,
 'epoch': 16,
 'test_acc': 0.7739285714285714,
 'test_asr': 0.31214285714285717,
 'test_ra': 0.6878571428571428,
 'train_acc': 0.8278402777777778,
 'train_acc_clean_only': 0.8585879629629629,
 'train_asr_bd_only': 0.5511111111111111,
 'train_epoch_loss_avg_over_batch': 0.40516836252477434,
 'train_ra_bd_only': 0.8578472222222222}
2024-12-24:00:47:27 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 1.5392814007672397,
 'clean_test_loss_avg_over_batch': 0.7164341163906184,
 'epoch': 16,
 'test_acc': 0.7739285714285714,
 'test_asr': 0.31214285714285717,
 'test_ra': 0.6878571428571428,
 'train_acc': 0.8278402777777778,
 'train_acc_clean_only': 0.8585879629629629,
 'train_asr_bd_only': 0.5511111111111111,
 'train_epoch_loss_avg_over_batch': 0.40516836252477434,
 'train_ra_bd_only': 0.8578472222222222}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 104.06683039665222 s
2024-12-24:00:49:12 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 104.06683039665222 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 1.5388248508626765,
 'clean_test_loss_avg_over_batch': 0.4876543368128213,
 'epoch': 17,
 'test_acc': 0.7760714285714285,
 'test_asr': 0.2914285714285714,
 'test_ra': 0.7085714285714285,
 'train_acc': 0.8477361111111111,
 'train_acc_clean_only': 0.8822376543209877,
 'train_asr_bd_only': 0.5372222222222223,
 'train_epoch_loss_avg_over_batch': 0.36585111166371237,
 'train_ra_bd_only': 0.8813194444444444}
2024-12-24:00:49:14 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 1.5388248508626765,
 'clean_test_loss_avg_over_batch': 0.4876543368128213,
 'epoch': 17,
 'test_acc': 0.7760714285714285,
 'test_asr': 0.2914285714285714,
 'test_ra': 0.7085714285714285,
 'train_acc': 0.8477361111111111,
 'train_acc_clean_only': 0.8822376543209877,
 'train_asr_bd_only': 0.5372222222222223,
 'train_epoch_loss_avg_over_batch': 0.36585111166371237,
 'train_ra_bd_only': 0.8813194444444444}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 104.11233329772949 s
2024-12-24:00:50:58 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 104.11233329772949 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 1.568878022107211,
 'clean_test_loss_avg_over_batch': 0.45202128148891707,
 'epoch': 18,
 'test_acc': 0.8071428571428572,
 'test_asr': 0.22214285714285714,
 'test_ra': 0.7778571428571428,
 'train_acc': 0.8689375,
 'train_acc_clean_only': 0.9065509259259259,
 'train_asr_bd_only': 0.5304166666666666,
 'train_epoch_loss_avg_over_batch': 0.3289952971670363,
 'train_ra_bd_only': 0.9040972222222222}
2024-12-24:00:51:00 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 1.568878022107211,
 'clean_test_loss_avg_over_batch': 0.45202128148891707,
 'epoch': 18,
 'test_acc': 0.8071428571428572,
 'test_asr': 0.22214285714285714,
 'test_ra': 0.7778571428571428,
 'train_acc': 0.8689375,
 'train_acc_clean_only': 0.9065509259259259,
 'train_asr_bd_only': 0.5304166666666666,
 'train_epoch_loss_avg_over_batch': 0.3289952971670363,
 'train_ra_bd_only': 0.9040972222222222}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 104.11020088195801 s
2024-12-24:00:52:45 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 104.11020088195801 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 1.812055999582464,
 'clean_test_loss_avg_over_batch': 0.48748008568178525,
 'epoch': 19,
 'test_acc': 0.8014285714285714,
 'test_asr': 0.21,
 'test_ra': 0.79,
 'train_acc': 0.8828402777777777,
 'train_acc_clean_only': 0.9223688271604938,
 'train_asr_bd_only': 0.5270833333333333,
 'train_epoch_loss_avg_over_batch': 0.30131847880946266,
 'train_ra_bd_only': 0.9222916666666666}
2024-12-24:00:52:47 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 1.812055999582464,
 'clean_test_loss_avg_over_batch': 0.48748008568178525,
 'epoch': 19,
 'test_acc': 0.8014285714285714,
 'test_asr': 0.21,
 'test_ra': 0.79,
 'train_acc': 0.8828402777777777,
 'train_acc_clean_only': 0.9223688271604938,
 'train_asr_bd_only': 0.5270833333333333,
 'train_epoch_loss_avg_over_batch': 0.30131847880946266,
 'train_ra_bd_only': 0.9222916666666666}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 104.47248673439026 s
2024-12-24:00:54:32 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 104.47248673439026 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 1.892018274827437,
 'clean_test_loss_avg_over_batch': 11.030366304923188,
 'epoch': 20,
 'test_acc': 0.7921428571428571,
 'test_asr': 0.15785714285714286,
 'test_ra': 0.8421428571428572,
 'train_acc': 0.8942430555555556,
 'train_acc_clean_only': 0.9350694444444444,
 'train_asr_bd_only': 0.5268055555555555,
 'train_epoch_loss_avg_over_batch': 0.2794790357218848,
 'train_ra_bd_only': 0.9292361111111112}
2024-12-24:00:54:34 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 1.892018274827437,
 'clean_test_loss_avg_over_batch': 11.030366304923188,
 'epoch': 20,
 'test_acc': 0.7921428571428571,
 'test_asr': 0.15785714285714286,
 'test_ra': 0.8421428571428572,
 'train_acc': 0.8942430555555556,
 'train_acc_clean_only': 0.9350694444444444,
 'train_asr_bd_only': 0.5268055555555555,
 'train_epoch_loss_avg_over_batch': 0.2794790357218848,
 'train_ra_bd_only': 0.9292361111111112}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.14251589775085 s
2024-12-24:00:56:17 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.14251589775085 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.8714848431673917,
 'clean_test_loss_avg_over_batch': 1.4613203573971987,
 'epoch': 21,
 'test_acc': 0.7939285714285714,
 'test_asr': 0.5407142857142857,
 'test_ra': 0.4592857142857143,
 'train_acc': 0.9021875,
 'train_acc_clean_only': 0.9403086419753086,
 'train_asr_bd_only': 0.5590972222222222,
 'train_epoch_loss_avg_over_batch': 0.26273713796668585,
 'train_ra_bd_only': 0.91125}
2024-12-24:00:56:19 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.8714848431673917,
 'clean_test_loss_avg_over_batch': 1.4613203573971987,
 'epoch': 21,
 'test_acc': 0.7939285714285714,
 'test_asr': 0.5407142857142857,
 'test_ra': 0.4592857142857143,
 'train_acc': 0.9021875,
 'train_acc_clean_only': 0.9403086419753086,
 'train_asr_bd_only': 0.5590972222222222,
 'train_epoch_loss_avg_over_batch': 0.26273713796668585,
 'train_ra_bd_only': 0.91125}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 104.88711667060852 s
2024-12-24:00:58:05 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 104.88711667060852 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.22881777652285315,
 'clean_test_loss_avg_over_batch': 28.236394225196406,
 'epoch': 22,
 'test_acc': 0.8121428571428572,
 'test_asr': 0.8907142857142857,
 'test_ra': 0.10928571428571429,
 'train_acc': 0.9190277777777778,
 'train_acc_clean_only': 0.9450848765432098,
 'train_asr_bd_only': 0.6845138888888889,
 'train_epoch_loss_avg_over_batch': 0.22114127263757918,
 'train_ra_bd_only': 0.7925}
2024-12-24:00:58:07 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.22881777652285315,
 'clean_test_loss_avg_over_batch': 28.236394225196406,
 'epoch': 22,
 'test_acc': 0.8121428571428572,
 'test_asr': 0.8907142857142857,
 'test_ra': 0.10928571428571429,
 'train_acc': 0.9190277777777778,
 'train_acc_clean_only': 0.9450848765432098,
 'train_asr_bd_only': 0.6845138888888889,
 'train_epoch_loss_avg_over_batch': 0.22114127263757918,
 'train_ra_bd_only': 0.7925}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 104.38735508918762 s
2024-12-24:00:59:51 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 104.38735508918762 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.21987698633562436,
 'clean_test_loss_avg_over_batch': 8.653499272736637,
 'epoch': 23,
 'test_acc': 0.8103571428571429,
 'test_asr': 0.9192857142857143,
 'test_ra': 0.08071428571428571,
 'train_acc': 0.9311736111111111,
 'train_acc_clean_only': 0.9535802469135802,
 'train_asr_bd_only': 0.7295138888888889,
 'train_epoch_loss_avg_over_batch': 0.19417533955309127,
 'train_ra_bd_only': 0.7511111111111111}
2024-12-24:00:59:53 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.21987698633562436,
 'clean_test_loss_avg_over_batch': 8.653499272736637,
 'epoch': 23,
 'test_acc': 0.8103571428571429,
 'test_asr': 0.9192857142857143,
 'test_ra': 0.08071428571428571,
 'train_acc': 0.9311736111111111,
 'train_acc_clean_only': 0.9535802469135802,
 'train_asr_bd_only': 0.7295138888888889,
 'train_epoch_loss_avg_over_batch': 0.19417533955309127,
 'train_ra_bd_only': 0.7511111111111111}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 104.30648565292358 s
2024-12-24:01:01:38 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 104.30648565292358 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.15502797278829597,
 'clean_test_loss_avg_over_batch': 0.6111981458961964,
 'epoch': 24,
 'test_acc': 0.7960714285714285,
 'test_asr': 0.9421428571428572,
 'test_ra': 0.05785714285714286,
 'train_acc': 0.9350555555555555,
 'train_acc_clean_only': 0.956766975308642,
 'train_asr_bd_only': 0.7396527777777778,
 'train_epoch_loss_avg_over_batch': 0.18338348527087106,
 'train_ra_bd_only': 0.7430555555555556}
2024-12-24:01:01:40 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.15502797278829597,
 'clean_test_loss_avg_over_batch': 0.6111981458961964,
 'epoch': 24,
 'test_acc': 0.7960714285714285,
 'test_asr': 0.9421428571428572,
 'test_ra': 0.05785714285714286,
 'train_acc': 0.9350555555555555,
 'train_acc_clean_only': 0.956766975308642,
 'train_asr_bd_only': 0.7396527777777778,
 'train_epoch_loss_avg_over_batch': 0.18338348527087106,
 'train_ra_bd_only': 0.7430555555555556}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.70813345909119 s
2024-12-24:01:03:24 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.70813345909119 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.18143365803090009,
 'clean_test_loss_avg_over_batch': 0.7512523987415162,
 'epoch': 25,
 'test_acc': 0.8071428571428572,
 'test_asr': 0.9292857142857143,
 'test_ra': 0.07071428571428572,
 'train_acc': 0.9424513888888889,
 'train_acc_clean_only': 0.9642824074074074,
 'train_asr_bd_only': 0.7459722222222223,
 'train_epoch_loss_avg_over_batch': 0.16848557428850067,
 'train_ra_bd_only': 0.7410416666666667}
2024-12-24:01:03:26 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.18143365803090009,
 'clean_test_loss_avg_over_batch': 0.7512523987415162,
 'epoch': 25,
 'test_acc': 0.8071428571428572,
 'test_asr': 0.9292857142857143,
 'test_ra': 0.07071428571428572,
 'train_acc': 0.9424513888888889,
 'train_acc_clean_only': 0.9642824074074074,
 'train_asr_bd_only': 0.7459722222222223,
 'train_epoch_loss_avg_over_batch': 0.16848557428850067,
 'train_ra_bd_only': 0.7410416666666667}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.25820589065552 s
2024-12-24:01:05:10 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.25820589065552 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.10965835789895871,
 'clean_test_loss_avg_over_batch': 0.5351551370695233,
 'epoch': 26,
 'test_acc': 0.8271428571428572,
 'test_asr': 0.9592857142857143,
 'test_ra': 0.04071428571428572,
 'train_acc': 0.9438888888888889,
 'train_acc_clean_only': 0.9658256172839507,
 'train_asr_bd_only': 0.7464583333333333,
 'train_epoch_loss_avg_over_batch': 0.16416002172893948,
 'train_ra_bd_only': 0.7391666666666666}
2024-12-24:01:05:12 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.10965835789895871,
 'clean_test_loss_avg_over_batch': 0.5351551370695233,
 'epoch': 26,
 'test_acc': 0.8271428571428572,
 'test_asr': 0.9592857142857143,
 'test_ra': 0.04071428571428572,
 'train_acc': 0.9438888888888889,
 'train_acc_clean_only': 0.9658256172839507,
 'train_asr_bd_only': 0.7464583333333333,
 'train_epoch_loss_avg_over_batch': 0.16416002172893948,
 'train_ra_bd_only': 0.7391666666666666}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.95929884910583 s
2024-12-24:01:06:56 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.95929884910583 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.11699696255593815,
 'clean_test_loss_avg_over_batch': 5.327869735658169,
 'epoch': 27,
 'test_acc': 0.8082142857142857,
 'test_asr': 0.9564285714285714,
 'test_ra': 0.04357142857142857,
 'train_acc': 0.9489097222222223,
 'train_acc_clean_only': 0.9703240740740741,
 'train_asr_bd_only': 0.7561805555555555,
 'train_epoch_loss_avg_over_batch': 0.1518358869155248,
 'train_ra_bd_only': 0.7320833333333333}
2024-12-24:01:06:59 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.11699696255593815,
 'clean_test_loss_avg_over_batch': 5.327869735658169,
 'epoch': 27,
 'test_acc': 0.8082142857142857,
 'test_asr': 0.9564285714285714,
 'test_ra': 0.04357142857142857,
 'train_acc': 0.9489097222222223,
 'train_acc_clean_only': 0.9703240740740741,
 'train_asr_bd_only': 0.7561805555555555,
 'train_epoch_loss_avg_over_batch': 0.1518358869155248,
 'train_ra_bd_only': 0.7320833333333333}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.96215915679932 s
2024-12-24:01:08:43 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.96215915679932 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.1567270534790375,
 'clean_test_loss_avg_over_batch': 0.5261139781637625,
 'epoch': 28,
 'test_acc': 0.8164285714285714,
 'test_asr': 0.9442857142857143,
 'test_ra': 0.055714285714285716,
 'train_acc': 0.9483194444444445,
 'train_acc_clean_only': 0.9695524691358025,
 'train_asr_bd_only': 0.7572222222222222,
 'train_epoch_loss_avg_over_batch': 0.1536082017885314,
 'train_ra_bd_only': 0.7315972222222222}
2024-12-24:01:08:45 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.1567270534790375,
 'clean_test_loss_avg_over_batch': 0.5261139781637625,
 'epoch': 28,
 'test_acc': 0.8164285714285714,
 'test_asr': 0.9442857142857143,
 'test_ra': 0.055714285714285716,
 'train_acc': 0.9483194444444445,
 'train_acc_clean_only': 0.9695524691358025,
 'train_asr_bd_only': 0.7572222222222222,
 'train_epoch_loss_avg_over_batch': 0.1536082017885314,
 'train_ra_bd_only': 0.7315972222222222}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 104.48522353172302 s
2024-12-24:01:10:30 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 104.48522353172302 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.17247707295146855,
 'clean_test_loss_avg_over_batch': 0.6296513920480554,
 'epoch': 29,
 'test_acc': 0.8096428571428571,
 'test_asr': 0.9364285714285714,
 'test_ra': 0.06357142857142857,
 'train_acc': 0.9529027777777778,
 'train_acc_clean_only': 0.9748688271604938,
 'train_asr_bd_only': 0.7552083333333334,
 'train_epoch_loss_avg_over_batch': 0.14224210100041496,
 'train_ra_bd_only': 0.7354166666666667}
2024-12-24:01:10:32 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.17247707295146855,
 'clean_test_loss_avg_over_batch': 0.6296513920480554,
 'epoch': 29,
 'test_acc': 0.8096428571428571,
 'test_asr': 0.9364285714285714,
 'test_ra': 0.06357142857142857,
 'train_acc': 0.9529027777777778,
 'train_acc_clean_only': 0.9748688271604938,
 'train_asr_bd_only': 0.7552083333333334,
 'train_epoch_loss_avg_over_batch': 0.14224210100041496,
 'train_ra_bd_only': 0.7354166666666667}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 104.04265975952148 s
2024-12-24:01:12:16 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 104.04265975952148 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.1296243926679546,
 'clean_test_loss_avg_over_batch': 0.7252493219619448,
 'epoch': 30,
 'test_acc': 0.8189285714285715,
 'test_asr': 0.9521428571428572,
 'test_ra': 0.047857142857142855,
 'train_acc': 0.9518402777777778,
 'train_acc_clean_only': 0.9738425925925925,
 'train_asr_bd_only': 0.7538194444444445,
 'train_epoch_loss_avg_over_batch': 0.14343579515152508,
 'train_ra_bd_only': 0.7366666666666667}
2024-12-24:01:12:18 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.1296243926679546,
 'clean_test_loss_avg_over_batch': 0.7252493219619448,
 'epoch': 30,
 'test_acc': 0.8189285714285715,
 'test_asr': 0.9521428571428572,
 'test_ra': 0.047857142857142855,
 'train_acc': 0.9518402777777778,
 'train_acc_clean_only': 0.9738425925925925,
 'train_asr_bd_only': 0.7538194444444445,
 'train_epoch_loss_avg_over_batch': 0.14343579515152508,
 'train_ra_bd_only': 0.7366666666666667}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 104.01463556289673 s
2024-12-24:01:14:03 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 104.01463556289673 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.10825583793815564,
 'clean_test_loss_avg_over_batch': 0.578190737996589,
 'epoch': 31,
 'test_acc': 0.8117857142857143,
 'test_asr': 0.9585714285714285,
 'test_ra': 0.041428571428571426,
 'train_acc': 0.9527083333333334,
 'train_acc_clean_only': 0.975054012345679,
 'train_asr_bd_only': 0.7515972222222222,
 'train_epoch_loss_avg_over_batch': 0.14021653210454518,
 'train_ra_bd_only': 0.7380555555555556}
2024-12-24:01:14:05 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.10825583793815564,
 'clean_test_loss_avg_over_batch': 0.578190737996589,
 'epoch': 31,
 'test_acc': 0.8117857142857143,
 'test_asr': 0.9585714285714285,
 'test_ra': 0.041428571428571426,
 'train_acc': 0.9527083333333334,
 'train_acc_clean_only': 0.975054012345679,
 'train_asr_bd_only': 0.7515972222222222,
 'train_epoch_loss_avg_over_batch': 0.14021653210454518,
 'train_ra_bd_only': 0.7380555555555556}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.98208355903625 s
2024-12-24:01:15:49 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.98208355903625 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.05777977452486415,
 'clean_test_loss_avg_over_batch': 0.5727329335429452,
 'epoch': 32,
 'test_acc': 0.8242857142857143,
 'test_asr': 0.9792857142857143,
 'test_ra': 0.020714285714285713,
 'train_acc': 0.9577083333333334,
 'train_acc_clean_only': 0.9777391975308642,
 'train_asr_bd_only': 0.7774305555555555,
 'train_epoch_loss_avg_over_batch': 0.12862934862242806,
 'train_ra_bd_only': 0.7141666666666666}
2024-12-24:01:15:51 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.05777977452486415,
 'clean_test_loss_avg_over_batch': 0.5727329335429452,
 'epoch': 32,
 'test_acc': 0.8242857142857143,
 'test_asr': 0.9792857142857143,
 'test_ra': 0.020714285714285713,
 'train_acc': 0.9577083333333334,
 'train_acc_clean_only': 0.9777391975308642,
 'train_asr_bd_only': 0.7774305555555555,
 'train_epoch_loss_avg_over_batch': 0.12862934862242806,
 'train_ra_bd_only': 0.7141666666666666}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.18408012390137 s
2024-12-24:01:17:35 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.18408012390137 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.11560599124905738,
 'clean_test_loss_avg_over_batch': 0.6498705128377135,
 'epoch': 33,
 'test_acc': 0.8067857142857143,
 'test_asr': 0.9628571428571429,
 'test_ra': 0.037142857142857144,
 'train_acc': 0.9603125,
 'train_acc_clean_only': 0.978966049382716,
 'train_asr_bd_only': 0.7924305555555555,
 'train_epoch_loss_avg_over_batch': 0.12133865301311016,
 'train_ra_bd_only': 0.7011111111111111}
2024-12-24:01:17:37 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.11560599124905738,
 'clean_test_loss_avg_over_batch': 0.6498705128377135,
 'epoch': 33,
 'test_acc': 0.8067857142857143,
 'test_asr': 0.9628571428571429,
 'test_ra': 0.037142857142857144,
 'train_acc': 0.9603125,
 'train_acc_clean_only': 0.978966049382716,
 'train_asr_bd_only': 0.7924305555555555,
 'train_epoch_loss_avg_over_batch': 0.12133865301311016,
 'train_ra_bd_only': 0.7011111111111111}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.75999426841736 s
2024-12-24:01:19:21 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.75999426841736 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.2094136391851035,
 'clean_test_loss_avg_over_batch': 0.5408737461759963,
 'epoch': 34,
 'test_acc': 0.8282142857142857,
 'test_asr': 0.9414285714285714,
 'test_ra': 0.05857142857142857,
 'train_acc': 0.9608055555555556,
 'train_acc_clean_only': 0.9798302469135802,
 'train_asr_bd_only': 0.7895833333333333,
 'train_epoch_loss_avg_over_batch': 0.11886084053748183,
 'train_ra_bd_only': 0.7040972222222223}
2024-12-24:01:19:23 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.2094136391851035,
 'clean_test_loss_avg_over_batch': 0.5408737461759963,
 'epoch': 34,
 'test_acc': 0.8282142857142857,
 'test_asr': 0.9414285714285714,
 'test_ra': 0.05857142857142857,
 'train_acc': 0.9608055555555556,
 'train_acc_clean_only': 0.9798302469135802,
 'train_asr_bd_only': 0.7895833333333333,
 'train_epoch_loss_avg_over_batch': 0.11886084053748183,
 'train_ra_bd_only': 0.7040972222222223}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 104.62158846855164 s
2024-12-24:01:21:08 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 104.62158846855164 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.05948635817251422,
 'clean_test_loss_avg_over_batch': 0.596032240851359,
 'epoch': 35,
 'test_acc': 0.8335714285714285,
 'test_asr': 0.9735714285714285,
 'test_ra': 0.02642857142857143,
 'train_acc': 0.9633194444444444,
 'train_acc_clean_only': 0.9819984567901234,
 'train_asr_bd_only': 0.7952083333333333,
 'train_epoch_loss_avg_over_batch': 0.11358327846394645,
 'train_ra_bd_only': 0.6977777777777778}
2024-12-24:01:21:10 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.05948635817251422,
 'clean_test_loss_avg_over_batch': 0.596032240851359,
 'epoch': 35,
 'test_acc': 0.8335714285714285,
 'test_asr': 0.9735714285714285,
 'test_ra': 0.02642857142857143,
 'train_acc': 0.9633194444444444,
 'train_acc_clean_only': 0.9819984567901234,
 'train_asr_bd_only': 0.7952083333333333,
 'train_epoch_loss_avg_over_batch': 0.11358327846394645,
 'train_ra_bd_only': 0.6977777777777778}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 105.32353973388672 s
2024-12-24:01:22:56 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 105.32353973388672 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.05924518061378463,
 'clean_test_loss_avg_over_batch': 0.5991733880205588,
 'epoch': 36,
 'test_acc': 0.8228571428571428,
 'test_asr': 0.975,
 'test_ra': 0.025,
 'train_acc': 0.9628819444444444,
 'train_acc_clean_only': 0.9817901234567902,
 'train_asr_bd_only': 0.7927083333333333,
 'train_epoch_loss_avg_over_batch': 0.1140432762934102,
 'train_ra_bd_only': 0.7001388888888889}
2024-12-24:01:22:58 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.05924518061378463,
 'clean_test_loss_avg_over_batch': 0.5991733880205588,
 'epoch': 36,
 'test_acc': 0.8228571428571428,
 'test_asr': 0.975,
 'test_ra': 0.025,
 'train_acc': 0.9628819444444444,
 'train_acc_clean_only': 0.9817901234567902,
 'train_asr_bd_only': 0.7927083333333333,
 'train_epoch_loss_avg_over_batch': 0.1140432762934102,
 'train_ra_bd_only': 0.7001388888888889}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 104.16573214530945 s
2024-12-24:01:24:42 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 104.16573214530945 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.1035303505804305,
 'clean_test_loss_avg_over_batch': 0.5988879738036882,
 'epoch': 37,
 'test_acc': 0.8175,
 'test_asr': 0.9642857142857143,
 'test_ra': 0.03571428571428571,
 'train_acc': 0.9640833333333333,
 'train_acc_clean_only': 0.9829475308641975,
 'train_asr_bd_only': 0.7943055555555556,
 'train_epoch_loss_avg_over_batch': 0.11136785562502013,
 'train_ra_bd_only': 0.7007638888888889}
2024-12-24:01:24:45 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.1035303505804305,
 'clean_test_loss_avg_over_batch': 0.5988879738036882,
 'epoch': 37,
 'test_acc': 0.8175,
 'test_asr': 0.9642857142857143,
 'test_ra': 0.03571428571428571,
 'train_acc': 0.9640833333333333,
 'train_acc_clean_only': 0.9829475308641975,
 'train_asr_bd_only': 0.7943055555555556,
 'train_epoch_loss_avg_over_batch': 0.11136785562502013,
 'train_ra_bd_only': 0.7007638888888889}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 104.69176125526428 s
2024-12-24:01:26:30 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 104.69176125526428 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.14520374143665488,
 'clean_test_loss_avg_over_batch': 6.5049889680336825,
 'epoch': 38,
 'test_acc': 0.8289285714285715,
 'test_asr': 0.9457142857142857,
 'test_ra': 0.054285714285714284,
 'train_acc': 0.9603958333333333,
 'train_acc_clean_only': 0.9788811728395062,
 'train_asr_bd_only': 0.7940277777777778,
 'train_epoch_loss_avg_over_batch': 0.11845416874686877,
 'train_ra_bd_only': 0.6963194444444445}
2024-12-24:01:26:32 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.14520374143665488,
 'clean_test_loss_avg_over_batch': 6.5049889680336825,
 'epoch': 38,
 'test_acc': 0.8289285714285715,
 'test_asr': 0.9457142857142857,
 'test_ra': 0.054285714285714284,
 'train_acc': 0.9603958333333333,
 'train_acc_clean_only': 0.9788811728395062,
 'train_asr_bd_only': 0.7940277777777778,
 'train_epoch_loss_avg_over_batch': 0.11845416874686877,
 'train_ra_bd_only': 0.6963194444444445}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 106.53742957115173 s
2024-12-24:01:28:19 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 106.53742957115173 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.07580296819055961,
 'clean_test_loss_avg_over_batch': 0.5454667247831821,
 'epoch': 39,
 'test_acc': 0.8378571428571429,
 'test_asr': 0.9742857142857143,
 'test_ra': 0.025714285714285714,
 'train_acc': 0.9643333333333334,
 'train_acc_clean_only': 0.9822685185185185,
 'train_asr_bd_only': 0.8029166666666666,
 'train_epoch_loss_avg_over_batch': 0.10981429480844074,
 'train_ra_bd_only': 0.6913194444444445}
2024-12-24:01:28:22 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.07580296819055961,
 'clean_test_loss_avg_over_batch': 0.5454667247831821,
 'epoch': 39,
 'test_acc': 0.8378571428571429,
 'test_asr': 0.9742857142857143,
 'test_ra': 0.025714285714285714,
 'train_acc': 0.9643333333333334,
 'train_acc_clean_only': 0.9822685185185185,
 'train_asr_bd_only': 0.8029166666666666,
 'train_epoch_loss_avg_over_batch': 0.10981429480844074,
 'train_ra_bd_only': 0.6913194444444445}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 104.55361771583557 s
2024-12-24:01:30:07 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 104.55361771583557 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.048005349225025966,
 'clean_test_loss_avg_over_batch': 0.5300635522739454,
 'epoch': 40,
 'test_acc': 0.8307142857142857,
 'test_asr': 0.98,
 'test_ra': 0.02,
 'train_acc': 0.9635833333333333,
 'train_acc_clean_only': 0.9826543209876544,
 'train_asr_bd_only': 0.7919444444444445,
 'train_epoch_loss_avg_over_batch': 0.11097637487451235,
 'train_ra_bd_only': 0.7024305555555556}
2024-12-24:01:30:09 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.048005349225025966,
 'clean_test_loss_avg_over_batch': 0.5300635522739454,
 'epoch': 40,
 'test_acc': 0.8307142857142857,
 'test_asr': 0.98,
 'test_ra': 0.02,
 'train_acc': 0.9635833333333333,
 'train_acc_clean_only': 0.9826543209876544,
 'train_asr_bd_only': 0.7919444444444445,
 'train_epoch_loss_avg_over_batch': 0.11097637487451235,
 'train_ra_bd_only': 0.7024305555555556}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 104.93017554283142 s
2024-12-24:01:31:54 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 104.93017554283142 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.05755265524864874,
 'clean_test_loss_avg_over_batch': 0.579999961974946,
 'epoch': 41,
 'test_acc': 0.8439285714285715,
 'test_asr': 0.9757142857142858,
 'test_ra': 0.024285714285714285,
 'train_acc': 0.9650138888888888,
 'train_acc_clean_only': 0.9837731481481482,
 'train_asr_bd_only': 0.7961805555555556,
 'train_epoch_loss_avg_over_batch': 0.1063939122988118,
 'train_ra_bd_only': 0.7001388888888889}
2024-12-24:01:31:56 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.05755265524864874,
 'clean_test_loss_avg_over_batch': 0.579999961974946,
 'epoch': 41,
 'test_acc': 0.8439285714285715,
 'test_asr': 0.9757142857142858,
 'test_ra': 0.024285714285714285,
 'train_acc': 0.9650138888888888,
 'train_acc_clean_only': 0.9837731481481482,
 'train_asr_bd_only': 0.7961805555555556,
 'train_epoch_loss_avg_over_batch': 0.1063939122988118,
 'train_ra_bd_only': 0.7001388888888889}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.17181754112244 s
2024-12-24:01:33:40 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.17181754112244 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.11887186657722024,
 'clean_test_loss_avg_over_batch': 0.5943558453582227,
 'epoch': 42,
 'test_acc': 0.8392857142857143,
 'test_asr': 0.9607142857142857,
 'test_ra': 0.039285714285714285,
 'train_acc': 0.9658888888888889,
 'train_acc_clean_only': 0.9846759259259259,
 'train_asr_bd_only': 0.7968055555555555,
 'train_epoch_loss_avg_over_batch': 0.10454859080413978,
 'train_ra_bd_only': 0.6985416666666666}
2024-12-24:01:33:42 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.11887186657722024,
 'clean_test_loss_avg_over_batch': 0.5943558453582227,
 'epoch': 42,
 'test_acc': 0.8392857142857143,
 'test_asr': 0.9607142857142857,
 'test_ra': 0.039285714285714285,
 'train_acc': 0.9658888888888889,
 'train_acc_clean_only': 0.9846759259259259,
 'train_asr_bd_only': 0.7968055555555555,
 'train_epoch_loss_avg_over_batch': 0.10454859080413978,
 'train_ra_bd_only': 0.6985416666666666}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.63186836242676 s
2024-12-24:01:35:26 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.63186836242676 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.03835840365553105,
 'clean_test_loss_avg_over_batch': 0.616191802250052,
 'epoch': 43,
 'test_acc': 0.8285714285714286,
 'test_asr': 0.98,
 'test_ra': 0.02,
 'train_acc': 0.96725,
 'train_acc_clean_only': 0.9865586419753086,
 'train_asr_bd_only': 0.7934722222222222,
 'train_epoch_loss_avg_over_batch': 0.10076630271308952,
 'train_ra_bd_only': 0.7027083333333334}
2024-12-24:01:35:28 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.03835840365553105,
 'clean_test_loss_avg_over_batch': 0.616191802250052,
 'epoch': 43,
 'test_acc': 0.8285714285714286,
 'test_asr': 0.98,
 'test_ra': 0.02,
 'train_acc': 0.96725,
 'train_acc_clean_only': 0.9865586419753086,
 'train_asr_bd_only': 0.7934722222222222,
 'train_epoch_loss_avg_over_batch': 0.10076630271308952,
 'train_ra_bd_only': 0.7027083333333334}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.89445281028748 s
2024-12-24:01:37:12 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.89445281028748 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.005104997380509634,
 'clean_test_loss_avg_over_batch': 0.5253910255110399,
 'epoch': 44,
 'test_acc': 0.8439285714285715,
 'test_asr': 1.0,
 'test_ra': 0.0,
 'train_acc': 0.9679027777777778,
 'train_acc_clean_only': 0.986929012345679,
 'train_asr_bd_only': 0.7966666666666666,
 'train_epoch_loss_avg_over_batch': 0.09882379672262404,
 'train_ra_bd_only': 0.6984027777777778}
2024-12-24:01:37:14 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.005104997380509634,
 'clean_test_loss_avg_over_batch': 0.5253910255110399,
 'epoch': 44,
 'test_acc': 0.8439285714285715,
 'test_asr': 1.0,
 'test_ra': 0.0,
 'train_acc': 0.9679027777777778,
 'train_acc_clean_only': 0.986929012345679,
 'train_asr_bd_only': 0.7966666666666666,
 'train_epoch_loss_avg_over_batch': 0.09882379672262404,
 'train_ra_bd_only': 0.6984027777777778}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.36843585968018 s
2024-12-24:01:38:58 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.36843585968018 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.15514035836200823,
 'clean_test_loss_avg_over_batch': 0.6197779788212343,
 'epoch': 45,
 'test_acc': 0.8364285714285714,
 'test_asr': 0.9521428571428572,
 'test_ra': 0.047857142857142855,
 'train_acc': 0.9680833333333333,
 'train_acc_clean_only': 0.987037037037037,
 'train_asr_bd_only': 0.7975,
 'train_epoch_loss_avg_over_batch': 0.09801561391188039,
 'train_ra_bd_only': 0.6984027777777778}
2024-12-24:01:39:00 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.15514035836200823,
 'clean_test_loss_avg_over_batch': 0.6197779788212343,
 'epoch': 45,
 'test_acc': 0.8364285714285714,
 'test_asr': 0.9521428571428572,
 'test_ra': 0.047857142857142855,
 'train_acc': 0.9680833333333333,
 'train_acc_clean_only': 0.987037037037037,
 'train_asr_bd_only': 0.7975,
 'train_epoch_loss_avg_over_batch': 0.09801561391188039,
 'train_ra_bd_only': 0.6984027777777778}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.41598534584045 s
2024-12-24:01:40:43 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.41598534584045 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.03232485024702989,
 'clean_test_loss_avg_over_batch': 0.5523281186311082,
 'epoch': 46,
 'test_acc': 0.8492857142857143,
 'test_asr': 0.9857142857142858,
 'test_ra': 0.014285714285714285,
 'train_acc': 0.9686319444444444,
 'train_acc_clean_only': 0.9874691358024691,
 'train_asr_bd_only': 0.7990972222222222,
 'train_epoch_loss_avg_over_batch': 0.09719797861741648,
 'train_ra_bd_only': 0.6988888888888889}
2024-12-24:01:40:45 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.03232485024702989,
 'clean_test_loss_avg_over_batch': 0.5523281186311082,
 'epoch': 46,
 'test_acc': 0.8492857142857143,
 'test_asr': 0.9857142857142858,
 'test_ra': 0.014285714285714285,
 'train_acc': 0.9686319444444444,
 'train_acc_clean_only': 0.9874691358024691,
 'train_asr_bd_only': 0.7990972222222222,
 'train_epoch_loss_avg_over_batch': 0.09719797861741648,
 'train_ra_bd_only': 0.6988888888888889}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.74759769439697 s
2024-12-24:01:42:30 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.74759769439697 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.020591999289039944,
 'clean_test_loss_avg_over_batch': 0.675828757611188,
 'epoch': 47,
 'test_acc': 0.8321428571428572,
 'test_asr': 0.99,
 'test_ra': 0.01,
 'train_acc': 0.9691875,
 'train_acc_clean_only': 0.9883333333333333,
 'train_asr_bd_only': 0.796875,
 'train_epoch_loss_avg_over_batch': 0.0954351602676842,
 'train_ra_bd_only': 0.6988888888888889}
2024-12-24:01:42:32 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.020591999289039944,
 'clean_test_loss_avg_over_batch': 0.675828757611188,
 'epoch': 47,
 'test_acc': 0.8321428571428572,
 'test_asr': 0.99,
 'test_ra': 0.01,
 'train_acc': 0.9691875,
 'train_acc_clean_only': 0.9883333333333333,
 'train_asr_bd_only': 0.796875,
 'train_epoch_loss_avg_over_batch': 0.0954351602676842,
 'train_ra_bd_only': 0.6988888888888889}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.10209250450134 s
2024-12-24:01:44:15 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.10209250450134 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.037127481514207,
 'clean_test_loss_avg_over_batch': 0.5992357035760175,
 'epoch': 48,
 'test_acc': 0.8464285714285714,
 'test_asr': 0.9814285714285714,
 'test_ra': 0.018571428571428572,
 'train_acc': 0.9698263888888888,
 'train_acc_clean_only': 0.9885262345679012,
 'train_asr_bd_only': 0.8015277777777777,
 'train_epoch_loss_avg_over_batch': 0.09307537021239598,
 'train_ra_bd_only': 0.6960416666666667}
2024-12-24:01:44:17 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.037127481514207,
 'clean_test_loss_avg_over_batch': 0.5992357035760175,
 'epoch': 48,
 'test_acc': 0.8464285714285714,
 'test_asr': 0.9814285714285714,
 'test_ra': 0.018571428571428572,
 'train_acc': 0.9698263888888888,
 'train_acc_clean_only': 0.9885262345679012,
 'train_asr_bd_only': 0.8015277777777777,
 'train_epoch_loss_avg_over_batch': 0.09307537021239598,
 'train_ra_bd_only': 0.6960416666666667}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 102.93548488616943 s
2024-12-24:01:46:00 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 102.93548488616943 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.02036792573265054,
 'clean_test_loss_avg_over_batch': 0.6390587291256948,
 'epoch': 49,
 'test_acc': 0.8332142857142857,
 'test_asr': 0.9957142857142857,
 'test_ra': 0.004285714285714286,
 'train_acc': 0.9698125,
 'train_acc_clean_only': 0.9884722222222222,
 'train_asr_bd_only': 0.801875,
 'train_epoch_loss_avg_over_batch': 0.09365293106105592,
 'train_ra_bd_only': 0.6948611111111112}
2024-12-24:01:46:02 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.02036792573265054,
 'clean_test_loss_avg_over_batch': 0.6390587291256948,
 'epoch': 49,
 'test_acc': 0.8332142857142857,
 'test_asr': 0.9957142857142857,
 'test_ra': 0.004285714285714286,
 'train_acc': 0.9698125,
 'train_acc_clean_only': 0.9884722222222222,
 'train_asr_bd_only': 0.801875,
 'train_epoch_loss_avg_over_batch': 0.09365293106105592,
 'train_ra_bd_only': 0.6948611111111112}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.58249878883362 s
2024-12-24:01:47:46 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.58249878883362 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.09609157973053781,
 'clean_test_loss_avg_over_batch': 0.6461990929886021,
 'epoch': 50,
 'test_acc': 0.8325,
 'test_asr': 0.9507142857142857,
 'test_ra': 0.04928571428571429,
 'train_acc': 0.9699166666666666,
 'train_acc_clean_only': 0.988804012345679,
 'train_asr_bd_only': 0.7999305555555556,
 'train_epoch_loss_avg_over_batch': 0.09267329568664233,
 'train_ra_bd_only': 0.6979166666666666}
2024-12-24:01:47:48 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.09609157973053781,
 'clean_test_loss_avg_over_batch': 0.6461990929886021,
 'epoch': 50,
 'test_acc': 0.8325,
 'test_asr': 0.9507142857142857,
 'test_ra': 0.04928571428571429,
 'train_acc': 0.9699166666666666,
 'train_acc_clean_only': 0.988804012345679,
 'train_asr_bd_only': 0.7999305555555556,
 'train_epoch_loss_avg_over_batch': 0.09267329568664233,
 'train_ra_bd_only': 0.6979166666666666}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 104.0247209072113 s
2024-12-24:01:49:33 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 104.0247209072113 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.08251626208022406,
 'clean_test_loss_avg_over_batch': 0.5460581609301947,
 'epoch': 51,
 'test_acc': 0.8521428571428571,
 'test_asr': 0.9742857142857143,
 'test_ra': 0.025714285714285714,
 'train_acc': 0.9699236111111111,
 'train_acc_clean_only': 0.9891975308641975,
 'train_asr_bd_only': 0.7964583333333334,
 'train_epoch_loss_avg_over_batch': 0.09207998056875334,
 'train_ra_bd_only': 0.7016666666666667}
2024-12-24:01:49:35 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.08251626208022406,
 'clean_test_loss_avg_over_batch': 0.5460581609301947,
 'epoch': 51,
 'test_acc': 0.8521428571428571,
 'test_asr': 0.9742857142857143,
 'test_ra': 0.025714285714285714,
 'train_acc': 0.9699236111111111,
 'train_acc_clean_only': 0.9891975308641975,
 'train_asr_bd_only': 0.7964583333333334,
 'train_epoch_loss_avg_over_batch': 0.09207998056875334,
 'train_ra_bd_only': 0.7016666666666667}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.41854524612427 s
2024-12-24:01:51:19 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.41854524612427 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.0541033040816811,
 'clean_test_loss_avg_over_batch': 0.6332009910521182,
 'epoch': 52,
 'test_acc': 0.8496428571428571,
 'test_asr': 0.97,
 'test_ra': 0.03,
 'train_acc': 0.9704444444444444,
 'train_acc_clean_only': 0.9894675925925925,
 'train_asr_bd_only': 0.7992361111111111,
 'train_epoch_loss_avg_over_batch': 0.09078132115801175,
 'train_ra_bd_only': 0.6977777777777778}
2024-12-24:01:51:21 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.0541033040816811,
 'clean_test_loss_avg_over_batch': 0.6332009910521182,
 'epoch': 52,
 'test_acc': 0.8496428571428571,
 'test_asr': 0.97,
 'test_ra': 0.03,
 'train_acc': 0.9704444444444444,
 'train_acc_clean_only': 0.9894675925925925,
 'train_asr_bd_only': 0.7992361111111111,
 'train_epoch_loss_avg_over_batch': 0.09078132115801175,
 'train_ra_bd_only': 0.6977777777777778}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.42095613479614 s
2024-12-24:01:53:05 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.42095613479614 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.011484051004861778,
 'clean_test_loss_avg_over_batch': 0.6048694387639195,
 'epoch': 53,
 'test_acc': 0.8482142857142857,
 'test_asr': 0.9942857142857143,
 'test_ra': 0.005714285714285714,
 'train_acc': 0.9707083333333333,
 'train_acc_clean_only': 0.9896219135802469,
 'train_asr_bd_only': 0.8004861111111111,
 'train_epoch_loss_avg_over_batch': 0.09037572348117828,
 'train_ra_bd_only': 0.69625}
2024-12-24:01:53:07 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.011484051004861778,
 'clean_test_loss_avg_over_batch': 0.6048694387639195,
 'epoch': 53,
 'test_acc': 0.8482142857142857,
 'test_asr': 0.9942857142857143,
 'test_ra': 0.005714285714285714,
 'train_acc': 0.9707083333333333,
 'train_acc_clean_only': 0.9896219135802469,
 'train_asr_bd_only': 0.8004861111111111,
 'train_epoch_loss_avg_over_batch': 0.09037572348117828,
 'train_ra_bd_only': 0.69625}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.40952610969543 s
2024-12-24:01:54:50 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.40952610969543 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.02062119083182717,
 'clean_test_loss_avg_over_batch': 0.5780483343088153,
 'epoch': 54,
 'test_acc': 0.8396428571428571,
 'test_asr': 0.9928571428571429,
 'test_ra': 0.007142857142857143,
 'train_acc': 0.9710347222222222,
 'train_acc_clean_only': 0.9901466049382716,
 'train_asr_bd_only': 0.7990277777777778,
 'train_epoch_loss_avg_over_batch': 0.08974281996157435,
 'train_ra_bd_only': 0.6982638888888889}
2024-12-24:01:54:52 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.02062119083182717,
 'clean_test_loss_avg_over_batch': 0.5780483343088153,
 'epoch': 54,
 'test_acc': 0.8396428571428571,
 'test_asr': 0.9928571428571429,
 'test_ra': 0.007142857142857143,
 'train_acc': 0.9710347222222222,
 'train_acc_clean_only': 0.9901466049382716,
 'train_asr_bd_only': 0.7990277777777778,
 'train_epoch_loss_avg_over_batch': 0.08974281996157435,
 'train_ra_bd_only': 0.6982638888888889}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.36693382263184 s
2024-12-24:01:56:36 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.36693382263184 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 1.4520938742736524,
 'clean_test_loss_avg_over_batch': 0.6551603386178613,
 'epoch': 55,
 'test_acc': 0.8353571428571429,
 'test_asr': 0.9607142857142857,
 'test_ra': 0.039285714285714285,
 'train_acc': 0.9722013888888889,
 'train_acc_clean_only': 0.9911342592592592,
 'train_asr_bd_only': 0.8018055555555555,
 'train_epoch_loss_avg_over_batch': 0.0864243691969249,
 'train_ra_bd_only': 0.6957638888888888}
2024-12-24:01:56:38 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 1.4520938742736524,
 'clean_test_loss_avg_over_batch': 0.6551603386178613,
 'epoch': 55,
 'test_acc': 0.8353571428571429,
 'test_asr': 0.9607142857142857,
 'test_ra': 0.039285714285714285,
 'train_acc': 0.9722013888888889,
 'train_acc_clean_only': 0.9911342592592592,
 'train_asr_bd_only': 0.8018055555555555,
 'train_epoch_loss_avg_over_batch': 0.0864243691969249,
 'train_ra_bd_only': 0.6957638888888888}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 102.9713807106018 s
2024-12-24:01:58:21 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 102.9713807106018 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.2291345869069284,
 'clean_test_loss_avg_over_batch': 0.6448856271295385,
 'epoch': 56,
 'test_acc': 0.8392857142857143,
 'test_asr': 0.99,
 'test_ra': 0.01,
 'train_acc': 0.9719722222222222,
 'train_acc_clean_only': 0.9911574074074074,
 'train_asr_bd_only': 0.7993055555555556,
 'train_epoch_loss_avg_over_batch': 0.08700114174849458,
 'train_ra_bd_only': 0.6992361111111111}
2024-12-24:01:58:23 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.2291345869069284,
 'clean_test_loss_avg_over_batch': 0.6448856271295385,
 'epoch': 56,
 'test_acc': 0.8392857142857143,
 'test_asr': 0.99,
 'test_ra': 0.01,
 'train_acc': 0.9719722222222222,
 'train_acc_clean_only': 0.9911574074074074,
 'train_asr_bd_only': 0.7993055555555556,
 'train_epoch_loss_avg_over_batch': 0.08700114174849458,
 'train_ra_bd_only': 0.6992361111111111}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 102.1969747543335 s
2024-12-24:02:00:06 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 102.1969747543335 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.0420108370652253,
 'clean_test_loss_avg_over_batch': 0.5109837197444655,
 'epoch': 57,
 'test_acc': 0.8503571428571428,
 'test_asr': 0.9842857142857143,
 'test_ra': 0.015714285714285715,
 'train_acc': 0.9726180555555556,
 'train_acc_clean_only': 0.9918364197530865,
 'train_asr_bd_only': 0.7996527777777778,
 'train_epoch_loss_avg_over_batch': 0.08545481360620923,
 'train_ra_bd_only': 0.6988888888888889}
2024-12-24:02:00:08 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.0420108370652253,
 'clean_test_loss_avg_over_batch': 0.5109837197444655,
 'epoch': 57,
 'test_acc': 0.8503571428571428,
 'test_asr': 0.9842857142857143,
 'test_ra': 0.015714285714285715,
 'train_acc': 0.9726180555555556,
 'train_acc_clean_only': 0.9918364197530865,
 'train_asr_bd_only': 0.7996527777777778,
 'train_epoch_loss_avg_over_batch': 0.08545481360620923,
 'train_ra_bd_only': 0.6988888888888889}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.1427583694458 s
2024-12-24:02:01:51 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.1427583694458 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.2735220476752147,
 'clean_test_loss_avg_over_batch': 0.6009943322701887,
 'epoch': 58,
 'test_acc': 0.8457142857142858,
 'test_asr': 0.9885714285714285,
 'test_ra': 0.011428571428571429,
 'train_acc': 0.9722916666666667,
 'train_acc_clean_only': 0.991766975308642,
 'train_asr_bd_only': 0.7970138888888889,
 'train_epoch_loss_avg_over_batch': 0.08589761895272467,
 'train_ra_bd_only': 0.70125}
2024-12-24:02:01:53 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.2735220476752147,
 'clean_test_loss_avg_over_batch': 0.6009943322701887,
 'epoch': 58,
 'test_acc': 0.8457142857142858,
 'test_asr': 0.9885714285714285,
 'test_ra': 0.011428571428571429,
 'train_acc': 0.9722916666666667,
 'train_acc_clean_only': 0.991766975308642,
 'train_asr_bd_only': 0.7970138888888889,
 'train_epoch_loss_avg_over_batch': 0.08589761895272467,
 'train_ra_bd_only': 0.70125}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.19715857505798 s
2024-12-24:02:03:37 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.19715857505798 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.9239241921618073,
 'clean_test_loss_avg_over_batch': 0.5492636696012183,
 'epoch': 59,
 'test_acc': 0.8521428571428571,
 'test_asr': 0.9914285714285714,
 'test_ra': 0.008571428571428572,
 'train_acc': 0.9732916666666667,
 'train_acc_clean_only': 0.9927700617283951,
 'train_asr_bd_only': 0.7979861111111111,
 'train_epoch_loss_avg_over_batch': 0.08367094294064575,
 'train_ra_bd_only': 0.6997222222222222}
2024-12-24:02:03:39 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.9239241921618073,
 'clean_test_loss_avg_over_batch': 0.5492636696012183,
 'epoch': 59,
 'test_acc': 0.8521428571428571,
 'test_asr': 0.9914285714285714,
 'test_ra': 0.008571428571428572,
 'train_acc': 0.9732916666666667,
 'train_acc_clean_only': 0.9927700617283951,
 'train_asr_bd_only': 0.7979861111111111,
 'train_epoch_loss_avg_over_batch': 0.08367094294064575,
 'train_ra_bd_only': 0.6997222222222222}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 102.97028875350952 s
2024-12-24:02:05:22 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 102.97028875350952 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 7.225332506442845,
 'clean_test_loss_avg_over_batch': 0.5862426199018955,
 'epoch': 60,
 'test_acc': 0.8403571428571428,
 'test_asr': 0.945,
 'test_ra': 0.055,
 'train_acc': 0.9735277777777778,
 'train_acc_clean_only': 0.9922993827160493,
 'train_asr_bd_only': 0.8045833333333333,
 'train_epoch_loss_avg_over_batch': 0.0827675166933073,
 'train_ra_bd_only': 0.6945138888888889}
2024-12-24:02:05:24 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 7.225332506442845,
 'clean_test_loss_avg_over_batch': 0.5862426199018955,
 'epoch': 60,
 'test_acc': 0.8403571428571428,
 'test_asr': 0.945,
 'test_ra': 0.055,
 'train_acc': 0.9735277777777778,
 'train_acc_clean_only': 0.9922993827160493,
 'train_asr_bd_only': 0.8045833333333333,
 'train_epoch_loss_avg_over_batch': 0.0827675166933073,
 'train_ra_bd_only': 0.6945138888888889}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.04351925849915 s
2024-12-24:02:07:08 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.04351925849915 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.02006881895199926,
 'clean_test_loss_avg_over_batch': 0.6873231106437743,
 'epoch': 61,
 'test_acc': 0.835,
 'test_asr': 0.9928571428571429,
 'test_ra': 0.007142857142857143,
 'train_acc': 0.973375,
 'train_acc_clean_only': 0.9927083333333333,
 'train_asr_bd_only': 0.799375,
 'train_epoch_loss_avg_over_batch': 0.08304832184314728,
 'train_ra_bd_only': 0.6984722222222223}
2024-12-24:02:07:10 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.02006881895199926,
 'clean_test_loss_avg_over_batch': 0.6873231106437743,
 'epoch': 61,
 'test_acc': 0.835,
 'test_asr': 0.9928571428571429,
 'test_ra': 0.007142857142857143,
 'train_acc': 0.973375,
 'train_acc_clean_only': 0.9927083333333333,
 'train_asr_bd_only': 0.799375,
 'train_epoch_loss_avg_over_batch': 0.08304832184314728,
 'train_ra_bd_only': 0.6984722222222223}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 102.32403612136841 s
2024-12-24:02:08:53 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 102.32403612136841 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.003917158044218509,
 'clean_test_loss_avg_over_batch': 0.6483367596414279,
 'epoch': 62,
 'test_acc': 0.8457142857142858,
 'test_asr': 1.0,
 'test_ra': 0.0,
 'train_acc': 0.9741041666666667,
 'train_acc_clean_only': 0.9934953703703704,
 'train_asr_bd_only': 0.7995833333333333,
 'train_epoch_loss_avg_over_batch': 0.08138030677537124,
 'train_ra_bd_only': 0.7000694444444444}
2024-12-24:02:08:55 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.003917158044218509,
 'clean_test_loss_avg_over_batch': 0.6483367596414279,
 'epoch': 62,
 'test_acc': 0.8457142857142858,
 'test_asr': 1.0,
 'test_ra': 0.0,
 'train_acc': 0.9741041666666667,
 'train_acc_clean_only': 0.9934953703703704,
 'train_asr_bd_only': 0.7995833333333333,
 'train_epoch_loss_avg_over_batch': 0.08138030677537124,
 'train_ra_bd_only': 0.7000694444444444}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 104.20442080497742 s
2024-12-24:02:10:39 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 104.20442080497742 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.039233396395998585,
 'clean_test_loss_avg_over_batch': 0.5739711963317611,
 'epoch': 63,
 'test_acc': 0.8525,
 'test_asr': 0.9828571428571429,
 'test_ra': 0.017142857142857144,
 'train_acc': 0.9739375,
 'train_acc_clean_only': 0.9937885802469136,
 'train_asr_bd_only': 0.7952777777777778,
 'train_epoch_loss_avg_over_batch': 0.0815641361731622,
 'train_ra_bd_only': 0.7025694444444445}
2024-12-24:02:10:41 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.039233396395998585,
 'clean_test_loss_avg_over_batch': 0.5739711963317611,
 'epoch': 63,
 'test_acc': 0.8525,
 'test_asr': 0.9828571428571429,
 'test_ra': 0.017142857142857144,
 'train_acc': 0.9739375,
 'train_acc_clean_only': 0.9937885802469136,
 'train_asr_bd_only': 0.7952777777777778,
 'train_epoch_loss_avg_over_batch': 0.0815641361731622,
 'train_ra_bd_only': 0.7025694444444445}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 104.35691833496094 s
2024-12-24:02:12:26 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 104.35691833496094 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.038989072575614875,
 'clean_test_loss_avg_over_batch': 0.6582576725631952,
 'epoch': 64,
 'test_acc': 0.8428571428571429,
 'test_asr': 0.9835714285714285,
 'test_ra': 0.016428571428571428,
 'train_acc': 0.9743194444444444,
 'train_acc_clean_only': 0.9938425925925926,
 'train_asr_bd_only': 0.7986111111111112,
 'train_epoch_loss_avg_over_batch': 0.080055701625016,
 'train_ra_bd_only': 0.7002083333333333}
2024-12-24:02:12:28 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.038989072575614875,
 'clean_test_loss_avg_over_batch': 0.6582576725631952,
 'epoch': 64,
 'test_acc': 0.8428571428571429,
 'test_asr': 0.9835714285714285,
 'test_ra': 0.016428571428571428,
 'train_acc': 0.9743194444444444,
 'train_acc_clean_only': 0.9938425925925926,
 'train_asr_bd_only': 0.7986111111111112,
 'train_epoch_loss_avg_over_batch': 0.080055701625016,
 'train_ra_bd_only': 0.7002083333333333}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.93359327316284 s
2024-12-24:02:14:12 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.93359327316284 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.0027638493761928244,
 'clean_test_loss_avg_over_batch': 0.603697070851922,
 'epoch': 65,
 'test_acc': 0.8503571428571428,
 'test_asr': 1.0,
 'test_ra': 0.0,
 'train_acc': 0.9749513888888889,
 'train_acc_clean_only': 0.9942746913580247,
 'train_asr_bd_only': 0.8010416666666667,
 'train_epoch_loss_avg_over_batch': 0.07902764857643181,
 'train_ra_bd_only': 0.6968055555555556}
2024-12-24:02:14:14 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.0027638493761928244,
 'clean_test_loss_avg_over_batch': 0.603697070851922,
 'epoch': 65,
 'test_acc': 0.8503571428571428,
 'test_asr': 1.0,
 'test_ra': 0.0,
 'train_acc': 0.9749513888888889,
 'train_acc_clean_only': 0.9942746913580247,
 'train_asr_bd_only': 0.8010416666666667,
 'train_epoch_loss_avg_over_batch': 0.07902764857643181,
 'train_ra_bd_only': 0.6968055555555556}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.90834641456604 s
2024-12-24:02:15:58 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.90834641456604 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.04059801928021691,
 'clean_test_loss_avg_over_batch': 0.6270218738778071,
 'epoch': 66,
 'test_acc': 0.8453571428571428,
 'test_asr': 0.9821428571428571,
 'test_ra': 0.017857142857142856,
 'train_acc': 0.9750277777777778,
 'train_acc_clean_only': 0.9942206790123457,
 'train_asr_bd_only': 0.8022916666666666,
 'train_epoch_loss_avg_over_batch': 0.0789166021073858,
 'train_ra_bd_only': 0.69625}
2024-12-24:02:16:01 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.04059801928021691,
 'clean_test_loss_avg_over_batch': 0.6270218738778071,
 'epoch': 66,
 'test_acc': 0.8453571428571428,
 'test_asr': 0.9821428571428571,
 'test_ra': 0.017857142857142856,
 'train_acc': 0.9750277777777778,
 'train_acc_clean_only': 0.9942206790123457,
 'train_asr_bd_only': 0.8022916666666666,
 'train_epoch_loss_avg_over_batch': 0.0789166021073858,
 'train_ra_bd_only': 0.69625}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 102.6479709148407 s
2024-12-24:02:17:44 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 102.6479709148407 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.5191424426686188,
 'clean_test_loss_avg_over_batch': 0.7172409601678903,
 'epoch': 67,
 'test_acc': 0.8235714285714286,
 'test_asr': 0.9921428571428571,
 'test_ra': 0.007857142857142858,
 'train_acc': 0.9749444444444444,
 'train_acc_clean_only': 0.9945447530864198,
 'train_asr_bd_only': 0.7985416666666667,
 'train_epoch_loss_avg_over_batch': 0.07806072481969992,
 'train_ra_bd_only': 0.7}
2024-12-24:02:17:46 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.5191424426686188,
 'clean_test_loss_avg_over_batch': 0.7172409601678903,
 'epoch': 67,
 'test_acc': 0.8235714285714286,
 'test_asr': 0.9921428571428571,
 'test_ra': 0.007857142857142858,
 'train_acc': 0.9749444444444444,
 'train_acc_clean_only': 0.9945447530864198,
 'train_asr_bd_only': 0.7985416666666667,
 'train_epoch_loss_avg_over_batch': 0.07806072481969992,
 'train_ra_bd_only': 0.7}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 102.57329893112183 s
2024-12-24:02:19:29 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 102.57329893112183 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.08530011017831964,
 'clean_test_loss_avg_over_batch': 0.5718047144103118,
 'epoch': 68,
 'test_acc': 0.8564285714285714,
 'test_asr': 0.9928571428571429,
 'test_ra': 0.007142857142857143,
 'train_acc': 0.9754236111111111,
 'train_acc_clean_only': 0.9950077160493828,
 'train_asr_bd_only': 0.7991666666666667,
 'train_epoch_loss_avg_over_batch': 0.07733310714364051,
 'train_ra_bd_only': 0.7009027777777778}
2024-12-24:02:19:31 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.08530011017831964,
 'clean_test_loss_avg_over_batch': 0.5718047144103118,
 'epoch': 68,
 'test_acc': 0.8564285714285714,
 'test_asr': 0.9928571428571429,
 'test_ra': 0.007142857142857143,
 'train_acc': 0.9754236111111111,
 'train_acc_clean_only': 0.9950077160493828,
 'train_asr_bd_only': 0.7991666666666667,
 'train_epoch_loss_avg_over_batch': 0.07733310714364051,
 'train_ra_bd_only': 0.7009027777777778}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.66525483131409 s
2024-12-24:02:21:15 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.66525483131409 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.00601739315210249,
 'clean_test_loss_avg_over_batch': 0.6136903264136477,
 'epoch': 69,
 'test_acc': 0.8421428571428572,
 'test_asr': 0.9985714285714286,
 'test_ra': 0.0014285714285714286,
 'train_acc': 0.9762569444444444,
 'train_acc_clean_only': 0.9958101851851852,
 'train_asr_bd_only': 0.8002777777777778,
 'train_epoch_loss_avg_over_batch': 0.07557323628498448,
 'train_ra_bd_only': 0.6990972222222223}
2024-12-24:02:21:17 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.00601739315210249,
 'clean_test_loss_avg_over_batch': 0.6136903264136477,
 'epoch': 69,
 'test_acc': 0.8421428571428572,
 'test_asr': 0.9985714285714286,
 'test_ra': 0.0014285714285714286,
 'train_acc': 0.9762569444444444,
 'train_acc_clean_only': 0.9958101851851852,
 'train_asr_bd_only': 0.8002777777777778,
 'train_epoch_loss_avg_over_batch': 0.07557323628498448,
 'train_ra_bd_only': 0.6990972222222223}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.7394061088562 s
2024-12-24:02:23:01 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.7394061088562 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.02349039244290907,
 'clean_test_loss_avg_over_batch': 0.6174903373149309,
 'epoch': 70,
 'test_acc': 0.8575,
 'test_asr': 0.9892857142857143,
 'test_ra': 0.010714285714285714,
 'train_acc': 0.9758819444444444,
 'train_acc_clean_only': 0.9953395061728395,
 'train_asr_bd_only': 0.8007638888888889,
 'train_epoch_loss_avg_over_batch': 0.07576480352381865,
 'train_ra_bd_only': 0.6995833333333333}
2024-12-24:02:23:03 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.02349039244290907,
 'clean_test_loss_avg_over_batch': 0.6174903373149309,
 'epoch': 70,
 'test_acc': 0.8575,
 'test_asr': 0.9892857142857143,
 'test_ra': 0.010714285714285714,
 'train_acc': 0.9758819444444444,
 'train_acc_clean_only': 0.9953395061728395,
 'train_asr_bd_only': 0.8007638888888889,
 'train_epoch_loss_avg_over_batch': 0.07576480352381865,
 'train_ra_bd_only': 0.6995833333333333}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.36828780174255 s
2024-12-24:02:24:47 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.36828780174255 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.0003243295478486371,
 'clean_test_loss_avg_over_batch': 0.6475436225618151,
 'epoch': 71,
 'test_acc': 0.8414285714285714,
 'test_asr': 1.0,
 'test_ra': 0.0,
 'train_acc': 0.9760069444444445,
 'train_acc_clean_only': 0.995871913580247,
 'train_asr_bd_only': 0.7972222222222223,
 'train_epoch_loss_avg_over_batch': 0.07589758369657729,
 'train_ra_bd_only': 0.7027083333333334}
2024-12-24:02:24:49 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.0003243295478486371,
 'clean_test_loss_avg_over_batch': 0.6475436225618151,
 'epoch': 71,
 'test_acc': 0.8414285714285714,
 'test_asr': 1.0,
 'test_ra': 0.0,
 'train_acc': 0.9760069444444445,
 'train_acc_clean_only': 0.995871913580247,
 'train_asr_bd_only': 0.7972222222222223,
 'train_epoch_loss_avg_over_batch': 0.07589758369657729,
 'train_ra_bd_only': 0.7027083333333334}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.01249718666077 s
2024-12-24:02:26:32 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.01249718666077 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.03078196137423881,
 'clean_test_loss_avg_over_batch': 0.6290170785716989,
 'epoch': 72,
 'test_acc': 0.8475,
 'test_asr': 0.9885714285714285,
 'test_ra': 0.011428571428571429,
 'train_acc': 0.97575,
 'train_acc_clean_only': 0.9959567901234568,
 'train_asr_bd_only': 0.7938888888888889,
 'train_epoch_loss_avg_over_batch': 0.07593646866414282,
 'train_ra_bd_only': 0.7054861111111111}
2024-12-24:02:26:34 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.03078196137423881,
 'clean_test_loss_avg_over_batch': 0.6290170785716989,
 'epoch': 72,
 'test_acc': 0.8475,
 'test_asr': 0.9885714285714285,
 'test_ra': 0.011428571428571429,
 'train_acc': 0.97575,
 'train_acc_clean_only': 0.9959567901234568,
 'train_asr_bd_only': 0.7938888888888889,
 'train_epoch_loss_avg_over_batch': 0.07593646866414282,
 'train_ra_bd_only': 0.7054861111111111}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.29047966003418 s
2024-12-24:02:28:18 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.29047966003418 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.009793720864928962,
 'clean_test_loss_avg_over_batch': 0.5911541501991451,
 'epoch': 73,
 'test_acc': 0.8621428571428571,
 'test_asr': 0.9942857142857143,
 'test_ra': 0.005714285714285714,
 'train_acc': 0.9763541666666666,
 'train_acc_clean_only': 0.9960262345679012,
 'train_asr_bd_only': 0.7993055555555556,
 'train_epoch_loss_avg_over_batch': 0.07402988630698787,
 'train_ra_bd_only': 0.7007638888888889}
2024-12-24:02:28:20 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.009793720864928962,
 'clean_test_loss_avg_over_batch': 0.5911541501991451,
 'epoch': 73,
 'test_acc': 0.8621428571428571,
 'test_asr': 0.9942857142857143,
 'test_ra': 0.005714285714285714,
 'train_acc': 0.9763541666666666,
 'train_acc_clean_only': 0.9960262345679012,
 'train_asr_bd_only': 0.7993055555555556,
 'train_epoch_loss_avg_over_batch': 0.07402988630698787,
 'train_ra_bd_only': 0.7007638888888889}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 104.00800323486328 s
2024-12-24:02:30:04 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 104.00800323486328 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.007548870521449399,
 'clean_test_loss_avg_over_batch': 0.6335745469074358,
 'epoch': 74,
 'test_acc': 0.8485714285714285,
 'test_asr': 0.9971428571428571,
 'test_ra': 0.002857142857142857,
 'train_acc': 0.9772569444444444,
 'train_acc_clean_only': 0.9964891975308642,
 'train_asr_bd_only': 0.8041666666666667,
 'train_epoch_loss_avg_over_batch': 0.07210054942303233,
 'train_ra_bd_only': 0.695625}
2024-12-24:02:30:06 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.007548870521449399,
 'clean_test_loss_avg_over_batch': 0.6335745469074358,
 'epoch': 74,
 'test_acc': 0.8485714285714285,
 'test_asr': 0.9971428571428571,
 'test_ra': 0.002857142857142857,
 'train_acc': 0.9772569444444444,
 'train_acc_clean_only': 0.9964891975308642,
 'train_asr_bd_only': 0.8041666666666667,
 'train_epoch_loss_avg_over_batch': 0.07210054942303233,
 'train_ra_bd_only': 0.695625}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.9689245223999 s
2024-12-24:02:31:50 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.9689245223999 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.09378778633187969,
 'clean_test_loss_avg_over_batch': 0.6393151420316744,
 'epoch': 75,
 'test_acc': 0.8539285714285715,
 'test_asr': 0.9678571428571429,
 'test_ra': 0.03214285714285714,
 'train_acc': 0.9771666666666666,
 'train_acc_clean_only': 0.9970293209876543,
 'train_asr_bd_only': 0.7984027777777778,
 'train_epoch_loss_avg_over_batch': 0.07233920322855314,
 'train_ra_bd_only': 0.7005555555555556}
2024-12-24:02:31:53 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.09378778633187969,
 'clean_test_loss_avg_over_batch': 0.6393151420316744,
 'epoch': 75,
 'test_acc': 0.8539285714285715,
 'test_asr': 0.9678571428571429,
 'test_ra': 0.03214285714285714,
 'train_acc': 0.9771666666666666,
 'train_acc_clean_only': 0.9970293209876543,
 'train_asr_bd_only': 0.7984027777777778,
 'train_epoch_loss_avg_over_batch': 0.07233920322855314,
 'train_ra_bd_only': 0.7005555555555556}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 102.91748428344727 s
2024-12-24:02:33:36 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 102.91748428344727 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.005938770714485806,
 'clean_test_loss_avg_over_batch': 0.7018623073500666,
 'epoch': 76,
 'test_acc': 0.8446428571428571,
 'test_asr': 0.9971428571428571,
 'test_ra': 0.002857142857142857,
 'train_acc': 0.9777708333333334,
 'train_acc_clean_only': 0.9969212962962963,
 'train_asr_bd_only': 0.8054166666666667,
 'train_epoch_loss_avg_over_batch': 0.07103275597095489,
 'train_ra_bd_only': 0.6946527777777778}
2024-12-24:02:33:38 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.005938770714485806,
 'clean_test_loss_avg_over_batch': 0.7018623073500666,
 'epoch': 76,
 'test_acc': 0.8446428571428571,
 'test_asr': 0.9971428571428571,
 'test_ra': 0.002857142857142857,
 'train_acc': 0.9777708333333334,
 'train_acc_clean_only': 0.9969212962962963,
 'train_asr_bd_only': 0.8054166666666667,
 'train_epoch_loss_avg_over_batch': 0.07103275597095489,
 'train_ra_bd_only': 0.6946527777777778}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.33893036842346 s
2024-12-24:02:35:22 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.33893036842346 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.012455466282765636,
 'clean_test_loss_avg_over_batch': 0.628558755301955,
 'epoch': 77,
 'test_acc': 0.8510714285714286,
 'test_asr': 0.9942857142857143,
 'test_ra': 0.005714285714285714,
 'train_acc': 0.9779097222222223,
 'train_acc_clean_only': 0.9971219135802469,
 'train_asr_bd_only': 0.805,
 'train_epoch_loss_avg_over_batch': 0.07047223635597362,
 'train_ra_bd_only': 0.6949305555555556}
2024-12-24:02:35:24 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.012455466282765636,
 'clean_test_loss_avg_over_batch': 0.628558755301955,
 'epoch': 77,
 'test_acc': 0.8510714285714286,
 'test_asr': 0.9942857142857143,
 'test_ra': 0.005714285714285714,
 'train_acc': 0.9779097222222223,
 'train_acc_clean_only': 0.9971219135802469,
 'train_asr_bd_only': 0.805,
 'train_epoch_loss_avg_over_batch': 0.07047223635597362,
 'train_ra_bd_only': 0.6949305555555556}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.75949621200562 s
2024-12-24:02:37:08 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.75949621200562 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.08357001285846556,
 'clean_test_loss_avg_over_batch': 0.627848402089016,
 'epoch': 78,
 'test_acc': 0.8578571428571429,
 'test_asr': 0.9864285714285714,
 'test_ra': 0.013571428571428571,
 'train_acc': 0.9773194444444444,
 'train_acc_clean_only': 0.9974614197530864,
 'train_asr_bd_only': 0.7960416666666666,
 'train_epoch_loss_avg_over_batch': 0.07218683052062988,
 'train_ra_bd_only': 0.7043055555555555}
2024-12-24:02:37:10 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.08357001285846556,
 'clean_test_loss_avg_over_batch': 0.627848402089016,
 'epoch': 78,
 'test_acc': 0.8578571428571429,
 'test_asr': 0.9864285714285714,
 'test_ra': 0.013571428571428571,
 'train_acc': 0.9773194444444444,
 'train_acc_clean_only': 0.9974614197530864,
 'train_asr_bd_only': 0.7960416666666666,
 'train_epoch_loss_avg_over_batch': 0.07218683052062988,
 'train_ra_bd_only': 0.7043055555555555}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.4834554195404 s
2024-12-24:02:38:54 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.4834554195404 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.002389967186238871,
 'clean_test_loss_avg_over_batch': 0.6731587791476737,
 'epoch': 79,
 'test_acc': 0.8539285714285715,
 'test_asr': 0.9992857142857143,
 'test_ra': 0.0007142857142857143,
 'train_acc': 0.9775208333333333,
 'train_acc_clean_only': 0.9974228395061728,
 'train_asr_bd_only': 0.7984027777777778,
 'train_epoch_loss_avg_over_batch': 0.07134046230713527,
 'train_ra_bd_only': 0.7018055555555556}
2024-12-24:02:38:56 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.002389967186238871,
 'clean_test_loss_avg_over_batch': 0.6731587791476737,
 'epoch': 79,
 'test_acc': 0.8539285714285715,
 'test_asr': 0.9992857142857143,
 'test_ra': 0.0007142857142857143,
 'train_acc': 0.9775208333333333,
 'train_acc_clean_only': 0.9974228395061728,
 'train_asr_bd_only': 0.7984027777777778,
 'train_epoch_loss_avg_over_batch': 0.07134046230713527,
 'train_ra_bd_only': 0.7018055555555556}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 104.00740909576416 s
2024-12-24:02:40:40 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 104.00740909576416 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.021338593590454282,
 'clean_test_loss_avg_over_batch': 0.6213278172389519,
 'epoch': 80,
 'test_acc': 0.8582142857142857,
 'test_asr': 0.9892857142857143,
 'test_ra': 0.010714285714285714,
 'train_acc': 0.9776736111111111,
 'train_acc_clean_only': 0.9971836419753086,
 'train_asr_bd_only': 0.8020833333333334,
 'train_epoch_loss_avg_over_batch': 0.07054939575327768,
 'train_ra_bd_only': 0.6985416666666666}
2024-12-24:02:40:42 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.021338593590454282,
 'clean_test_loss_avg_over_batch': 0.6213278172389519,
 'epoch': 80,
 'test_acc': 0.8582142857142857,
 'test_asr': 0.9892857142857143,
 'test_ra': 0.010714285714285714,
 'train_acc': 0.9776736111111111,
 'train_acc_clean_only': 0.9971836419753086,
 'train_asr_bd_only': 0.8020833333333334,
 'train_epoch_loss_avg_over_batch': 0.07054939575327768,
 'train_ra_bd_only': 0.6985416666666666}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.36139178276062 s
2024-12-24:02:42:26 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.36139178276062 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.00692225665856809,
 'clean_test_loss_avg_over_batch': 0.6531705340920863,
 'epoch': 81,
 'test_acc': 0.8596428571428572,
 'test_asr': 0.995,
 'test_ra': 0.005,
 'train_acc': 0.9778472222222222,
 'train_acc_clean_only': 0.9975771604938272,
 'train_asr_bd_only': 0.8002777777777778,
 'train_epoch_loss_avg_over_batch': 0.06979189475046264,
 'train_ra_bd_only': 0.699375}
2024-12-24:02:42:28 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.00692225665856809,
 'clean_test_loss_avg_over_batch': 0.6531705340920863,
 'epoch': 81,
 'test_acc': 0.8596428571428572,
 'test_asr': 0.995,
 'test_ra': 0.005,
 'train_acc': 0.9778472222222222,
 'train_acc_clean_only': 0.9975771604938272,
 'train_asr_bd_only': 0.8002777777777778,
 'train_epoch_loss_avg_over_batch': 0.06979189475046264,
 'train_ra_bd_only': 0.699375}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 102.62822937965393 s
2024-12-24:02:44:11 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 102.62822937965393 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.003738883305975998,
 'clean_test_loss_avg_over_batch': 0.6535237969206222,
 'epoch': 82,
 'test_acc': 0.8589285714285714,
 'test_asr': 0.9992857142857143,
 'test_ra': 0.0007142857142857143,
 'train_acc': 0.9778888888888889,
 'train_acc_clean_only': 0.9977083333333333,
 'train_asr_bd_only': 0.7995138888888889,
 'train_epoch_loss_avg_over_batch': 0.07008637863894304,
 'train_ra_bd_only': 0.7006944444444444}
2024-12-24:02:44:13 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.003738883305975998,
 'clean_test_loss_avg_over_batch': 0.6535237969206222,
 'epoch': 82,
 'test_acc': 0.8589285714285714,
 'test_asr': 0.9992857142857143,
 'test_ra': 0.0007142857142857143,
 'train_acc': 0.9778888888888889,
 'train_acc_clean_only': 0.9977083333333333,
 'train_asr_bd_only': 0.7995138888888889,
 'train_epoch_loss_avg_over_batch': 0.07008637863894304,
 'train_ra_bd_only': 0.7006944444444444}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.66341304779053 s
2024-12-24:02:45:57 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.66341304779053 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.0019559408948142927,
 'clean_test_loss_avg_over_batch': 0.6567877881038426,
 'epoch': 83,
 'test_acc': 0.8564285714285714,
 'test_asr': 1.0,
 'test_ra': 0.0,
 'train_acc': 0.9777847222222222,
 'train_acc_clean_only': 0.9975771604938272,
 'train_asr_bd_only': 0.7996527777777778,
 'train_epoch_loss_avg_over_batch': 0.06963666410495838,
 'train_ra_bd_only': 0.7006944444444444}
2024-12-24:02:45:59 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.0019559408948142927,
 'clean_test_loss_avg_over_batch': 0.6567877881038426,
 'epoch': 83,
 'test_acc': 0.8564285714285714,
 'test_asr': 1.0,
 'test_ra': 0.0,
 'train_acc': 0.9777847222222222,
 'train_acc_clean_only': 0.9975771604938272,
 'train_asr_bd_only': 0.7996527777777778,
 'train_epoch_loss_avg_over_batch': 0.06963666410495838,
 'train_ra_bd_only': 0.7006944444444444}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 104.21103811264038 s
2024-12-24:02:47:43 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 104.21103811264038 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.0032512037035882136,
 'clean_test_loss_avg_over_batch': 0.6903020074083046,
 'epoch': 84,
 'test_acc': 0.8517857142857143,
 'test_asr': 1.0,
 'test_ra': 0.0,
 'train_acc': 0.9783680555555555,
 'train_acc_clean_only': 0.9977777777777778,
 'train_asr_bd_only': 0.8036805555555555,
 'train_epoch_loss_avg_over_batch': 0.06853253827989102,
 'train_ra_bd_only': 0.6970833333333334}
2024-12-24:02:47:45 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.0032512037035882136,
 'clean_test_loss_avg_over_batch': 0.6903020074083046,
 'epoch': 84,
 'test_acc': 0.8517857142857143,
 'test_asr': 1.0,
 'test_ra': 0.0,
 'train_acc': 0.9783680555555555,
 'train_acc_clean_only': 0.9977777777777778,
 'train_asr_bd_only': 0.8036805555555555,
 'train_epoch_loss_avg_over_batch': 0.06853253827989102,
 'train_ra_bd_only': 0.6970833333333334}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.87741088867188 s
2024-12-24:02:49:30 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.87741088867188 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.0020374744225674394,
 'clean_test_loss_avg_over_batch': 0.721323695621157,
 'epoch': 85,
 'test_acc': 0.8492857142857143,
 'test_asr': 1.0,
 'test_ra': 0.0,
 'train_acc': 0.9784513888888889,
 'train_acc_clean_only': 0.9979938271604938,
 'train_asr_bd_only': 0.8025694444444444,
 'train_epoch_loss_avg_over_batch': 0.0684712638573514,
 'train_ra_bd_only': 0.6981944444444445}
2024-12-24:02:49:32 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.0020374744225674394,
 'clean_test_loss_avg_over_batch': 0.721323695621157,
 'epoch': 85,
 'test_acc': 0.8492857142857143,
 'test_asr': 1.0,
 'test_ra': 0.0,
 'train_acc': 0.9784513888888889,
 'train_acc_clean_only': 0.9979938271604938,
 'train_asr_bd_only': 0.8025694444444444,
 'train_epoch_loss_avg_over_batch': 0.0684712638573514,
 'train_ra_bd_only': 0.6981944444444445}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.87775468826294 s
2024-12-24:02:51:16 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.87775468826294 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.003081716050721959,
 'clean_test_loss_avg_over_batch': 0.6805489228361032,
 'epoch': 86,
 'test_acc': 0.855,
 'test_asr': 1.0,
 'test_ra': 0.0,
 'train_acc': 0.9786597222222222,
 'train_acc_clean_only': 0.9979783950617284,
 'train_asr_bd_only': 0.8047916666666667,
 'train_epoch_loss_avg_over_batch': 0.0678913657963276,
 'train_ra_bd_only': 0.6961111111111111}
2024-12-24:02:51:18 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.003081716050721959,
 'clean_test_loss_avg_over_batch': 0.6805489228361032,
 'epoch': 86,
 'test_acc': 0.855,
 'test_asr': 1.0,
 'test_ra': 0.0,
 'train_acc': 0.9786597222222222,
 'train_acc_clean_only': 0.9979783950617284,
 'train_asr_bd_only': 0.8047916666666667,
 'train_epoch_loss_avg_over_batch': 0.0678913657963276,
 'train_ra_bd_only': 0.6961111111111111}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 104.26460790634155 s
2024-12-24:02:53:03 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 104.26460790634155 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.0026661297914953056,
 'clean_test_loss_avg_over_batch': 0.6761609723431651,
 'epoch': 87,
 'test_acc': 0.8535714285714285,
 'test_asr': 1.0,
 'test_ra': 0.0,
 'train_acc': 0.9786527777777778,
 'train_acc_clean_only': 0.9980092592592592,
 'train_asr_bd_only': 0.8044444444444444,
 'train_epoch_loss_avg_over_batch': 0.06790850522120793,
 'train_ra_bd_only': 0.6961805555555556}
2024-12-24:02:53:05 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.0026661297914953056,
 'clean_test_loss_avg_over_batch': 0.6761609723431651,
 'epoch': 87,
 'test_acc': 0.8535714285714285,
 'test_asr': 1.0,
 'test_ra': 0.0,
 'train_acc': 0.9786527777777778,
 'train_acc_clean_only': 0.9980092592592592,
 'train_asr_bd_only': 0.8044444444444444,
 'train_epoch_loss_avg_over_batch': 0.06790850522120793,
 'train_ra_bd_only': 0.6961805555555556}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 104.3295841217041 s
2024-12-24:02:54:49 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 104.3295841217041 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.0034957713108848443,
 'clean_test_loss_avg_over_batch': 0.6607613260751929,
 'epoch': 88,
 'test_acc': 0.8525,
 'test_asr': 0.9992857142857143,
 'test_ra': 0.0007142857142857143,
 'train_acc': 0.9782986111111112,
 'train_acc_clean_only': 0.9981018518518519,
 'train_asr_bd_only': 0.8000694444444445,
 'train_epoch_loss_avg_over_batch': 0.06876915954550107,
 'train_ra_bd_only': 0.7004166666666667}
2024-12-24:02:54:51 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.0034957713108848443,
 'clean_test_loss_avg_over_batch': 0.6607613260751929,
 'epoch': 88,
 'test_acc': 0.8525,
 'test_asr': 0.9992857142857143,
 'test_ra': 0.0007142857142857143,
 'train_acc': 0.9782986111111112,
 'train_acc_clean_only': 0.9981018518518519,
 'train_asr_bd_only': 0.8000694444444445,
 'train_epoch_loss_avg_over_batch': 0.06876915954550107,
 'train_ra_bd_only': 0.7004166666666667}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.37927603721619 s
2024-12-24:02:56:35 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.37927603721619 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.0033487925062548707,
 'clean_test_loss_avg_over_batch': 0.6420314529677853,
 'epoch': 89,
 'test_acc': 0.8578571428571429,
 'test_asr': 0.9992857142857143,
 'test_ra': 0.0007142857142857143,
 'train_acc': 0.9784027777777777,
 'train_acc_clean_only': 0.9981481481481481,
 'train_asr_bd_only': 0.8006944444444445,
 'train_epoch_loss_avg_over_batch': 0.06834901269690857,
 'train_ra_bd_only': 0.7003472222222222}
2024-12-24:02:56:37 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.0033487925062548707,
 'clean_test_loss_avg_over_batch': 0.6420314529677853,
 'epoch': 89,
 'test_acc': 0.8578571428571429,
 'test_asr': 0.9992857142857143,
 'test_ra': 0.0007142857142857143,
 'train_acc': 0.9784027777777777,
 'train_acc_clean_only': 0.9981481481481481,
 'train_asr_bd_only': 0.8006944444444445,
 'train_epoch_loss_avg_over_batch': 0.06834901269690857,
 'train_ra_bd_only': 0.7003472222222222}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.90875005722046 s
2024-12-24:02:58:21 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.90875005722046 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.003211328233274716,
 'clean_test_loss_avg_over_batch': 0.6690157310486856,
 'epoch': 90,
 'test_acc': 0.8535714285714285,
 'test_asr': 1.0,
 'test_ra': 0.0,
 'train_acc': 0.9787430555555555,
 'train_acc_clean_only': 0.9981867283950617,
 'train_asr_bd_only': 0.80375,
 'train_epoch_loss_avg_over_batch': 0.06725603404392799,
 'train_ra_bd_only': 0.696875}
2024-12-24:02:58:23 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.003211328233274716,
 'clean_test_loss_avg_over_batch': 0.6690157310486856,
 'epoch': 90,
 'test_acc': 0.8535714285714285,
 'test_asr': 1.0,
 'test_ra': 0.0,
 'train_acc': 0.9787430555555555,
 'train_acc_clean_only': 0.9981867283950617,
 'train_asr_bd_only': 0.80375,
 'train_epoch_loss_avg_over_batch': 0.06725603404392799,
 'train_ra_bd_only': 0.696875}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.67556047439575 s
2024-12-24:03:00:07 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.67556047439575 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.0013142538426274602,
 'clean_test_loss_avg_over_batch': 0.6813632630510256,
 'epoch': 91,
 'test_acc': 0.8553571428571428,
 'test_asr': 1.0,
 'test_ra': 0.0,
 'train_acc': 0.9782291666666667,
 'train_acc_clean_only': 0.9981172839506173,
 'train_asr_bd_only': 0.7992361111111111,
 'train_epoch_loss_avg_over_batch': 0.0684335083514452,
 'train_ra_bd_only': 0.7015277777777778}
2024-12-24:03:00:10 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.0013142538426274602,
 'clean_test_loss_avg_over_batch': 0.6813632630510256,
 'epoch': 91,
 'test_acc': 0.8553571428571428,
 'test_asr': 1.0,
 'test_ra': 0.0,
 'train_acc': 0.9782291666666667,
 'train_acc_clean_only': 0.9981172839506173,
 'train_asr_bd_only': 0.7992361111111111,
 'train_epoch_loss_avg_over_batch': 0.0684335083514452,
 'train_ra_bd_only': 0.7015277777777778}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 104.44597625732422 s
2024-12-24:03:01:54 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 104.44597625732422 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.003087935305137018,
 'clean_test_loss_avg_over_batch': 0.655258485041982,
 'epoch': 92,
 'test_acc': 0.855,
 'test_asr': 0.9992857142857143,
 'test_ra': 0.0007142857142857143,
 'train_acc': 0.9781458333333334,
 'train_acc_clean_only': 0.9982638888888888,
 'train_asr_bd_only': 0.7970833333333334,
 'train_epoch_loss_avg_over_batch': 0.06895215030925142,
 'train_ra_bd_only': 0.7032638888888889}
2024-12-24:03:01:56 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.003087935305137018,
 'clean_test_loss_avg_over_batch': 0.655258485041982,
 'epoch': 92,
 'test_acc': 0.855,
 'test_asr': 0.9992857142857143,
 'test_ra': 0.0007142857142857143,
 'train_acc': 0.9781458333333334,
 'train_acc_clean_only': 0.9982638888888888,
 'train_asr_bd_only': 0.7970833333333334,
 'train_epoch_loss_avg_over_batch': 0.06895215030925142,
 'train_ra_bd_only': 0.7032638888888889}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 104.91086935997009 s
2024-12-24:03:03:42 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 104.91086935997009 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.002047991858985783,
 'clean_test_loss_avg_over_batch': 0.6547798114056191,
 'epoch': 93,
 'test_acc': 0.8564285714285714,
 'test_asr': 1.0,
 'test_ra': 0.0,
 'train_acc': 0.9787152777777778,
 'train_acc_clean_only': 0.9982175925925926,
 'train_asr_bd_only': 0.8031944444444444,
 'train_epoch_loss_avg_over_batch': 0.06750236681600412,
 'train_ra_bd_only': 0.6975694444444445}
2024-12-24:03:03:44 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.002047991858985783,
 'clean_test_loss_avg_over_batch': 0.6547798114056191,
 'epoch': 93,
 'test_acc': 0.8564285714285714,
 'test_asr': 1.0,
 'test_ra': 0.0,
 'train_acc': 0.9787152777777778,
 'train_acc_clean_only': 0.9982175925925926,
 'train_asr_bd_only': 0.8031944444444444,
 'train_epoch_loss_avg_over_batch': 0.06750236681600412,
 'train_ra_bd_only': 0.6975694444444445}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 102.97480154037476 s
2024-12-24:03:05:27 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 102.97480154037476 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.003967049116247587,
 'clean_test_loss_avg_over_batch': 0.6600279497056776,
 'epoch': 94,
 'test_acc': 0.8575,
 'test_asr': 0.9992857142857143,
 'test_ra': 0.0007142857142857143,
 'train_acc': 0.9785138888888889,
 'train_acc_clean_only': 0.998287037037037,
 'train_asr_bd_only': 0.8005555555555556,
 'train_epoch_loss_avg_over_batch': 0.06799128302849002,
 'train_ra_bd_only': 0.7004861111111111}
2024-12-24:03:05:29 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.003967049116247587,
 'clean_test_loss_avg_over_batch': 0.6600279497056776,
 'epoch': 94,
 'test_acc': 0.8575,
 'test_asr': 0.9992857142857143,
 'test_ra': 0.0007142857142857143,
 'train_acc': 0.9785138888888889,
 'train_acc_clean_only': 0.998287037037037,
 'train_asr_bd_only': 0.8005555555555556,
 'train_epoch_loss_avg_over_batch': 0.06799128302849002,
 'train_ra_bd_only': 0.7004861111111111}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.68237590789795 s
2024-12-24:03:07:13 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.68237590789795 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.0010256210754794831,
 'clean_test_loss_avg_over_batch': 0.6696969283988107,
 'epoch': 95,
 'test_acc': 0.8560714285714286,
 'test_asr': 1.0,
 'test_ra': 0.0,
 'train_acc': 0.9785763888888889,
 'train_acc_clean_only': 0.9982484567901234,
 'train_asr_bd_only': 0.8015277777777777,
 'train_epoch_loss_avg_over_batch': 0.0677115922148029,
 'train_ra_bd_only': 0.6988194444444444}
2024-12-24:03:07:15 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.0010256210754794831,
 'clean_test_loss_avg_over_batch': 0.6696969283988107,
 'epoch': 95,
 'test_acc': 0.8560714285714286,
 'test_asr': 1.0,
 'test_ra': 0.0,
 'train_acc': 0.9785763888888889,
 'train_acc_clean_only': 0.9982484567901234,
 'train_asr_bd_only': 0.8015277777777777,
 'train_epoch_loss_avg_over_batch': 0.0677115922148029,
 'train_ra_bd_only': 0.6988194444444444}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.1993715763092 s
2024-12-24:03:08:59 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.1993715763092 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.001601851739740761,
 'clean_test_loss_avg_over_batch': 0.6695242451652038,
 'epoch': 96,
 'test_acc': 0.8560714285714286,
 'test_asr': 1.0,
 'test_ra': 0.0,
 'train_acc': 0.9782638888888889,
 'train_acc_clean_only': 0.9982716049382716,
 'train_asr_bd_only': 0.7981944444444444,
 'train_epoch_loss_avg_over_batch': 0.06847843340122037,
 'train_ra_bd_only': 0.7024305555555556}
2024-12-24:03:09:01 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.001601851739740761,
 'clean_test_loss_avg_over_batch': 0.6695242451652038,
 'epoch': 96,
 'test_acc': 0.8560714285714286,
 'test_asr': 1.0,
 'test_ra': 0.0,
 'train_acc': 0.9782638888888889,
 'train_acc_clean_only': 0.9982716049382716,
 'train_asr_bd_only': 0.7981944444444444,
 'train_epoch_loss_avg_over_batch': 0.06847843340122037,
 'train_ra_bd_only': 0.7024305555555556}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 102.85268664360046 s
2024-12-24:03:10:44 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 102.85268664360046 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.0029957945093470203,
 'clean_test_loss_avg_over_batch': 0.662614931278354,
 'epoch': 97,
 'test_acc': 0.8567857142857143,
 'test_asr': 1.0,
 'test_ra': 0.0,
 'train_acc': 0.9787222222222223,
 'train_acc_clean_only': 0.9984490740740741,
 'train_asr_bd_only': 0.8011805555555556,
 'train_epoch_loss_avg_over_batch': 0.06742633703351021,
 'train_ra_bd_only': 0.6997222222222222}
2024-12-24:03:10:46 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.0029957945093470203,
 'clean_test_loss_avg_over_batch': 0.662614931278354,
 'epoch': 97,
 'test_acc': 0.8567857142857143,
 'test_asr': 1.0,
 'test_ra': 0.0,
 'train_acc': 0.9787222222222223,
 'train_acc_clean_only': 0.9984490740740741,
 'train_asr_bd_only': 0.8011805555555556,
 'train_epoch_loss_avg_over_batch': 0.06742633703351021,
 'train_ra_bd_only': 0.6997222222222222}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.54401206970215 s
2024-12-24:03:12:30 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.54401206970215 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.0015719248860312457,
 'clean_test_loss_avg_over_batch': 0.6684957237448543,
 'epoch': 98,
 'test_acc': 0.8564285714285714,
 'test_asr': 1.0,
 'test_ra': 0.0,
 'train_acc': 0.9785763888888889,
 'train_acc_clean_only': 0.9981867283950617,
 'train_asr_bd_only': 0.8020833333333334,
 'train_epoch_loss_avg_over_batch': 0.06767702511946361,
 'train_ra_bd_only': 0.6989583333333333}
2024-12-24:03:12:32 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.0015719248860312457,
 'clean_test_loss_avg_over_batch': 0.6684957237448543,
 'epoch': 98,
 'test_acc': 0.8564285714285714,
 'test_asr': 1.0,
 'test_ra': 0.0,
 'train_acc': 0.9785763888888889,
 'train_acc_clean_only': 0.9981867283950617,
 'train_asr_bd_only': 0.8020833333333334,
 'train_epoch_loss_avg_over_batch': 0.06767702511946361,
 'train_ra_bd_only': 0.6989583333333333}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 103.54387187957764 s
2024-12-24:03:14:16 [INFO    ] [trainer_cls.py:1805] one epoch training part done, use time = 103.54387187957764 s
INFO:root:{'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.0011870196454269303,
 'clean_test_loss_avg_over_batch': 0.6737912128658288,
 'epoch': 99,
 'test_acc': 0.8560714285714286,
 'test_asr': 1.0,
 'test_ra': 0.0,
 'train_acc': 0.9784652777777778,
 'train_acc_clean_only': 0.9983101851851852,
 'train_asr_bd_only': 0.7998611111111111,
 'train_epoch_loss_avg_over_batch': 0.06807516299602058,
 'train_ra_bd_only': 0.7011805555555556}
2024-12-24:03:14:18 [INFO    ] [trainer_cls.py:65] {'batch': 1125,
 'bd_test_loss_avg_over_batch': 0.0011870196454269303,
 'clean_test_loss_avg_over_batch': 0.6737912128658288,
 'epoch': 99,
 'test_acc': 0.8560714285714286,
 'test_asr': 1.0,
 'test_ra': 0.0,
 'train_acc': 0.9784652777777778,
 'train_acc_clean_only': 0.9983101851851852,
 'train_asr_bd_only': 0.7998611111111111,
 'train_epoch_loss_avg_over_batch': 0.06807516299602058,
 'train_ra_bd_only': 0.7011805555555556}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:saving...
2024-12-24:03:14:18 [INFO    ] [save_load_attack.py:141] saving...
DEBUG:root:location : ./record/badnet_attack_efficientnet_ffpp_2classes_to_binary/attack_result.pt
INFO:root:Saved, folder path: ./record/badnet_attack_efficientnet_ffpp_2classes_to_binary
2024-12-24:03:14:19 [INFO    ] [save_load_attack.py:149] Saved, folder path: ./record/badnet_attack_efficientnet_ffpp_2classes_to_binary
