/home/fmg/yuran/miniconda3/envs/backdoorbenchv2/lib/python3.8/site-packages/torchvision/io/image.py:13: UserWarning: Failed to load image Python extension: libc10_hip.so: cannot open shared object file: No such file or directory
  warn(f"Failed to load image Python extension: {e}")
INFO:root:{'amp': False,
 'attack': 'badnet',
 'attack_label_trans': 'all2one',
 'attack_target': 0,
 'batch_size': 128,
 'bd_yaml_path': './config/attack/badnet/default.yaml',
 'client_optimizer': 'sgd',
 'dataset': 'cifar10',
 'dataset_path': './data/cifar10',
 'device': 'cuda:0',
 'epochs': 100,
 'frequency_save': 0,
 'img_size': (32, 32, 3),
 'input_channel': 3,
 'input_height': 32,
 'input_width': 32,
 'lr': 0.01,
 'lr_scheduler': 'CosineAnnealingLR',
 'model': 'preactresnet18',
 'non_blocking': True,
 'num_classes': 10,
 'num_workers': 4,
 'patch_mask_path': './resource/badnet/trigger_image.png',
 'pin_memory': True,
 'pratio': 0.1,
 'prefetch': False,
 'random_seed': 0,
 'save_folder_name': 'badnet_attack_preactresnet_cifar10',
 'save_path': './record/badnet_attack_preactresnet_cifar10',
 'sgd_momentum': 0.9,
 'terminal_info': ['./attack/badnet.py',
                   '--yaml_path',
                   './config/attack/prototype/cifar10.yaml',
                   '--patch_mask_path',
                   './resource/badnet/trigger_image.png',
                   '--save_folder_name',
                   'badnet_attack_preactresnet_cifar10'],
 'wd': 0.0005,
 'yaml_path': './config/attack/prototype/cifar10.yaml'}
2024-11-11:00:28:13 [INFO    ] [prototype.py:124] {'amp': False,
 'attack': 'badnet',
 'attack_label_trans': 'all2one',
 'attack_target': 0,
 'batch_size': 128,
 'bd_yaml_path': './config/attack/badnet/default.yaml',
 'client_optimizer': 'sgd',
 'dataset': 'cifar10',
 'dataset_path': './data/cifar10',
 'device': 'cuda:0',
 'epochs': 100,
 'frequency_save': 0,
 'img_size': (32, 32, 3),
 'input_channel': 3,
 'input_height': 32,
 'input_width': 32,
 'lr': 0.01,
 'lr_scheduler': 'CosineAnnealingLR',
 'model': 'preactresnet18',
 'non_blocking': True,
 'num_classes': 10,
 'num_workers': 4,
 'patch_mask_path': './resource/badnet/trigger_image.png',
 'pin_memory': True,
 'pratio': 0.1,
 'prefetch': False,
 'random_seed': 0,
 'save_folder_name': 'badnet_attack_preactresnet_cifar10',
 'save_path': './record/badnet_attack_preactresnet_cifar10',
 'sgd_momentum': 0.9,
 'terminal_info': ['./attack/badnet.py',
                   '--yaml_path',
                   './config/attack/prototype/cifar10.yaml',
                   '--patch_mask_path',
                   './resource/badnet/trigger_image.png',
                   '--save_folder_name',
                   'badnet_attack_preactresnet_cifar10'],
 'wd': 0.0005,
 'yaml_path': './config/attack/prototype/cifar10.yaml'}
DEBUG:root:Only INFO or above level log will show in cmd. DEBUG level log only will show in log file.
DEBUG:root:{'git hash': '--git_hash e326f670cbb2b53dbebc7765f6dbcc14203b1f55',
 'last 3 log': 'commit e326f670cbb2b53dbebc7765f6dbcc14203b1f55\n'
               'Author: QiuMatthew <uzenkyu@gmail.com>\n'
               'Date:   Mon Nov 11 00:26:11 2024 +0900\n'
               '\n'
               '    start over\n'
               '\n'
               'commit 063c7406b9d6386b1678aa904e9b8896d5d29ad4\n'
               'Author: QiuMatthew <uzenkyu@gmail.com>\n'
               'Date:   Mon Nov 11 00:24:53 2024 +0900\n'
               '\n'
               '    start over\n'
               '\n'
               'commit e207017876a9e70960cc7888dc0e1daafaf610a8\n'
               'Author: QiuMatthew <uzenkyu@gmail.com>\n'
               'Date:   Mon Nov 11 00:14:52 2024 +0900\n'
               '\n'
               '    badnet attack on gtsrb dataset',
 'status': 'On branch test-number-of-class\n'
           "Your branch is up to date with 'origin/test-number-of-class'.\n"
           '\n'
           'Changes not staged for commit:\n'
           '  (use "git add/rm <file>..." to update what will be committed)\n'
           '  (use "git checkout -- <file>..." to discard changes in working '
           'directory)\n'
           '\n'
           '\tdeleted:    out/sample.out\n'
           '\n'
           'Untracked files:\n'
           '  (use "git add <file>..." to include in what will be committed)\n'
           '\n'
           '\tout/badnet_attack_preactresnet_cifar10.out\n'
           '\tout/badnet_attack_preactresnet_cifar10_2classes.out\n'
           '\n'
           'no changes added to commit (use "git add" and/or "git commit -a")'}
INFO:root:stage1 start
2024-11-11:00:28:13 [INFO    ] [badnet.py:111] stage1 start
DEBUG:root:dataset_and_transform_generate done
DEBUG:root:Not DatasetFolder or ImageFolder, so iter through
DEBUG:root:Not DatasetFolder or ImageFolder, so iter through
DEBUG:root:Reminder: plz note that if p_num or pratio exceed the number of possible candidate samples
 then only maximum number of samples will be applied
DEBUG:root:Reminder: priority p_num > pratio, and choosing fix number of sample is prefered if possible 
INFO:root:poison num:5000.0,real pratio:0.1
2024-11-11:00:28:16 [INFO    ] [backdoor_generate_poison_index.py:61] poison num:5000.0,real pratio:0.1
DEBUG:root:poison train idx is saved
INFO:root:save file format is .png
2024-11-11:00:28:17 [INFO    ] [bd_dataset_v2.py:133] save file format is .png
prepro_backdoor:   0%|          | 0/50000 [00:00<?, ?it/s]prepro_backdoor:   1%|          | 545/50000 [00:00<00:09, 5408.41it/s]prepro_backdoor:   3%|▎         | 1276/50000 [00:00<00:07, 6517.78it/s]prepro_backdoor:   4%|▍         | 2009/50000 [00:00<00:07, 6530.88it/s]prepro_backdoor:   6%|▌         | 2789/50000 [00:00<00:06, 6990.94it/s]prepro_backdoor:   7%|▋         | 3490/50000 [00:00<00:08, 5686.22it/s]prepro_backdoor:   8%|▊         | 4183/50000 [00:00<00:07, 6018.67it/s]prepro_backdoor:  10%|█         | 5034/50000 [00:00<00:06, 6743.93it/s]prepro_backdoor:  12%|█▏        | 5903/50000 [00:00<00:06, 7305.47it/s]prepro_backdoor:  13%|█▎        | 6656/50000 [00:00<00:06, 7222.90it/s]prepro_backdoor:  15%|█▌        | 7503/50000 [00:01<00:05, 7569.79it/s]prepro_backdoor:  17%|█▋        | 8273/50000 [00:01<00:05, 7518.17it/s]prepro_backdoor:  18%|█▊        | 9034/50000 [00:01<00:05, 7120.50it/s]prepro_backdoor:  20%|█▉        | 9774/50000 [00:01<00:05, 7194.57it/s]prepro_backdoor:  21%|██        | 10545/50000 [00:01<00:05, 7340.36it/s]prepro_backdoor:  23%|██▎       | 11285/50000 [00:01<00:06, 6072.09it/s]prepro_backdoor:  24%|██▍       | 12053/50000 [00:01<00:05, 6474.40it/s]prepro_backdoor:  25%|██▌       | 12735/50000 [00:01<00:05, 6427.71it/s]prepro_backdoor:  27%|██▋       | 13433/50000 [00:01<00:05, 6575.31it/s]prepro_backdoor:  29%|██▉       | 14469/50000 [00:02<00:04, 7613.39it/s]prepro_backdoor:  30%|███       | 15250/50000 [00:02<00:04, 7297.47it/s]prepro_backdoor:  32%|███▏      | 15996/50000 [00:02<00:05, 6542.01it/s]prepro_backdoor:  33%|███▎      | 16674/50000 [00:02<00:05, 6559.32it/s]prepro_backdoor:  35%|███▍      | 17347/50000 [00:02<00:05, 5472.88it/s]prepro_backdoor:  36%|███▌      | 17933/50000 [00:02<00:07, 4226.27it/s]prepro_backdoor:  37%|███▋      | 18419/50000 [00:02<00:07, 4202.61it/s]prepro_backdoor:  38%|███▊      | 18976/50000 [00:03<00:06, 4441.19it/s]prepro_backdoor:  39%|███▉      | 19458/50000 [00:03<00:09, 3244.17it/s]prepro_backdoor:  40%|████      | 20008/50000 [00:03<00:08, 3683.38it/s]prepro_backdoor:  41%|████      | 20560/50000 [00:03<00:07, 4082.15it/s]prepro_backdoor:  43%|████▎     | 21334/50000 [00:03<00:05, 4942.38it/s]prepro_backdoor:  44%|████▍     | 21921/50000 [00:03<00:05, 5169.08it/s]prepro_backdoor:  45%|████▌     | 22519/50000 [00:03<00:05, 5375.17it/s]prepro_backdoor:  47%|████▋     | 23334/50000 [00:03<00:04, 6123.13it/s]prepro_backdoor:  48%|████▊     | 24081/50000 [00:04<00:03, 6495.64it/s]prepro_backdoor:  50%|████▉     | 24852/50000 [00:04<00:03, 6840.13it/s]prepro_backdoor:  52%|█████▏    | 25921/50000 [00:04<00:03, 7946.50it/s]prepro_backdoor:  53%|█████▎    | 26733/50000 [00:04<00:04, 5247.25it/s]prepro_backdoor:  55%|█████▍    | 27389/50000 [00:04<00:04, 5490.81it/s]prepro_backdoor:  56%|█████▌    | 28123/50000 [00:04<00:03, 5922.81it/s]prepro_backdoor:  58%|█████▊    | 28798/50000 [00:04<00:04, 4921.44it/s]prepro_backdoor:  59%|█████▉    | 29505/50000 [00:05<00:03, 5399.69it/s]prepro_backdoor:  60%|██████    | 30119/50000 [00:05<00:04, 4860.99it/s]prepro_backdoor:  61%|██████▏   | 30684/50000 [00:05<00:03, 5033.53it/s]prepro_backdoor:  63%|██████▎   | 31309/50000 [00:05<00:03, 5322.87it/s]prepro_backdoor:  64%|██████▍   | 32038/50000 [00:05<00:03, 5794.27it/s]prepro_backdoor:  65%|██████▌   | 32650/50000 [00:05<00:04, 4008.37it/s]prepro_backdoor:  66%|██████▋   | 33146/50000 [00:05<00:04, 4065.95it/s]prepro_backdoor:  67%|██████▋   | 33713/50000 [00:05<00:03, 4415.73it/s]prepro_backdoor:  68%|██████▊   | 34214/50000 [00:06<00:03, 4432.03it/s]prepro_backdoor:  69%|██████▉   | 34749/50000 [00:06<00:03, 4657.10it/s]prepro_backdoor:  71%|███████   | 35254/50000 [00:06<00:03, 4695.35it/s]prepro_backdoor:  71%|███████▏  | 35748/50000 [00:06<00:03, 4226.79it/s]prepro_backdoor:  73%|███████▎  | 36259/50000 [00:06<00:03, 4451.37it/s]prepro_backdoor:  73%|███████▎  | 36725/50000 [00:06<00:03, 4293.38it/s]prepro_backdoor:  74%|███████▍  | 37169/50000 [00:06<00:04, 3143.94it/s]prepro_backdoor:  75%|███████▌  | 37591/50000 [00:07<00:03, 3367.40it/s]prepro_backdoor:  76%|███████▌  | 38072/50000 [00:07<00:03, 3702.58it/s]prepro_backdoor:  77%|███████▋  | 38600/50000 [00:07<00:02, 4099.41it/s]prepro_backdoor:  78%|███████▊  | 39103/50000 [00:07<00:02, 4337.87it/s]prepro_backdoor:  80%|███████▉  | 39764/50000 [00:07<00:02, 4945.67it/s]prepro_backdoor:  81%|████████  | 40417/50000 [00:07<00:01, 5362.67it/s]prepro_backdoor:  82%|████████▏ | 41035/50000 [00:07<00:01, 5572.84it/s]prepro_backdoor:  83%|████████▎ | 41727/50000 [00:07<00:01, 5943.98it/s]prepro_backdoor:  85%|████████▍ | 42474/50000 [00:07<00:01, 6386.50it/s]prepro_backdoor:  86%|████████▌ | 43122/50000 [00:08<00:01, 4956.41it/s]prepro_backdoor:  87%|████████▋ | 43673/50000 [00:08<00:01, 4079.56it/s]prepro_backdoor:  89%|████████▊ | 44331/50000 [00:08<00:01, 4603.09it/s]prepro_backdoor:  90%|████████▉ | 44882/50000 [00:08<00:01, 4796.66it/s]prepro_backdoor:  91%|█████████ | 45434/50000 [00:08<00:00, 4974.77it/s]prepro_backdoor:  92%|█████████▏| 46009/50000 [00:08<00:00, 5153.52it/s]prepro_backdoor:  93%|█████████▎| 46552/50000 [00:08<00:00, 5165.79it/s]prepro_backdoor:  94%|█████████▍| 47153/50000 [00:08<00:00, 5392.47it/s]prepro_backdoor:  96%|█████████▌| 47837/50000 [00:08<00:00, 5796.37it/s]prepro_backdoor:  97%|█████████▋| 48469/50000 [00:09<00:00, 5928.20it/s]prepro_backdoor:  98%|█████████▊| 49072/50000 [00:09<00:00, 5655.36it/s]prepro_backdoor: 100%|█████████▉| 49888/50000 [00:09<00:00, 4866.92it/s]prepro_backdoor: 100%|██████████| 50000/50000 [00:09<00:00, 5326.91it/s]
DEBUG:root:Reminder: plz note that if p_num or pratio exceed the number of possible candidate samples
 then only maximum number of samples will be applied
DEBUG:root:Reminder: priority p_num > pratio, and choosing fix number of sample is prefered if possible 
INFO:root:poison num:9000.0,real pratio:0.9
2024-11-11:00:28:26 [INFO    ] [backdoor_generate_poison_index.py:61] poison num:9000.0,real pratio:0.9
INFO:root:save file format is .png
2024-11-11:00:28:26 [INFO    ] [bd_dataset_v2.py:133] save file format is .png
prepro_backdoor:   0%|          | 0/10000 [00:00<?, ?it/s]prepro_backdoor:   0%|          | 37/10000 [00:00<00:27, 365.68it/s]prepro_backdoor:   1%|          | 116/10000 [00:00<00:16, 604.41it/s]prepro_backdoor:   2%|▏         | 203/10000 [00:00<00:13, 723.62it/s]prepro_backdoor:   3%|▎         | 303/10000 [00:00<00:11, 831.38it/s]prepro_backdoor:   4%|▍         | 387/10000 [00:00<00:15, 636.20it/s]prepro_backdoor:   5%|▍         | 457/10000 [00:00<00:14, 645.58it/s]prepro_backdoor:   5%|▌         | 526/10000 [00:00<00:15, 603.84it/s]prepro_backdoor:   6%|▌         | 590/10000 [00:00<00:16, 554.73it/s]prepro_backdoor:   6%|▋         | 648/10000 [00:01<00:23, 402.11it/s]prepro_backdoor:   7%|▋         | 695/10000 [00:01<00:22, 410.86it/s]prepro_backdoor:   8%|▊         | 758/10000 [00:01<00:20, 460.05it/s]prepro_backdoor:   8%|▊         | 827/10000 [00:01<00:17, 515.37it/s]prepro_backdoor:   9%|▉         | 910/10000 [00:01<00:15, 596.57it/s]prepro_backdoor:  10%|▉         | 991/10000 [00:01<00:13, 650.70it/s]prepro_backdoor:  11%|█         | 1060/10000 [00:01<00:13, 639.06it/s]prepro_backdoor:  11%|█▏        | 1127/10000 [00:01<00:13, 640.73it/s]prepro_backdoor:  12%|█▏        | 1213/10000 [00:02<00:12, 700.82it/s]prepro_backdoor:  13%|█▎        | 1288/10000 [00:02<00:12, 713.38it/s]prepro_backdoor:  14%|█▎        | 1361/10000 [00:02<00:14, 578.23it/s]prepro_backdoor:  14%|█▍        | 1427/10000 [00:02<00:14, 597.72it/s]prepro_backdoor:  15%|█▍        | 1498/10000 [00:02<00:13, 626.90it/s]prepro_backdoor:  16%|█▌        | 1564/10000 [00:02<00:14, 564.54it/s]prepro_backdoor:  16%|█▋        | 1648/10000 [00:02<00:13, 634.04it/s]prepro_backdoor:  17%|█▋        | 1743/10000 [00:02<00:11, 718.26it/s]prepro_backdoor:  18%|█▊        | 1819/10000 [00:02<00:11, 726.41it/s]prepro_backdoor:  19%|█▉        | 1894/10000 [00:03<00:11, 713.77it/s]prepro_backdoor:  20%|█▉        | 1972/10000 [00:03<00:10, 731.47it/s]prepro_backdoor:  20%|██        | 2047/10000 [00:03<00:11, 696.11it/s]prepro_backdoor:  21%|██        | 2118/10000 [00:03<00:14, 534.56it/s]prepro_backdoor:  22%|██▏       | 2184/10000 [00:03<00:13, 563.35it/s]prepro_backdoor:  22%|██▏       | 2246/10000 [00:03<00:16, 460.10it/s]prepro_backdoor:  23%|██▎       | 2318/10000 [00:03<00:14, 514.08it/s]prepro_backdoor:  24%|██▍       | 2399/10000 [00:04<00:12, 584.80it/s]prepro_backdoor:  25%|██▍       | 2478/10000 [00:04<00:11, 635.31it/s]prepro_backdoor:  25%|██▌       | 2547/10000 [00:04<00:11, 647.81it/s]prepro_backdoor:  26%|██▌       | 2616/10000 [00:04<00:11, 633.90it/s]prepro_backdoor:  27%|██▋       | 2683/10000 [00:04<00:13, 549.75it/s]prepro_backdoor:  27%|██▋       | 2742/10000 [00:04<00:13, 558.10it/s]prepro_backdoor:  28%|██▊       | 2810/10000 [00:04<00:12, 588.97it/s]prepro_backdoor:  29%|██▉       | 2885/10000 [00:04<00:11, 631.45it/s]prepro_backdoor:  30%|██▉       | 2951/10000 [00:04<00:13, 517.77it/s]prepro_backdoor:  30%|███       | 3029/10000 [00:05<00:11, 581.68it/s]prepro_backdoor:  31%|███       | 3094/10000 [00:05<00:11, 598.04it/s]prepro_backdoor:  32%|███▏      | 3160/10000 [00:05<00:11, 613.14it/s]prepro_backdoor:  32%|███▏      | 3228/10000 [00:05<00:10, 631.40it/s]prepro_backdoor:  33%|███▎      | 3314/10000 [00:05<00:09, 694.62it/s]prepro_backdoor:  34%|███▍      | 3387/10000 [00:05<00:09, 703.34it/s]prepro_backdoor:  35%|███▍      | 3459/10000 [00:05<00:09, 689.16it/s]prepro_backdoor:  35%|███▌      | 3534/10000 [00:05<00:09, 705.66it/s]prepro_backdoor:  36%|███▌      | 3622/10000 [00:05<00:08, 754.60it/s]prepro_backdoor:  37%|███▋      | 3704/10000 [00:06<00:08, 770.57it/s]prepro_backdoor:  38%|███▊      | 3782/10000 [00:06<00:10, 590.20it/s]prepro_backdoor:  39%|███▊      | 3874/10000 [00:06<00:09, 669.69it/s]prepro_backdoor:  40%|███▉      | 3968/10000 [00:06<00:08, 731.87it/s]prepro_backdoor:  40%|████      | 4049/10000 [00:06<00:07, 752.44it/s]prepro_backdoor:  41%|████▏     | 4129/10000 [00:06<00:07, 765.20it/s]prepro_backdoor:  42%|████▏     | 4209/10000 [00:06<00:07, 765.07it/s]prepro_backdoor:  43%|████▎     | 4291/10000 [00:06<00:07, 775.92it/s]prepro_backdoor:  44%|████▍     | 4379/10000 [00:06<00:06, 804.99it/s]prepro_backdoor:  45%|████▍     | 4465/10000 [00:07<00:06, 820.54it/s]prepro_backdoor:  45%|████▌     | 4548/10000 [00:07<00:07, 774.37it/s]prepro_backdoor:  46%|████▋     | 4627/10000 [00:07<00:09, 576.09it/s]prepro_backdoor:  47%|████▋     | 4699/10000 [00:07<00:08, 608.25it/s]prepro_backdoor:  48%|████▊     | 4767/10000 [00:07<00:08, 621.49it/s]prepro_backdoor:  48%|████▊     | 4849/10000 [00:07<00:07, 672.93it/s]prepro_backdoor:  49%|████▉     | 4924/10000 [00:07<00:07, 692.53it/s]prepro_backdoor:  50%|████▉     | 4997/10000 [00:07<00:07, 674.84it/s]prepro_backdoor:  51%|█████     | 5080/10000 [00:07<00:06, 717.03it/s]prepro_backdoor:  52%|█████▏    | 5154/10000 [00:08<00:06, 694.76it/s]prepro_backdoor:  52%|█████▏    | 5230/10000 [00:08<00:06, 706.31it/s]prepro_backdoor:  53%|█████▎    | 5302/10000 [00:08<00:08, 548.93it/s]prepro_backdoor:  54%|█████▍    | 5384/10000 [00:08<00:07, 613.00it/s]prepro_backdoor:  55%|█████▍    | 5452/10000 [00:08<00:07, 608.60it/s]prepro_backdoor:  55%|█████▌    | 5517/10000 [00:08<00:09, 449.39it/s]prepro_backdoor:  56%|█████▌    | 5571/10000 [00:08<00:09, 455.06it/s]prepro_backdoor:  56%|█████▋    | 5644/10000 [00:09<00:08, 516.53it/s]prepro_backdoor:  57%|█████▋    | 5716/10000 [00:09<00:07, 564.69it/s]prepro_backdoor:  58%|█████▊    | 5786/10000 [00:09<00:07, 599.18it/s]prepro_backdoor:  59%|█████▊    | 5855/10000 [00:09<00:06, 621.85it/s]prepro_backdoor:  59%|█████▉    | 5923/10000 [00:09<00:06, 636.17it/s]prepro_backdoor:  60%|█████▉    | 5989/10000 [00:09<00:06, 621.80it/s]prepro_backdoor:  61%|██████    | 6053/10000 [00:09<00:06, 616.44it/s]prepro_backdoor:  61%|██████    | 6124/10000 [00:09<00:06, 642.88it/s]prepro_backdoor:  62%|██████▏   | 6190/10000 [00:10<00:07, 506.79it/s]prepro_backdoor:  62%|██████▏   | 6246/10000 [00:10<00:08, 466.16it/s]prepro_backdoor:  63%|██████▎   | 6297/10000 [00:10<00:07, 471.54it/s]prepro_backdoor:  64%|██████▎   | 6367/10000 [00:10<00:06, 528.84it/s]prepro_backdoor:  64%|██████▍   | 6423/10000 [00:10<00:06, 527.57it/s]prepro_backdoor:  65%|██████▍   | 6480/10000 [00:10<00:06, 538.19it/s]prepro_backdoor:  65%|██████▌   | 6536/10000 [00:10<00:06, 526.65it/s]prepro_backdoor:  66%|██████▌   | 6590/10000 [00:10<00:06, 517.18it/s]prepro_backdoor:  67%|██████▋   | 6668/10000 [00:10<00:05, 589.21it/s]prepro_backdoor:  67%|██████▋   | 6733/10000 [00:10<00:05, 604.96it/s]prepro_backdoor:  68%|██████▊   | 6795/10000 [00:11<00:06, 517.68it/s]prepro_backdoor:  69%|██████▉   | 6888/10000 [00:11<00:04, 623.22it/s]prepro_backdoor:  70%|██████▉   | 6987/10000 [00:11<00:04, 721.28it/s]prepro_backdoor:  71%|███████   | 7064/10000 [00:11<00:04, 733.40it/s]prepro_backdoor:  71%|███████▏  | 7140/10000 [00:11<00:04, 714.69it/s]prepro_backdoor:  72%|███████▏  | 7214/10000 [00:11<00:04, 672.30it/s]prepro_backdoor:  73%|███████▎  | 7283/10000 [00:11<00:04, 612.07it/s]prepro_backdoor:  73%|███████▎  | 7347/10000 [00:11<00:04, 592.32it/s]prepro_backdoor:  74%|███████▍  | 7408/10000 [00:12<00:04, 591.79it/s]prepro_backdoor:  75%|███████▍  | 7469/10000 [00:12<00:04, 516.44it/s]prepro_backdoor:  75%|███████▌  | 7540/10000 [00:12<00:04, 563.70it/s]prepro_backdoor:  76%|███████▌  | 7601/10000 [00:12<00:04, 575.44it/s]prepro_backdoor:  77%|███████▋  | 7669/10000 [00:12<00:03, 603.94it/s]prepro_backdoor:  77%|███████▋  | 7731/10000 [00:12<00:03, 588.08it/s]prepro_backdoor:  78%|███████▊  | 7794/10000 [00:12<00:03, 598.87it/s]prepro_backdoor:  79%|███████▊  | 7867/10000 [00:12<00:03, 631.84it/s]prepro_backdoor:  79%|███████▉  | 7931/10000 [00:12<00:03, 624.47it/s]prepro_backdoor:  80%|███████▉  | 7994/10000 [00:13<00:03, 607.64it/s]prepro_backdoor:  81%|████████  | 8063/10000 [00:13<00:03, 630.98it/s]prepro_backdoor:  81%|████████▏ | 8130/10000 [00:13<00:02, 641.91it/s]prepro_backdoor:  82%|████████▏ | 8195/10000 [00:13<00:03, 491.27it/s]prepro_backdoor:  82%|████████▎ | 8250/10000 [00:13<00:03, 504.58it/s]prepro_backdoor:  83%|████████▎ | 8307/10000 [00:13<00:03, 518.03it/s]prepro_backdoor:  84%|████████▎ | 8362/10000 [00:13<00:04, 397.12it/s]prepro_backdoor:  84%|████████▍ | 8436/10000 [00:13<00:03, 470.04it/s]prepro_backdoor:  85%|████████▍ | 8490/10000 [00:14<00:03, 481.93it/s]prepro_backdoor:  86%|████████▌ | 8563/10000 [00:14<00:02, 544.56it/s]prepro_backdoor:  86%|████████▋ | 8641/10000 [00:14<00:02, 606.54it/s]prepro_backdoor:  87%|████████▋ | 8720/10000 [00:14<00:01, 655.94it/s]prepro_backdoor:  88%|████████▊ | 8789/10000 [00:14<00:01, 665.20it/s]prepro_backdoor:  89%|████████▉ | 8875/10000 [00:14<00:01, 720.20it/s]prepro_backdoor:  90%|████████▉ | 8954/10000 [00:14<00:01, 739.54it/s]prepro_backdoor:  90%|█████████ | 9034/10000 [00:14<00:01, 756.59it/s]prepro_backdoor:  91%|█████████ | 9111/10000 [00:14<00:01, 568.29it/s]prepro_backdoor:  92%|█████████▏| 9186/10000 [00:15<00:01, 610.71it/s]prepro_backdoor:  93%|█████████▎| 9254/10000 [00:15<00:01, 628.32it/s]prepro_backdoor:  93%|█████████▎| 9331/10000 [00:15<00:01, 664.25it/s]prepro_backdoor:  94%|█████████▍| 9409/10000 [00:15<00:00, 695.93it/s]prepro_backdoor:  95%|█████████▍| 9487/10000 [00:15<00:00, 719.32it/s]prepro_backdoor:  96%|█████████▌| 9565/10000 [00:15<00:00, 733.64it/s]prepro_backdoor:  96%|█████████▋| 9647/10000 [00:15<00:00, 756.23it/s]prepro_backdoor:  97%|█████████▋| 9724/10000 [00:15<00:00, 717.95it/s]prepro_backdoor:  98%|█████████▊| 9807/10000 [00:15<00:00, 744.02it/s]prepro_backdoor:  99%|█████████▉| 9883/10000 [00:16<00:00, 578.90it/s]prepro_backdoor:  99%|█████████▉| 9949/10000 [00:16<00:00, 597.13it/s]prepro_backdoor: 100%|██████████| 10000/10000 [00:16<00:00, 614.16it/s]
INFO:root:stage2 start
2024-11-11:00:28:42 [INFO    ] [badnet.py:193] stage2 start
DEBUG:root:image_size ONLY apply for vit!!!
If you use vit make sure you set the image size!
DEBUG:root:Make sure you want PreActResNet18, which is NOT resnet18.
DEBUG:root:This class REQUIRE bd dataset to implement overwrite methods. This is NOT a general class for all cls task.
INFO:root:Do NOT set the settings/parameters attr manually after you start training!
You may break the relationship between them.
2024-11-11:00:28:42 [INFO    ] [trainer_cls.py:972] Do NOT set the settings/parameters attr manually after you start training!
You may break the relationship between them.
Files already downloaded and verified
Files already downloaded and verified
INFO:root:('epoch_now:0, '
 'batch_now:0self.amp:False,self.criterion:CrossEntropyLoss(),self.optimizer:SGD '
 '(\n'
 'Parameter Group 0\n'
 '    dampening: 0\n'
 '    initial_lr: 0.01\n'
 '    lr: 0.01\n'
 '    maximize: False\n'
 '    momentum: 0.9\n'
 '    nesterov: False\n'
 '    weight_decay: 0.0005\n'
 "),self.scheduler:{'T_max': 100, 'eta_min': 0, 'base_lrs': [0.01], "
 "'last_epoch': 0, '_step_count': 1, 'verbose': False, "
 "'_get_lr_called_within_step': False, '_last_lr': [0.01]},self.scaler:{})")
2024-11-11:00:28:43 [INFO    ] [trainer_cls.py:1030] ('epoch_now:0, '
 'batch_now:0self.amp:False,self.criterion:CrossEntropyLoss(),self.optimizer:SGD '
 '(\n'
 'Parameter Group 0\n'
 '    dampening: 0\n'
 '    initial_lr: 0.01\n'
 '    lr: 0.01\n'
 '    maximize: False\n'
 '    momentum: 0.9\n'
 '    nesterov: False\n'
 '    weight_decay: 0.0005\n'
 "),self.scheduler:{'T_max': 100, 'eta_min': 0, 'base_lrs': [0.01], "
 "'last_epoch': 0, '_step_count': 1, 'verbose': False, "
 "'_get_lr_called_within_step': False, '_last_lr': [0.01]},self.scaler:{})")
INFO:root:one epoch training part done, use time = 18.887327194213867 s
2024-11-11:00:29:02 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 18.887327194213867 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 1.90875158511417,
 'clean_test_loss_avg_over_batch': 1.2615030234373068,
 'epoch': 0,
 'test_acc': 0.5634,
 'test_asr': 0.17844444444444443,
 'test_ra': 0.5354444444444444,
 'train_acc': 0.4117988782051282,
 'train_acc_clean_only': 0.43419617618909834,
 'train_asr_bd_only': 0.21017832097775996,
 'train_epoch_loss_avg_over_batch': 1.588747452161251,
 'train_ra_bd_only': 0.43678621518733723}
2024-11-11:00:29:06 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 1.90875158511417,
 'clean_test_loss_avg_over_batch': 1.2615030234373068,
 'epoch': 0,
 'test_acc': 0.5634,
 'test_asr': 0.17844444444444443,
 'test_ra': 0.5354444444444444,
 'train_acc': 0.4117988782051282,
 'train_acc_clean_only': 0.43419617618909834,
 'train_asr_bd_only': 0.21017832097775996,
 'train_epoch_loss_avg_over_batch': 1.588747452161251,
 'train_ra_bd_only': 0.43678621518733723}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.768482208251953 s
2024-11-11:00:29:16 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.768482208251953 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 1.4622658222493992,
 'clean_test_loss_avg_over_batch': 0.8952675205242785,
 'epoch': 1,
 'test_acc': 0.6955,
 'test_asr': 0.40166666666666667,
 'test_ra': 0.462,
 'train_acc': 0.5924879807692308,
 'train_acc_clean_only': 0.6315098370871539,
 'train_asr_bd_only': 0.24097834803528467,
 'train_epoch_loss_avg_over_batch': 1.1414494418180905,
 'train_ra_bd_only': 0.5777866880513232}
2024-11-11:00:29:19 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 1.4622658222493992,
 'clean_test_loss_avg_over_batch': 0.8952675205242785,
 'epoch': 1,
 'test_acc': 0.6955,
 'test_asr': 0.40166666666666667,
 'test_ra': 0.462,
 'train_acc': 0.5924879807692308,
 'train_acc_clean_only': 0.6315098370871539,
 'train_asr_bd_only': 0.24097834803528467,
 'train_epoch_loss_avg_over_batch': 1.1414494418180905,
 'train_ra_bd_only': 0.5777866880513232}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.971983432769775 s
2024-11-11:00:29:30 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.971983432769775 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.41576696932315826,
 'clean_test_loss_avg_over_batch': 0.746987562768067,
 'epoch': 2,
 'test_acc': 0.747,
 'test_asr': 0.8636666666666667,
 'test_ra': 0.11388888888888889,
 'train_acc': 0.7029246794871795,
 'train_acc_clean_only': 0.7190010906096286,
 'train_asr_bd_only': 0.5582047685834503,
 'train_epoch_loss_avg_over_batch': 0.86976906030606,
 'train_ra_bd_only': 0.4145461831296333}
2024-11-11:00:29:33 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.41576696932315826,
 'clean_test_loss_avg_over_batch': 0.746987562768067,
 'epoch': 2,
 'test_acc': 0.747,
 'test_asr': 0.8636666666666667,
 'test_ra': 0.11388888888888889,
 'train_acc': 0.7029246794871795,
 'train_acc_clean_only': 0.7190010906096286,
 'train_asr_bd_only': 0.5582047685834503,
 'train_epoch_loss_avg_over_batch': 0.86976906030606,
 'train_ra_bd_only': 0.4145461831296333}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.908831357955933 s
2024-11-11:00:29:43 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.908831357955933 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.11091246905828446,
 'clean_test_loss_avg_over_batch': 0.831699403026436,
 'epoch': 3,
 'test_acc': 0.7281,
 'test_asr': 0.9637777777777777,
 'test_ra': 0.029666666666666668,
 'train_acc': 0.7520833333333333,
 'train_acc_clean_only': 0.7698642332517249,
 'train_asr_bd_only': 0.5919839679358717,
 'train_epoch_loss_avg_over_batch': 0.7384535786433097,
 'train_ra_bd_only': 0.4146292585170341}
2024-11-11:00:29:47 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.11091246905828446,
 'clean_test_loss_avg_over_batch': 0.831699403026436,
 'epoch': 3,
 'test_acc': 0.7281,
 'test_asr': 0.9637777777777777,
 'test_ra': 0.029666666666666668,
 'train_acc': 0.7520833333333333,
 'train_acc_clean_only': 0.7698642332517249,
 'train_asr_bd_only': 0.5919839679358717,
 'train_epoch_loss_avg_over_batch': 0.7384535786433097,
 'train_ra_bd_only': 0.4146292585170341}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.012672662734985 s
2024-11-11:00:29:57 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.012672662734985 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.16992941923754315,
 'clean_test_loss_avg_over_batch': 0.6267775651774828,
 'epoch': 4,
 'test_acc': 0.7955,
 'test_asr': 0.9415555555555556,
 'test_ra': 0.04833333333333333,
 'train_acc': 0.7843349358974359,
 'train_acc_clean_only': 0.8036501224126419,
 'train_asr_bd_only': 0.6104208416833667,
 'train_epoch_loss_avg_over_batch': 0.6584972486282006,
 'train_ra_bd_only': 0.412625250501002}
2024-11-11:00:30:00 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.16992941923754315,
 'clean_test_loss_avg_over_batch': 0.6267775651774828,
 'epoch': 4,
 'test_acc': 0.7955,
 'test_asr': 0.9415555555555556,
 'test_ra': 0.04833333333333333,
 'train_acc': 0.7843349358974359,
 'train_acc_clean_only': 0.8036501224126419,
 'train_asr_bd_only': 0.6104208416833667,
 'train_epoch_loss_avg_over_batch': 0.6584972486282006,
 'train_ra_bd_only': 0.412625250501002}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.033047437667847 s
2024-11-11:00:30:11 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.033047437667847 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.14502700081121334,
 'clean_test_loss_avg_over_batch': 0.6363205106198033,
 'epoch': 5,
 'test_acc': 0.7966,
 'test_asr': 0.9552222222222222,
 'test_ra': 0.03888888888888889,
 'train_acc': 0.7977564102564103,
 'train_acc_clean_only': 0.8203672787979966,
 'train_asr_bd_only': 0.5943943943943943,
 'train_epoch_loss_avg_over_batch': 0.616136966072596,
 'train_ra_bd_only': 0.4218218218218218}
2024-11-11:00:30:14 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.14502700081121334,
 'clean_test_loss_avg_over_batch': 0.6363205106198033,
 'epoch': 5,
 'test_acc': 0.7966,
 'test_asr': 0.9552222222222222,
 'test_ra': 0.03888888888888889,
 'train_acc': 0.7977564102564103,
 'train_acc_clean_only': 0.8203672787979966,
 'train_asr_bd_only': 0.5943943943943943,
 'train_epoch_loss_avg_over_batch': 0.616136966072596,
 'train_ra_bd_only': 0.4218218218218218}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.946268796920776 s
2024-11-11:00:30:24 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.946268796920776 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.19013887266038168,
 'clean_test_loss_avg_over_batch': 0.5597002015838141,
 'epoch': 6,
 'test_acc': 0.8136,
 'test_asr': 0.9387777777777778,
 'test_ra': 0.05311111111111111,
 'train_acc': 0.8178285256410256,
 'train_acc_clean_only': 0.8406597075385608,
 'train_asr_bd_only': 0.6123021438589461,
 'train_epoch_loss_avg_over_batch': 0.5558351688660108,
 'train_ra_bd_only': 0.4241634942897215}
2024-11-11:00:30:28 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.19013887266038168,
 'clean_test_loss_avg_over_batch': 0.5597002015838141,
 'epoch': 6,
 'test_acc': 0.8136,
 'test_asr': 0.9387777777777778,
 'test_ra': 0.05311111111111111,
 'train_acc': 0.8178285256410256,
 'train_acc_clean_only': 0.8406597075385608,
 'train_asr_bd_only': 0.6123021438589461,
 'train_epoch_loss_avg_over_batch': 0.5558351688660108,
 'train_ra_bd_only': 0.4241634942897215}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.951568365097046 s
2024-11-11:00:30:38 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.951568365097046 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.2110178525179205,
 'clean_test_loss_avg_over_batch': 0.6392640543134906,
 'epoch': 7,
 'test_acc': 0.8023,
 'test_asr': 0.9465555555555556,
 'test_ra': 0.04555555555555556,
 'train_acc': 0.8299479166666667,
 'train_acc_clean_only': 0.853038059203205,
 'train_asr_bd_only': 0.6220440881763527,
 'train_epoch_loss_avg_over_batch': 0.5229712960811762,
 'train_ra_bd_only': 0.41783567134268534}
2024-11-11:00:30:42 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.2110178525179205,
 'clean_test_loss_avg_over_batch': 0.6392640543134906,
 'epoch': 7,
 'test_acc': 0.8023,
 'test_asr': 0.9465555555555556,
 'test_ra': 0.04555555555555556,
 'train_acc': 0.8299479166666667,
 'train_acc_clean_only': 0.853038059203205,
 'train_asr_bd_only': 0.6220440881763527,
 'train_epoch_loss_avg_over_batch': 0.5229712960811762,
 'train_ra_bd_only': 0.41783567134268534}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.01172161102295 s
2024-11-11:00:30:52 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.01172161102295 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.5561018682701487,
 'clean_test_loss_avg_over_batch': 0.4865701470193984,
 'epoch': 8,
 'test_acc': 0.8398,
 'test_asr': 0.8334444444444444,
 'test_ra': 0.15188888888888888,
 'train_acc': 0.8391025641025641,
 'train_acc_clean_only': 0.8636960537737319,
 'train_asr_bd_only': 0.6177118813864957,
 'train_epoch_loss_avg_over_batch': 0.4964450466709259,
 'train_ra_bd_only': 0.4165497896213184}
2024-11-11:00:30:56 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.5561018682701487,
 'clean_test_loss_avg_over_batch': 0.4865701470193984,
 'epoch': 8,
 'test_acc': 0.8398,
 'test_asr': 0.8334444444444444,
 'test_ra': 0.15188888888888888,
 'train_acc': 0.8391025641025641,
 'train_acc_clean_only': 0.8636960537737319,
 'train_asr_bd_only': 0.6177118813864957,
 'train_epoch_loss_avg_over_batch': 0.4964450466709259,
 'train_ra_bd_only': 0.4165497896213184}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.028619289398193 s
2024-11-11:00:31:06 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.028619289398193 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.08258092018749408,
 'clean_test_loss_avg_over_batch': 0.538896879817866,
 'epoch': 9,
 'test_acc': 0.8288,
 'test_asr': 0.9692222222222222,
 'test_ra': 0.028555555555555556,
 'train_acc': 0.85078125,
 'train_acc_clean_only': 0.8758235398860399,
 'train_asr_bd_only': 0.6254006410256411,
 'train_epoch_loss_avg_over_batch': 0.464835602694597,
 'train_ra_bd_only': 0.41806891025641024}
2024-11-11:00:31:10 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.08258092018749408,
 'clean_test_loss_avg_over_batch': 0.538896879817866,
 'epoch': 9,
 'test_acc': 0.8288,
 'test_asr': 0.9692222222222222,
 'test_ra': 0.028555555555555556,
 'train_acc': 0.85078125,
 'train_acc_clean_only': 0.8758235398860399,
 'train_asr_bd_only': 0.6254006410256411,
 'train_epoch_loss_avg_over_batch': 0.464835602694597,
 'train_ra_bd_only': 0.41806891025641024}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.943060398101807 s
2024-11-11:00:31:20 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.943060398101807 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.1329211317474993,
 'clean_test_loss_avg_over_batch': 0.4602081102283695,
 'epoch': 10,
 'test_acc': 0.8501,
 'test_asr': 0.9592222222222222,
 'test_ra': 0.03677777777777778,
 'train_acc': 0.8569711538461539,
 'train_acc_clean_only': 0.8826645300571988,
 'train_asr_bd_only': 0.6255762677891361,
 'train_epoch_loss_avg_over_batch': 0.44838201785698917,
 'train_ra_bd_only': 0.4221286831028262}
2024-11-11:00:31:23 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.1329211317474993,
 'clean_test_loss_avg_over_batch': 0.4602081102283695,
 'epoch': 10,
 'test_acc': 0.8501,
 'test_asr': 0.9592222222222222,
 'test_ra': 0.03677777777777778,
 'train_acc': 0.8569711538461539,
 'train_acc_clean_only': 0.8826645300571988,
 'train_asr_bd_only': 0.6255762677891361,
 'train_epoch_loss_avg_over_batch': 0.44838201785698917,
 'train_ra_bd_only': 0.4221286831028262}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.948242664337158 s
2024-11-11:00:31:34 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.948242664337158 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.2920936031240812,
 'clean_test_loss_avg_over_batch': 0.45490731449821326,
 'epoch': 11,
 'test_acc': 0.8533,
 'test_asr': 0.9198888888888889,
 'test_ra': 0.072,
 'train_acc': 0.8631810897435898,
 'train_acc_clean_only': 0.8905112738442362,
 'train_asr_bd_only': 0.6172641698377729,
 'train_epoch_loss_avg_over_batch': 0.4247314556286885,
 'train_ra_bd_only': 0.425595834167835}
2024-11-11:00:31:37 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.2920936031240812,
 'clean_test_loss_avg_over_batch': 0.45490731449821326,
 'epoch': 11,
 'test_acc': 0.8533,
 'test_asr': 0.9198888888888889,
 'test_ra': 0.072,
 'train_acc': 0.8631810897435898,
 'train_acc_clean_only': 0.8905112738442362,
 'train_asr_bd_only': 0.6172641698377729,
 'train_epoch_loss_avg_over_batch': 0.4247314556286885,
 'train_ra_bd_only': 0.425595834167835}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.941264152526855 s
2024-11-11:00:31:47 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.941264152526855 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.15486581370391897,
 'clean_test_loss_avg_over_batch': 0.4132389767637736,
 'epoch': 12,
 'test_acc': 0.8642,
 'test_asr': 0.9506666666666667,
 'test_ra': 0.04388888888888889,
 'train_acc': 0.8689703525641026,
 'train_acc_clean_only': 0.896686029689969,
 'train_asr_bd_only': 0.6193625977149729,
 'train_epoch_loss_avg_over_batch': 0.4062884416335668,
 'train_ra_bd_only': 0.4307476448186009}
2024-11-11:00:31:51 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.15486581370391897,
 'clean_test_loss_avg_over_batch': 0.4132389767637736,
 'epoch': 12,
 'test_acc': 0.8642,
 'test_asr': 0.9506666666666667,
 'test_ra': 0.04388888888888889,
 'train_acc': 0.8689703525641026,
 'train_acc_clean_only': 0.896686029689969,
 'train_asr_bd_only': 0.6193625977149729,
 'train_epoch_loss_avg_over_batch': 0.4062884416335668,
 'train_ra_bd_only': 0.4307476448186009}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.990155935287476 s
2024-11-11:00:32:01 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.990155935287476 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.12316728378055801,
 'clean_test_loss_avg_over_batch': 0.40616368926778623,
 'epoch': 13,
 'test_acc': 0.873,
 'test_asr': 0.9612222222222222,
 'test_ra': 0.035333333333333335,
 'train_acc': 0.8743589743589744,
 'train_acc_clean_only': 0.9034656220090369,
 'train_asr_bd_only': 0.6124574404165832,
 'train_epoch_loss_avg_over_batch': 0.39307365249364806,
 'train_ra_bd_only': 0.43821349889845784}
2024-11-11:00:32:05 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.12316728378055801,
 'clean_test_loss_avg_over_batch': 0.40616368926778623,
 'epoch': 13,
 'test_acc': 0.873,
 'test_asr': 0.9612222222222222,
 'test_ra': 0.035333333333333335,
 'train_acc': 0.8743589743589744,
 'train_acc_clean_only': 0.9034656220090369,
 'train_asr_bd_only': 0.6124574404165832,
 'train_epoch_loss_avg_over_batch': 0.39307365249364806,
 'train_ra_bd_only': 0.43821349889845784}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.022572994232178 s
2024-11-11:00:32:15 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.022572994232178 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.18811695288184663,
 'clean_test_loss_avg_over_batch': 0.4375786123019231,
 'epoch': 14,
 'test_acc': 0.8679,
 'test_asr': 0.9373333333333334,
 'test_ra': 0.05677777777777778,
 'train_acc': 0.8793269230769231,
 'train_acc_clean_only': 0.9069135912389262,
 'train_asr_bd_only': 0.63115738886664,
 'train_epoch_loss_avg_over_batch': 0.3794653547115815,
 'train_ra_bd_only': 0.41890268321986385}
2024-11-11:00:32:19 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.18811695288184663,
 'clean_test_loss_avg_over_batch': 0.4375786123019231,
 'epoch': 14,
 'test_acc': 0.8679,
 'test_asr': 0.9373333333333334,
 'test_ra': 0.05677777777777778,
 'train_acc': 0.8793269230769231,
 'train_acc_clean_only': 0.9069135912389262,
 'train_asr_bd_only': 0.63115738886664,
 'train_epoch_loss_avg_over_batch': 0.3794653547115815,
 'train_ra_bd_only': 0.41890268321986385}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.9665207862854 s
2024-11-11:00:32:29 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.9665207862854 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.11175871649297925,
 'clean_test_loss_avg_over_batch': 0.45040295207047765,
 'epoch': 15,
 'test_acc': 0.8593,
 'test_asr': 0.9626666666666667,
 'test_ra': 0.03411111111111111,
 'train_acc': 0.8838141025641025,
 'train_acc_clean_only': 0.9130163817663818,
 'train_asr_bd_only': 0.6209935897435898,
 'train_epoch_loss_avg_over_batch': 0.36344162011757875,
 'train_ra_bd_only': 0.42568108974358976}
2024-11-11:00:32:32 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.11175871649297925,
 'clean_test_loss_avg_over_batch': 0.45040295207047765,
 'epoch': 15,
 'test_acc': 0.8593,
 'test_asr': 0.9626666666666667,
 'test_ra': 0.03411111111111111,
 'train_acc': 0.8838141025641025,
 'train_acc_clean_only': 0.9130163817663818,
 'train_asr_bd_only': 0.6209935897435898,
 'train_epoch_loss_avg_over_batch': 0.36344162011757875,
 'train_ra_bd_only': 0.42568108974358976}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.049301385879517 s
2024-11-11:00:32:43 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.049301385879517 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.12695907424925498,
 'clean_test_loss_avg_over_batch': 0.42490690229814265,
 'epoch': 16,
 'test_acc': 0.8678,
 'test_asr': 0.9625555555555556,
 'test_ra': 0.034444444444444444,
 'train_acc': 0.891426282051282,
 'train_acc_clean_only': 0.9205208101491209,
 'train_asr_bd_only': 0.6294589178356713,
 'train_epoch_loss_avg_over_batch': 0.34367313507275704,
 'train_ra_bd_only': 0.42685370741482964}
2024-11-11:00:32:46 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.12695907424925498,
 'clean_test_loss_avg_over_batch': 0.42490690229814265,
 'epoch': 16,
 'test_acc': 0.8678,
 'test_asr': 0.9625555555555556,
 'test_ra': 0.034444444444444444,
 'train_acc': 0.891426282051282,
 'train_acc_clean_only': 0.9205208101491209,
 'train_asr_bd_only': 0.6294589178356713,
 'train_epoch_loss_avg_over_batch': 0.34367313507275704,
 'train_ra_bd_only': 0.42685370741482964}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.99928593635559 s
2024-11-11:00:32:57 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.99928593635559 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.10118220929666356,
 'clean_test_loss_avg_over_batch': 0.6539799986006338,
 'epoch': 17,
 'test_acc': 0.8195,
 'test_asr': 0.9657777777777777,
 'test_ra': 0.029222222222222222,
 'train_acc': 0.8926682692307693,
 'train_acc_clean_only': 0.9223030869555541,
 'train_asr_bd_only': 0.6257767087592704,
 'train_epoch_loss_avg_over_batch': 0.33880417560919734,
 'train_ra_bd_only': 0.43375425937061535}
2024-11-11:00:33:00 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.10118220929666356,
 'clean_test_loss_avg_over_batch': 0.6539799986006338,
 'epoch': 17,
 'test_acc': 0.8195,
 'test_asr': 0.9657777777777777,
 'test_ra': 0.029222222222222222,
 'train_acc': 0.8926682692307693,
 'train_acc_clean_only': 0.9223030869555541,
 'train_asr_bd_only': 0.6257767087592704,
 'train_epoch_loss_avg_over_batch': 0.33880417560919734,
 'train_ra_bd_only': 0.43375425937061535}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.824890851974487 s
2024-11-11:00:33:10 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.824890851974487 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.22441524524294154,
 'clean_test_loss_avg_over_batch': 0.4813161999741687,
 'epoch': 18,
 'test_acc': 0.8524,
 'test_asr': 0.9378888888888889,
 'test_ra': 0.055,
 'train_acc': 0.8948317307692307,
 'train_acc_clean_only': 0.9256143162393162,
 'train_asr_bd_only': 0.6177884615384616,
 'train_epoch_loss_avg_over_batch': 0.33282829970121386,
 'train_ra_bd_only': 0.4344951923076923}
2024-11-11:00:33:14 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.22441524524294154,
 'clean_test_loss_avg_over_batch': 0.4813161999741687,
 'epoch': 18,
 'test_acc': 0.8524,
 'test_asr': 0.9378888888888889,
 'test_ra': 0.055,
 'train_acc': 0.8948317307692307,
 'train_acc_clean_only': 0.9256143162393162,
 'train_asr_bd_only': 0.6177884615384616,
 'train_epoch_loss_avg_over_batch': 0.33282829970121386,
 'train_ra_bd_only': 0.4344951923076923}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.933377742767334 s
2024-11-11:00:33:24 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.933377742767334 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.18882370952674202,
 'clean_test_loss_avg_over_batch': 0.4314933336233791,
 'epoch': 19,
 'test_acc': 0.8644,
 'test_asr': 0.9487777777777778,
 'test_ra': 0.04766666666666667,
 'train_acc': 0.9005608974358974,
 'train_acc_clean_only': 0.9313361080816399,
 'train_asr_bd_only': 0.6235223402123823,
 'train_epoch_loss_avg_over_batch': 0.3190744604437779,
 'train_ra_bd_only': 0.43478260869565216}
2024-11-11:00:33:28 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.18882370952674202,
 'clean_test_loss_avg_over_batch': 0.4314933336233791,
 'epoch': 19,
 'test_acc': 0.8644,
 'test_asr': 0.9487777777777778,
 'test_ra': 0.04766666666666667,
 'train_acc': 0.9005608974358974,
 'train_acc_clean_only': 0.9313361080816399,
 'train_asr_bd_only': 0.6235223402123823,
 'train_epoch_loss_avg_over_batch': 0.3190744604437779,
 'train_ra_bd_only': 0.43478260869565216}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.041183948516846 s
2024-11-11:00:33:38 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.041183948516846 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.13375887123894104,
 'clean_test_loss_avg_over_batch': 0.4225896900590462,
 'epoch': 20,
 'test_acc': 0.877,
 'test_asr': 0.9612222222222222,
 'test_ra': 0.036333333333333336,
 'train_acc': 0.9030849358974359,
 'train_acc_clean_only': 0.9344313376363231,
 'train_asr_bd_only': 0.6208416833667335,
 'train_epoch_loss_avg_over_batch': 0.30653431446124346,
 'train_ra_bd_only': 0.4326653306613226}
2024-11-11:00:33:42 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.13375887123894104,
 'clean_test_loss_avg_over_batch': 0.4225896900590462,
 'epoch': 20,
 'test_acc': 0.877,
 'test_asr': 0.9612222222222222,
 'test_ra': 0.036333333333333336,
 'train_acc': 0.9030849358974359,
 'train_acc_clean_only': 0.9344313376363231,
 'train_asr_bd_only': 0.6208416833667335,
 'train_epoch_loss_avg_over_batch': 0.30653431446124346,
 'train_ra_bd_only': 0.4326653306613226}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.960863590240479 s
2024-11-11:00:33:52 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.960863590240479 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.17521162391443487,
 'clean_test_loss_avg_over_batch': 0.5259429993508737,
 'epoch': 21,
 'test_acc': 0.8532,
 'test_asr': 0.9464444444444444,
 'test_ra': 0.04888888888888889,
 'train_acc': 0.9097355769230769,
 'train_acc_clean_only': 0.9401762663580522,
 'train_asr_bd_only': 0.6355252606255012,
 'train_epoch_loss_avg_over_batch': 0.2926557326546082,
 'train_ra_bd_only': 0.4210104250200481}
2024-11-11:00:33:55 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.17521162391443487,
 'clean_test_loss_avg_over_batch': 0.5259429993508737,
 'epoch': 21,
 'test_acc': 0.8532,
 'test_asr': 0.9464444444444444,
 'test_ra': 0.04888888888888889,
 'train_acc': 0.9097355769230769,
 'train_acc_clean_only': 0.9401762663580522,
 'train_asr_bd_only': 0.6355252606255012,
 'train_epoch_loss_avg_over_batch': 0.2926557326546082,
 'train_ra_bd_only': 0.4210104250200481}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.026416778564453 s
2024-11-11:00:34:06 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.026416778564453 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.23634973519914587,
 'clean_test_loss_avg_over_batch': 0.4115782176391988,
 'epoch': 22,
 'test_acc': 0.8771,
 'test_asr': 0.9366666666666666,
 'test_ra': 0.058666666666666666,
 'train_acc': 0.9099559294871795,
 'train_acc_clean_only': 0.9410625653809344,
 'train_asr_bd_only': 0.6299338809857744,
 'train_epoch_loss_avg_over_batch': 0.2877364884584378,
 'train_ra_bd_only': 0.4241634942897215}
2024-11-11:00:34:09 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.23634973519914587,
 'clean_test_loss_avg_over_batch': 0.4115782176391988,
 'epoch': 22,
 'test_acc': 0.8771,
 'test_asr': 0.9366666666666666,
 'test_ra': 0.058666666666666666,
 'train_acc': 0.9099559294871795,
 'train_acc_clean_only': 0.9410625653809344,
 'train_asr_bd_only': 0.6299338809857744,
 'train_epoch_loss_avg_over_batch': 0.2877364884584378,
 'train_ra_bd_only': 0.4241634942897215}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.038936614990234 s
2024-11-11:00:34:20 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.038936614990234 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.12442266158300491,
 'clean_test_loss_avg_over_batch': 0.39823554974945286,
 'epoch': 23,
 'test_acc': 0.8866,
 'test_asr': 0.9632222222222222,
 'test_ra': 0.034,
 'train_acc': 0.9127203525641026,
 'train_acc_clean_only': 0.9448932808083506,
 'train_asr_bd_only': 0.6229705351773902,
 'train_epoch_loss_avg_over_batch': 0.2811453436811765,
 'train_ra_bd_only': 0.43936660653437565}
2024-11-11:00:34:23 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.12442266158300491,
 'clean_test_loss_avg_over_batch': 0.39823554974945286,
 'epoch': 23,
 'test_acc': 0.8866,
 'test_asr': 0.9632222222222222,
 'test_ra': 0.034,
 'train_acc': 0.9127203525641026,
 'train_acc_clean_only': 0.9448932808083506,
 'train_asr_bd_only': 0.6229705351773902,
 'train_epoch_loss_avg_over_batch': 0.2811453436811765,
 'train_ra_bd_only': 0.43936660653437565}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.973629474639893 s
2024-11-11:00:34:33 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.973629474639893 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.14084232232572746,
 'clean_test_loss_avg_over_batch': 0.3254951068872138,
 'epoch': 24,
 'test_acc': 0.8994,
 'test_asr': 0.9568888888888889,
 'test_ra': 0.04022222222222222,
 'train_acc': 0.9169070512820513,
 'train_acc_clean_only': 0.9482482304233628,
 'train_asr_bd_only': 0.6349619543452143,
 'train_epoch_loss_avg_over_batch': 0.26930043599926506,
 'train_ra_bd_only': 0.42691229475370446}
2024-11-11:00:34:37 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.14084232232572746,
 'clean_test_loss_avg_over_batch': 0.3254951068872138,
 'epoch': 24,
 'test_acc': 0.8994,
 'test_asr': 0.9568888888888889,
 'test_ra': 0.04022222222222222,
 'train_acc': 0.9169070512820513,
 'train_acc_clean_only': 0.9482482304233628,
 'train_asr_bd_only': 0.6349619543452143,
 'train_epoch_loss_avg_over_batch': 0.26930043599926506,
 'train_ra_bd_only': 0.42691229475370446}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.12720251083374 s
2024-11-11:00:34:47 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.12720251083374 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.14592287324788705,
 'clean_test_loss_avg_over_batch': 0.3656407208948196,
 'epoch': 25,
 'test_acc': 0.8954,
 'test_asr': 0.9593333333333334,
 'test_ra': 0.03866666666666667,
 'train_acc': 0.9193309294871795,
 'train_acc_clean_only': 0.9516750139120757,
 'train_asr_bd_only': 0.6284284284284284,
 'train_epoch_loss_avg_over_batch': 0.26157210431037803,
 'train_ra_bd_only': 0.43163163163163165}
2024-11-11:00:34:52 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.14592287324788705,
 'clean_test_loss_avg_over_batch': 0.3656407208948196,
 'epoch': 25,
 'test_acc': 0.8954,
 'test_asr': 0.9593333333333334,
 'test_ra': 0.03866666666666667,
 'train_acc': 0.9193309294871795,
 'train_acc_clean_only': 0.9516750139120757,
 'train_asr_bd_only': 0.6284284284284284,
 'train_epoch_loss_avg_over_batch': 0.26157210431037803,
 'train_ra_bd_only': 0.43163163163163165}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.992597818374634 s
2024-11-11:00:35:02 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.992597818374634 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.0911667331164493,
 'clean_test_loss_avg_over_batch': 0.42565613155123555,
 'epoch': 26,
 'test_acc': 0.8804,
 'test_asr': 0.9647777777777777,
 'test_ra': 0.032,
 'train_acc': 0.9201522435897436,
 'train_acc_clean_only': 0.9524763494713411,
 'train_asr_bd_only': 0.6294294294294295,
 'train_epoch_loss_avg_over_batch': 0.25858568891118733,
 'train_ra_bd_only': 0.42662662662662665}
2024-11-11:00:35:06 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.0911667331164493,
 'clean_test_loss_avg_over_batch': 0.42565613155123555,
 'epoch': 26,
 'test_acc': 0.8804,
 'test_asr': 0.9647777777777777,
 'test_ra': 0.032,
 'train_acc': 0.9201522435897436,
 'train_acc_clean_only': 0.9524763494713411,
 'train_asr_bd_only': 0.6294294294294295,
 'train_epoch_loss_avg_over_batch': 0.25858568891118733,
 'train_ra_bd_only': 0.42662662662662665}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.04696011543274 s
2024-11-11:00:35:16 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.04696011543274 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.16494716630435327,
 'clean_test_loss_avg_over_batch': 0.39710034448889237,
 'epoch': 27,
 'test_acc': 0.889,
 'test_asr': 0.9511111111111111,
 'test_ra': 0.04477777777777778,
 'train_acc': 0.9228966346153846,
 'train_acc_clean_only': 0.9545080234136788,
 'train_asr_bd_only': 0.6382040489075967,
 'train_epoch_loss_avg_over_batch': 0.24590226505429316,
 'train_ra_bd_only': 0.4197233914612147}
2024-11-11:00:35:20 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.16494716630435327,
 'clean_test_loss_avg_over_batch': 0.39710034448889237,
 'epoch': 27,
 'test_acc': 0.889,
 'test_asr': 0.9511111111111111,
 'test_ra': 0.04477777777777778,
 'train_acc': 0.9228966346153846,
 'train_acc_clean_only': 0.9545080234136788,
 'train_asr_bd_only': 0.6382040489075967,
 'train_epoch_loss_avg_over_batch': 0.24590226505429316,
 'train_ra_bd_only': 0.4197233914612147}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.03016471862793 s
2024-11-11:00:35:30 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.03016471862793 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.1644906966461682,
 'clean_test_loss_avg_over_batch': 0.47070594537484495,
 'epoch': 28,
 'test_acc': 0.8766,
 'test_asr': 0.9492222222222222,
 'test_ra': 0.04711111111111111,
 'train_acc': 0.9239783653846154,
 'train_acc_clean_only': 0.9572465058310335,
 'train_asr_bd_only': 0.6242983159582999,
 'train_epoch_loss_avg_over_batch': 0.2432845455713761,
 'train_ra_bd_only': 0.43464314354450684}
2024-11-11:00:35:33 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.1644906966461682,
 'clean_test_loss_avg_over_batch': 0.47070594537484495,
 'epoch': 28,
 'test_acc': 0.8766,
 'test_asr': 0.9492222222222222,
 'test_ra': 0.04711111111111111,
 'train_acc': 0.9239783653846154,
 'train_acc_clean_only': 0.9572465058310335,
 'train_asr_bd_only': 0.6242983159582999,
 'train_epoch_loss_avg_over_batch': 0.2432845455713761,
 'train_ra_bd_only': 0.43464314354450684}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.002665996551514 s
2024-11-11:00:35:44 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.002665996551514 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.248769096085723,
 'clean_test_loss_avg_over_batch': 0.3467769668072085,
 'epoch': 29,
 'test_acc': 0.9009,
 'test_asr': 0.9366666666666666,
 'test_ra': 0.059555555555555556,
 'train_acc': 0.9283253205128205,
 'train_acc_clean_only': 0.9612987937864423,
 'train_asr_bd_only': 0.6311672683513839,
 'train_epoch_loss_avg_over_batch': 0.2362042680191688,
 'train_ra_bd_only': 0.43020457280385077}
2024-11-11:00:35:47 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.248769096085723,
 'clean_test_loss_avg_over_batch': 0.3467769668072085,
 'epoch': 29,
 'test_acc': 0.9009,
 'test_asr': 0.9366666666666666,
 'test_ra': 0.059555555555555556,
 'train_acc': 0.9283253205128205,
 'train_acc_clean_only': 0.9612987937864423,
 'train_asr_bd_only': 0.6311672683513839,
 'train_epoch_loss_avg_over_batch': 0.2362042680191688,
 'train_ra_bd_only': 0.43020457280385077}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.169658899307251 s
2024-11-11:00:35:58 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.169658899307251 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.1156262995275131,
 'clean_test_loss_avg_over_batch': 0.36515946252436576,
 'epoch': 30,
 'test_acc': 0.8991,
 'test_asr': 0.9643333333333334,
 'test_ra': 0.034,
 'train_acc': 0.9307491987179487,
 'train_acc_clean_only': 0.9634955259760495,
 'train_asr_bd_only': 0.6361633960752904,
 'train_epoch_loss_avg_over_batch': 0.22545398668600963,
 'train_ra_bd_only': 0.4221065278334001}
2024-11-11:00:36:01 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.1156262995275131,
 'clean_test_loss_avg_over_batch': 0.36515946252436576,
 'epoch': 30,
 'test_acc': 0.8991,
 'test_asr': 0.9643333333333334,
 'test_ra': 0.034,
 'train_acc': 0.9307491987179487,
 'train_acc_clean_only': 0.9634955259760495,
 'train_asr_bd_only': 0.6361633960752904,
 'train_epoch_loss_avg_over_batch': 0.22545398668600963,
 'train_ra_bd_only': 0.4221065278334001}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.162040948867798 s
2024-11-11:00:36:12 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.162040948867798 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.08714042285999979,
 'clean_test_loss_avg_over_batch': 0.38666441055792794,
 'epoch': 31,
 'test_acc': 0.8982,
 'test_asr': 0.9697777777777777,
 'test_ra': 0.029111111111111112,
 'train_acc': 0.9303886217948718,
 'train_acc_clean_only': 0.9622746494547073,
 'train_asr_bd_only': 0.6432865731462926,
 'train_epoch_loss_avg_over_batch': 0.22461947771983268,
 'train_ra_bd_only': 0.41703406813627253}
2024-11-11:00:36:15 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.08714042285999979,
 'clean_test_loss_avg_over_batch': 0.38666441055792794,
 'epoch': 31,
 'test_acc': 0.8982,
 'test_asr': 0.9697777777777777,
 'test_ra': 0.029111111111111112,
 'train_acc': 0.9303886217948718,
 'train_acc_clean_only': 0.9622746494547073,
 'train_asr_bd_only': 0.6432865731462926,
 'train_epoch_loss_avg_over_batch': 0.22461947771983268,
 'train_ra_bd_only': 0.41703406813627253}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.94973611831665 s
2024-11-11:00:36:26 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.94973611831665 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.09574370805447115,
 'clean_test_loss_avg_over_batch': 0.40242486758322654,
 'epoch': 32,
 'test_acc': 0.8907,
 'test_asr': 0.9681111111111111,
 'test_ra': 0.030333333333333334,
 'train_acc': 0.9305689102564103,
 'train_acc_clean_only': 0.9639645655270656,
 'train_asr_bd_only': 0.6300080128205128,
 'train_epoch_loss_avg_over_batch': 0.2237752843170594,
 'train_ra_bd_only': 0.4312900641025641}
2024-11-11:00:36:29 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.09574370805447115,
 'clean_test_loss_avg_over_batch': 0.40242486758322654,
 'epoch': 32,
 'test_acc': 0.8907,
 'test_asr': 0.9681111111111111,
 'test_ra': 0.030333333333333334,
 'train_acc': 0.9305689102564103,
 'train_acc_clean_only': 0.9639645655270656,
 'train_asr_bd_only': 0.6300080128205128,
 'train_epoch_loss_avg_over_batch': 0.2237752843170594,
 'train_ra_bd_only': 0.4312900641025641}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.039329528808594 s
2024-11-11:00:36:40 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.039329528808594 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.12336879630218929,
 'clean_test_loss_avg_over_batch': 0.3998497541569456,
 'epoch': 33,
 'test_acc': 0.8959,
 'test_asr': 0.9565555555555556,
 'test_ra': 0.04077777777777778,
 'train_acc': 0.9348557692307692,
 'train_acc_clean_only': 0.9679709757834758,
 'train_asr_bd_only': 0.6368189102564102,
 'train_epoch_loss_avg_over_batch': 0.21474991597426243,
 'train_ra_bd_only': 0.42267628205128205}
2024-11-11:00:36:43 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.12336879630218929,
 'clean_test_loss_avg_over_batch': 0.3998497541569456,
 'epoch': 33,
 'test_acc': 0.8959,
 'test_asr': 0.9565555555555556,
 'test_ra': 0.04077777777777778,
 'train_acc': 0.9348557692307692,
 'train_acc_clean_only': 0.9679709757834758,
 'train_asr_bd_only': 0.6368189102564102,
 'train_epoch_loss_avg_over_batch': 0.21474991597426243,
 'train_ra_bd_only': 0.42267628205128205}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.928045272827148 s
2024-11-11:00:36:53 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.928045272827148 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.14833006254908904,
 'clean_test_loss_avg_over_batch': 0.39537955160382426,
 'epoch': 34,
 'test_acc': 0.8965,
 'test_asr': 0.959,
 'test_ra': 0.03822222222222222,
 'train_acc': 0.9356570512820512,
 'train_acc_clean_only': 0.9687270460970018,
 'train_asr_bd_only': 0.6380933306629281,
 'train_epoch_loss_avg_over_batch': 0.20892379868489044,
 'train_ra_bd_only': 0.4247947125976367}
2024-11-11:00:36:57 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.14833006254908904,
 'clean_test_loss_avg_over_batch': 0.39537955160382426,
 'epoch': 34,
 'test_acc': 0.8965,
 'test_asr': 0.959,
 'test_ra': 0.03822222222222222,
 'train_acc': 0.9356570512820512,
 'train_acc_clean_only': 0.9687270460970018,
 'train_asr_bd_only': 0.6380933306629281,
 'train_epoch_loss_avg_over_batch': 0.20892379868489044,
 'train_ra_bd_only': 0.4247947125976367}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.99195146560669 s
2024-11-11:00:37:07 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.99195146560669 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.08245951146654733,
 'clean_test_loss_avg_over_batch': 0.4312979807204838,
 'epoch': 35,
 'test_acc': 0.8902,
 'test_asr': 0.9711111111111111,
 'test_ra': 0.027444444444444445,
 'train_acc': 0.9384014423076923,
 'train_acc_clean_only': 0.9700672096853162,
 'train_asr_bd_only': 0.6530284797432812,
 'train_epoch_loss_avg_over_batch': 0.19986168396396514,
 'train_ra_bd_only': 0.4159647011632571}
2024-11-11:00:37:11 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.08245951146654733,
 'clean_test_loss_avg_over_batch': 0.4312979807204838,
 'epoch': 35,
 'test_acc': 0.8902,
 'test_asr': 0.9711111111111111,
 'test_ra': 0.027444444444444445,
 'train_acc': 0.9384014423076923,
 'train_acc_clean_only': 0.9700672096853162,
 'train_asr_bd_only': 0.6530284797432812,
 'train_epoch_loss_avg_over_batch': 0.19986168396396514,
 'train_ra_bd_only': 0.4159647011632571}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.066933393478394 s
2024-11-11:00:37:21 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.066933393478394 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.11616151871054735,
 'clean_test_loss_avg_over_batch': 0.36780964328518395,
 'epoch': 36,
 'test_acc': 0.9055,
 'test_asr': 0.9674444444444444,
 'test_ra': 0.03122222222222222,
 'train_acc': 0.9408653846153846,
 'train_acc_clean_only': 0.9736666369869112,
 'train_asr_bd_only': 0.6459167333867094,
 'train_epoch_loss_avg_over_batch': 0.19541736010175484,
 'train_ra_bd_only': 0.4173338670936749}
2024-11-11:00:37:25 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.11616151871054735,
 'clean_test_loss_avg_over_batch': 0.36780964328518395,
 'epoch': 36,
 'test_acc': 0.9055,
 'test_asr': 0.9674444444444444,
 'test_ra': 0.03122222222222222,
 'train_acc': 0.9408653846153846,
 'train_acc_clean_only': 0.9736666369869112,
 'train_asr_bd_only': 0.6459167333867094,
 'train_epoch_loss_avg_over_batch': 0.19541736010175484,
 'train_ra_bd_only': 0.4173338670936749}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.08392858505249 s
2024-11-11:00:37:35 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.08392858505249 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.1336562199203271,
 'clean_test_loss_avg_over_batch': 0.4546514621263818,
 'epoch': 37,
 'test_acc': 0.8912,
 'test_asr': 0.9597777777777777,
 'test_ra': 0.038,
 'train_acc': 0.9385416666666667,
 'train_acc_clean_only': 0.9718432123222116,
 'train_asr_bd_only': 0.6388944522331264,
 'train_epoch_loss_avg_over_batch': 0.19786386307424458,
 'train_ra_bd_only': 0.424193871419988}
2024-11-11:00:37:39 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.1336562199203271,
 'clean_test_loss_avg_over_batch': 0.4546514621263818,
 'epoch': 37,
 'test_acc': 0.8912,
 'test_asr': 0.9597777777777777,
 'test_ra': 0.038,
 'train_acc': 0.9385416666666667,
 'train_acc_clean_only': 0.9718432123222116,
 'train_asr_bd_only': 0.6388944522331264,
 'train_epoch_loss_avg_over_batch': 0.19786386307424458,
 'train_ra_bd_only': 0.424193871419988}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.95823860168457 s
2024-11-11:00:37:49 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.95823860168457 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.24869039854113484,
 'clean_test_loss_avg_over_batch': 0.37822640149653713,
 'epoch': 38,
 'test_acc': 0.905,
 'test_asr': 0.9321111111111111,
 'test_ra': 0.06422222222222222,
 'train_acc': 0.9416065705128205,
 'train_acc_clean_only': 0.9757145401121895,
 'train_asr_bd_only': 0.6349079263410728,
 'train_epoch_loss_avg_over_batch': 0.19261268854905397,
 'train_ra_bd_only': 0.4267413931144916}
2024-11-11:00:37:52 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.24869039854113484,
 'clean_test_loss_avg_over_batch': 0.37822640149653713,
 'epoch': 38,
 'test_acc': 0.905,
 'test_asr': 0.9321111111111111,
 'test_ra': 0.06422222222222222,
 'train_acc': 0.9416065705128205,
 'train_acc_clean_only': 0.9757145401121895,
 'train_asr_bd_only': 0.6349079263410728,
 'train_epoch_loss_avg_over_batch': 0.19261268854905397,
 'train_ra_bd_only': 0.4267413931144916}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.98118281364441 s
2024-11-11:00:38:03 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.98118281364441 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.26538796523507213,
 'clean_test_loss_avg_over_batch': 0.365253017295765,
 'epoch': 39,
 'test_acc': 0.9017,
 'test_asr': 0.9211111111111111,
 'test_ra': 0.07433333333333333,
 'train_acc': 0.9415464743589743,
 'train_acc_clean_only': 0.9746072016735656,
 'train_asr_bd_only': 0.6436020858403529,
 'train_epoch_loss_avg_over_batch': 0.18826960624219516,
 'train_ra_bd_only': 0.41776975531488164}
2024-11-11:00:38:06 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.26538796523507213,
 'clean_test_loss_avg_over_batch': 0.365253017295765,
 'epoch': 39,
 'test_acc': 0.9017,
 'test_asr': 0.9211111111111111,
 'test_ra': 0.07433333333333333,
 'train_acc': 0.9415464743589743,
 'train_acc_clean_only': 0.9746072016735656,
 'train_asr_bd_only': 0.6436020858403529,
 'train_epoch_loss_avg_over_batch': 0.18826960624219516,
 'train_ra_bd_only': 0.41776975531488164}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.055544137954712 s
2024-11-11:00:38:16 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.055544137954712 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.144944957975613,
 'clean_test_loss_avg_over_batch': 0.3483229115416732,
 'epoch': 40,
 'test_acc': 0.9086,
 'test_asr': 0.963,
 'test_ra': 0.03422222222222222,
 'train_acc': 0.9458533653846154,
 'train_acc_clean_only': 0.9789232378535977,
 'train_asr_bd_only': 0.6480256564441772,
 'train_epoch_loss_avg_over_batch': 0.17913800008021868,
 'train_ra_bd_only': 0.41691721787933456}
2024-11-11:00:38:20 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.144944957975613,
 'clean_test_loss_avg_over_batch': 0.3483229115416732,
 'epoch': 40,
 'test_acc': 0.9086,
 'test_asr': 0.963,
 'test_ra': 0.03422222222222222,
 'train_acc': 0.9458533653846154,
 'train_acc_clean_only': 0.9789232378535977,
 'train_asr_bd_only': 0.6480256564441772,
 'train_epoch_loss_avg_over_batch': 0.17913800008021868,
 'train_ra_bd_only': 0.41691721787933456}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.026398181915283 s
2024-11-11:00:38:30 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.026398181915283 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.1116349047695903,
 'clean_test_loss_avg_over_batch': 0.3859358573261696,
 'epoch': 41,
 'test_acc': 0.9034,
 'test_asr': 0.9622222222222222,
 'test_ra': 0.036,
 'train_acc': 0.9477564102564102,
 'train_acc_clean_only': 0.9796109157280862,
 'train_asr_bd_only': 0.6611934321185422,
 'train_epoch_loss_avg_over_batch': 0.1725532517505762,
 'train_ra_bd_only': 0.4050861033239888}
2024-11-11:00:38:34 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.1116349047695903,
 'clean_test_loss_avg_over_batch': 0.3859358573261696,
 'epoch': 41,
 'test_acc': 0.9034,
 'test_asr': 0.9622222222222222,
 'test_ra': 0.036,
 'train_acc': 0.9477564102564102,
 'train_acc_clean_only': 0.9796109157280862,
 'train_asr_bd_only': 0.6611934321185422,
 'train_epoch_loss_avg_over_batch': 0.1725532517505762,
 'train_ra_bd_only': 0.4050861033239888}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.045753002166748 s
2024-11-11:00:38:44 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.045753002166748 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.18078115934007605,
 'clean_test_loss_avg_over_batch': 0.379399835403207,
 'epoch': 42,
 'test_acc': 0.9045,
 'test_asr': 0.9453333333333334,
 'test_ra': 0.05177777777777778,
 'train_acc': 0.9453325320512821,
 'train_acc_clean_only': 0.9784094197253322,
 'train_asr_bd_only': 0.6477067895053075,
 'train_epoch_loss_avg_over_batch': 0.17707382027919477,
 'train_ra_bd_only': 0.41698377728820346}
2024-11-11:00:38:48 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.18078115934007605,
 'clean_test_loss_avg_over_batch': 0.379399835403207,
 'epoch': 42,
 'test_acc': 0.9045,
 'test_asr': 0.9453333333333334,
 'test_ra': 0.05177777777777778,
 'train_acc': 0.9453325320512821,
 'train_acc_clean_only': 0.9784094197253322,
 'train_asr_bd_only': 0.6477067895053075,
 'train_epoch_loss_avg_over_batch': 0.17707382027919477,
 'train_ra_bd_only': 0.41698377728820346}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.04218316078186 s
2024-11-11:00:38:58 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.04218316078186 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.09792012844929918,
 'clean_test_loss_avg_over_batch': 0.37921092847857296,
 'epoch': 43,
 'test_acc': 0.907,
 'test_asr': 0.971,
 'test_ra': 0.02788888888888889,
 'train_acc': 0.9492588141025641,
 'train_acc_clean_only': 0.9814592236467237,
 'train_asr_bd_only': 0.6594551282051282,
 'train_epoch_loss_avg_over_batch': 0.1670192376543314,
 'train_ra_bd_only': 0.4120592948717949}
2024-11-11:00:39:02 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.09792012844929918,
 'clean_test_loss_avg_over_batch': 0.37921092847857296,
 'epoch': 43,
 'test_acc': 0.907,
 'test_asr': 0.971,
 'test_ra': 0.02788888888888889,
 'train_acc': 0.9492588141025641,
 'train_acc_clean_only': 0.9814592236467237,
 'train_asr_bd_only': 0.6594551282051282,
 'train_epoch_loss_avg_over_batch': 0.1670192376543314,
 'train_ra_bd_only': 0.4120592948717949}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.007108449935913 s
2024-11-11:00:39:12 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.007108449935913 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.17103712443052463,
 'clean_test_loss_avg_over_batch': 0.40664900575257557,
 'epoch': 44,
 'test_acc': 0.902,
 'test_asr': 0.9531111111111111,
 'test_ra': 0.04388888888888889,
 'train_acc': 0.9514222756410257,
 'train_acc_clean_only': 0.9835062102123492,
 'train_asr_bd_only': 0.6627953544253103,
 'train_epoch_loss_avg_over_batch': 0.16157576960439865,
 'train_ra_bd_only': 0.4048858630356428}
2024-11-11:00:39:16 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.17103712443052463,
 'clean_test_loss_avg_over_batch': 0.40664900575257557,
 'epoch': 44,
 'test_acc': 0.902,
 'test_asr': 0.9531111111111111,
 'test_ra': 0.04388888888888889,
 'train_acc': 0.9514222756410257,
 'train_acc_clean_only': 0.9835062102123492,
 'train_asr_bd_only': 0.6627953544253103,
 'train_epoch_loss_avg_over_batch': 0.16157576960439865,
 'train_ra_bd_only': 0.4048858630356428}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.010843515396118 s
2024-11-11:00:39:26 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.010843515396118 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.10816381667071664,
 'clean_test_loss_avg_over_batch': 0.39886966545747804,
 'epoch': 45,
 'test_acc': 0.9067,
 'test_asr': 0.965,
 'test_ra': 0.03333333333333333,
 'train_acc': 0.9532251602564102,
 'train_acc_clean_only': 0.9855095045185416,
 'train_asr_bd_only': 0.6627953544253103,
 'train_epoch_loss_avg_over_batch': 0.15573833745259505,
 'train_ra_bd_only': 0.4040849018822587}
2024-11-11:00:39:30 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.10816381667071664,
 'clean_test_loss_avg_over_batch': 0.39886966545747804,
 'epoch': 45,
 'test_acc': 0.9067,
 'test_asr': 0.965,
 'test_ra': 0.03333333333333333,
 'train_acc': 0.9532251602564102,
 'train_acc_clean_only': 0.9855095045185416,
 'train_asr_bd_only': 0.6627953544253103,
 'train_epoch_loss_avg_over_batch': 0.15573833745259505,
 'train_ra_bd_only': 0.4040849018822587}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.988933324813843 s
2024-11-11:00:39:40 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.988933324813843 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.18535800091922283,
 'clean_test_loss_avg_over_batch': 0.4023263220545612,
 'epoch': 46,
 'test_acc': 0.9077,
 'test_asr': 0.9481111111111111,
 'test_ra': 0.049444444444444444,
 'train_acc': 0.9506810897435898,
 'train_acc_clean_only': 0.9827716689667453,
 'train_asr_bd_only': 0.6619943932719263,
 'train_epoch_loss_avg_over_batch': 0.158938020037917,
 'train_ra_bd_only': 0.40428514217060474}
2024-11-11:00:39:44 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.18535800091922283,
 'clean_test_loss_avg_over_batch': 0.4023263220545612,
 'epoch': 46,
 'test_acc': 0.9077,
 'test_asr': 0.9481111111111111,
 'test_ra': 0.049444444444444444,
 'train_acc': 0.9506810897435898,
 'train_acc_clean_only': 0.9827716689667453,
 'train_asr_bd_only': 0.6619943932719263,
 'train_epoch_loss_avg_over_batch': 0.158938020037917,
 'train_ra_bd_only': 0.40428514217060474}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.021692276000977 s
2024-11-11:00:39:54 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.021692276000977 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.15191851732071857,
 'clean_test_loss_avg_over_batch': 0.40158206601686114,
 'epoch': 47,
 'test_acc': 0.9086,
 'test_asr': 0.9595555555555556,
 'test_ra': 0.03811111111111111,
 'train_acc': 0.9513221153846154,
 'train_acc_clean_only': 0.9841538324579364,
 'train_asr_bd_only': 0.6555733761026463,
 'train_epoch_loss_avg_over_batch': 0.16015017681205884,
 'train_ra_bd_only': 0.4135926222935044}
2024-11-11:00:39:58 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.15191851732071857,
 'clean_test_loss_avg_over_batch': 0.40158206601686114,
 'epoch': 47,
 'test_acc': 0.9086,
 'test_asr': 0.9595555555555556,
 'test_ra': 0.03811111111111111,
 'train_acc': 0.9513221153846154,
 'train_acc_clean_only': 0.9841538324579364,
 'train_asr_bd_only': 0.6555733761026463,
 'train_epoch_loss_avg_over_batch': 0.16015017681205884,
 'train_ra_bd_only': 0.4135926222935044}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.960811376571655 s
2024-11-11:00:40:08 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.960811376571655 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.11220948870989009,
 'clean_test_loss_avg_over_batch': 0.37384709621532053,
 'epoch': 48,
 'test_acc': 0.9128,
 'test_asr': 0.9652222222222222,
 'test_ra': 0.033555555555555554,
 'train_acc': 0.9550480769230769,
 'train_acc_clean_only': 0.9867568830821963,
 'train_asr_bd_only': 0.6696052895211381,
 'train_epoch_loss_avg_over_batch': 0.14898329500395519,
 'train_ra_bd_only': 0.40212382288118614}
2024-11-11:00:40:11 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.11220948870989009,
 'clean_test_loss_avg_over_batch': 0.37384709621532053,
 'epoch': 48,
 'test_acc': 0.9128,
 'test_asr': 0.9652222222222222,
 'test_ra': 0.033555555555555554,
 'train_acc': 0.9550480769230769,
 'train_acc_clean_only': 0.9867568830821963,
 'train_asr_bd_only': 0.6696052895211381,
 'train_epoch_loss_avg_over_batch': 0.14898329500395519,
 'train_ra_bd_only': 0.40212382288118614}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.031713247299194 s
2024-11-11:00:40:22 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.031713247299194 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.07566690829444782,
 'clean_test_loss_avg_over_batch': 0.4113465292921549,
 'epoch': 49,
 'test_acc': 0.9059,
 'test_asr': 0.9707777777777777,
 'test_ra': 0.027666666666666666,
 'train_acc': 0.9572315705128205,
 'train_acc_clean_only': 0.9882046602719605,
 'train_asr_bd_only': 0.6781632243833968,
 'train_epoch_loss_avg_over_batch': 0.1412612911982414,
 'train_ra_bd_only': 0.3966312412271907}
2024-11-11:00:40:25 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.07566690829444782,
 'clean_test_loss_avg_over_batch': 0.4113465292921549,
 'epoch': 49,
 'test_acc': 0.9059,
 'test_asr': 0.9707777777777777,
 'test_ra': 0.027666666666666666,
 'train_acc': 0.9572315705128205,
 'train_acc_clean_only': 0.9882046602719605,
 'train_asr_bd_only': 0.6781632243833968,
 'train_epoch_loss_avg_over_batch': 0.1412612911982414,
 'train_ra_bd_only': 0.3966312412271907}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.95838975906372 s
2024-11-11:00:40:36 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.95838975906372 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.20689973909355386,
 'clean_test_loss_avg_over_batch': 0.39718621856049646,
 'epoch': 50,
 'test_acc': 0.9041,
 'test_asr': 0.9491111111111111,
 'test_ra': 0.04911111111111111,
 'train_acc': 0.9550280448717948,
 'train_acc_clean_only': 0.9863791146424518,
 'train_asr_bd_only': 0.6726798957706955,
 'train_epoch_loss_avg_over_batch': 0.14461397253550015,
 'train_ra_bd_only': 0.3966726798957707}
2024-11-11:00:40:39 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.20689973909355386,
 'clean_test_loss_avg_over_batch': 0.39718621856049646,
 'epoch': 50,
 'test_acc': 0.9041,
 'test_asr': 0.9491111111111111,
 'test_ra': 0.04911111111111111,
 'train_acc': 0.9550280448717948,
 'train_acc_clean_only': 0.9863791146424518,
 'train_asr_bd_only': 0.6726798957706955,
 'train_epoch_loss_avg_over_batch': 0.14461397253550015,
 'train_ra_bd_only': 0.3966726798957707}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.999533414840698 s
2024-11-11:00:40:49 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.999533414840698 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.13934051962798907,
 'clean_test_loss_avg_over_batch': 0.41554530417617364,
 'epoch': 51,
 'test_acc': 0.9044,
 'test_asr': 0.9651111111111111,
 'test_ra': 0.03277777777777778,
 'train_acc': 0.9563301282051282,
 'train_acc_clean_only': 0.9881808266743829,
 'train_asr_bd_only': 0.66973763268576,
 'train_epoch_loss_avg_over_batch': 0.14120270788478545,
 'train_ra_bd_only': 0.40036050470658924}
2024-11-11:00:40:53 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.13934051962798907,
 'clean_test_loss_avg_over_batch': 0.41554530417617364,
 'epoch': 51,
 'test_acc': 0.9044,
 'test_asr': 0.9651111111111111,
 'test_ra': 0.03277777777777778,
 'train_acc': 0.9563301282051282,
 'train_acc_clean_only': 0.9881808266743829,
 'train_asr_bd_only': 0.66973763268576,
 'train_epoch_loss_avg_over_batch': 0.14120270788478545,
 'train_ra_bd_only': 0.40036050470658924}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.00752329826355 s
2024-11-11:00:41:03 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.00752329826355 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.16261662852386355,
 'clean_test_loss_avg_over_batch': 0.387124537855764,
 'epoch': 52,
 'test_acc': 0.9084,
 'test_asr': 0.953,
 'test_ra': 0.04477777777777778,
 'train_acc': 0.9575921474358975,
 'train_acc_clean_only': 0.9878474927107214,
 'train_asr_bd_only': 0.6852334201562813,
 'train_epoch_loss_avg_over_batch': 0.1386354693856377,
 'train_ra_bd_only': 0.38529352835103187}
2024-11-11:00:41:07 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.16261662852386355,
 'clean_test_loss_avg_over_batch': 0.387124537855764,
 'epoch': 52,
 'test_acc': 0.9084,
 'test_asr': 0.953,
 'test_ra': 0.04477777777777778,
 'train_acc': 0.9575921474358975,
 'train_acc_clean_only': 0.9878474927107214,
 'train_asr_bd_only': 0.6852334201562813,
 'train_epoch_loss_avg_over_batch': 0.1386354693856377,
 'train_ra_bd_only': 0.38529352835103187}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.98638653755188 s
2024-11-11:00:41:17 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.98638653755188 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.11771740599102537,
 'clean_test_loss_avg_over_batch': 0.4082466667588753,
 'epoch': 53,
 'test_acc': 0.9061,
 'test_asr': 0.9632222222222222,
 'test_ra': 0.034555555555555555,
 'train_acc': 0.9592147435897436,
 'train_acc_clean_only': 0.9896719049102969,
 'train_asr_bd_only': 0.685222266720064,
 'train_epoch_loss_avg_over_batch': 0.13329598269401452,
 'train_ra_bd_only': 0.3866639967961554}
2024-11-11:00:41:20 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.11771740599102537,
 'clean_test_loss_avg_over_batch': 0.4082466667588753,
 'epoch': 53,
 'test_acc': 0.9061,
 'test_asr': 0.9632222222222222,
 'test_ra': 0.034555555555555555,
 'train_acc': 0.9592147435897436,
 'train_acc_clean_only': 0.9896719049102969,
 'train_asr_bd_only': 0.685222266720064,
 'train_epoch_loss_avg_over_batch': 0.13329598269401452,
 'train_ra_bd_only': 0.3866639967961554}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.983394861221313 s
2024-11-11:00:41:31 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.983394861221313 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.1156846740542137,
 'clean_test_loss_avg_over_batch': 0.40214588285624225,
 'epoch': 54,
 'test_acc': 0.9081,
 'test_asr': 0.9646666666666667,
 'test_ra': 0.034333333333333334,
 'train_acc': 0.9606971153846153,
 'train_acc_clean_only': 0.9904068732193733,
 'train_asr_bd_only': 0.6933092948717948,
 'train_epoch_loss_avg_over_batch': 0.1301171605117046,
 'train_ra_bd_only': 0.37880608974358976}
2024-11-11:00:41:34 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.1156846740542137,
 'clean_test_loss_avg_over_batch': 0.40214588285624225,
 'epoch': 54,
 'test_acc': 0.9081,
 'test_asr': 0.9646666666666667,
 'test_ra': 0.034333333333333334,
 'train_acc': 0.9606971153846153,
 'train_acc_clean_only': 0.9904068732193733,
 'train_asr_bd_only': 0.6933092948717948,
 'train_epoch_loss_avg_over_batch': 0.1301171605117046,
 'train_ra_bd_only': 0.37880608974358976}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.050507545471191 s
2024-11-11:00:41:45 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.050507545471191 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.1200671135841436,
 'clean_test_loss_avg_over_batch': 0.4272671489021446,
 'epoch': 55,
 'test_acc': 0.9071,
 'test_asr': 0.966,
 'test_ra': 0.03188888888888889,
 'train_acc': 0.9605969551282051,
 'train_acc_clean_only': 0.9914313057799737,
 'train_asr_bd_only': 0.6829023852475447,
 'train_epoch_loss_avg_over_batch': 0.13048533771473628,
 'train_ra_bd_only': 0.3952695931048306}
2024-11-11:00:41:48 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.1200671135841436,
 'clean_test_loss_avg_over_batch': 0.4272671489021446,
 'epoch': 55,
 'test_acc': 0.9071,
 'test_asr': 0.966,
 'test_ra': 0.03188888888888889,
 'train_acc': 0.9605969551282051,
 'train_acc_clean_only': 0.9914313057799737,
 'train_asr_bd_only': 0.6829023852475447,
 'train_epoch_loss_avg_over_batch': 0.13048533771473628,
 'train_ra_bd_only': 0.3952695931048306}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.059474229812622 s
2024-11-11:00:41:59 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.059474229812622 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.13288349614963985,
 'clean_test_loss_avg_over_batch': 0.41351539424703093,
 'epoch': 56,
 'test_acc': 0.9101,
 'test_asr': 0.9611111111111111,
 'test_ra': 0.037333333333333336,
 'train_acc': 0.9620592948717949,
 'train_acc_clean_only': 0.9907188960605386,
 'train_asr_bd_only': 0.7040080160320641,
 'train_epoch_loss_avg_over_batch': 0.12351889098301912,
 'train_ra_bd_only': 0.3683366733466934}
2024-11-11:00:42:02 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.13288349614963985,
 'clean_test_loss_avg_over_batch': 0.41351539424703093,
 'epoch': 56,
 'test_acc': 0.9101,
 'test_asr': 0.9611111111111111,
 'test_ra': 0.037333333333333336,
 'train_acc': 0.9620592948717949,
 'train_acc_clean_only': 0.9907188960605386,
 'train_asr_bd_only': 0.7040080160320641,
 'train_epoch_loss_avg_over_batch': 0.12351889098301912,
 'train_ra_bd_only': 0.3683366733466934}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.020124912261963 s
2024-11-11:00:42:12 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.020124912261963 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.15190121397690873,
 'clean_test_loss_avg_over_batch': 0.38467734542828574,
 'epoch': 57,
 'test_acc': 0.9117,
 'test_asr': 0.9585555555555556,
 'test_ra': 0.04011111111111111,
 'train_acc': 0.9626001602564103,
 'train_acc_clean_only': 0.9910970642569388,
 'train_asr_bd_only': 0.7060709276698056,
 'train_epoch_loss_avg_over_batch': 0.12199769065930294,
 'train_ra_bd_only': 0.36686034862752953}
2024-11-11:00:42:16 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.15190121397690873,
 'clean_test_loss_avg_over_batch': 0.38467734542828574,
 'epoch': 57,
 'test_acc': 0.9117,
 'test_asr': 0.9585555555555556,
 'test_ra': 0.04011111111111111,
 'train_acc': 0.9626001602564103,
 'train_acc_clean_only': 0.9910970642569388,
 'train_asr_bd_only': 0.7060709276698056,
 'train_epoch_loss_avg_over_batch': 0.12199769065930294,
 'train_ra_bd_only': 0.36686034862752953}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.948842763900757 s
2024-11-11:00:42:26 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.948842763900757 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.19071841859061953,
 'clean_test_loss_avg_over_batch': 0.39416748077809055,
 'epoch': 58,
 'test_acc': 0.9138,
 'test_asr': 0.9483333333333334,
 'test_ra': 0.049555555555555554,
 'train_acc': 0.9647435897435898,
 'train_acc_clean_only': 0.9933008390643431,
 'train_asr_bd_only': 0.707556624574063,
 'train_epoch_loss_avg_over_batch': 0.11542308756078665,
 'train_ra_bd_only': 0.3720184405692524}
2024-11-11:00:42:29 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.19071841859061953,
 'clean_test_loss_avg_over_batch': 0.39416748077809055,
 'epoch': 58,
 'test_acc': 0.9138,
 'test_asr': 0.9483333333333334,
 'test_ra': 0.049555555555555554,
 'train_acc': 0.9647435897435898,
 'train_acc_clean_only': 0.9933008390643431,
 'train_asr_bd_only': 0.707556624574063,
 'train_epoch_loss_avg_over_batch': 0.11542308756078665,
 'train_ra_bd_only': 0.3720184405692524}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.9566330909729 s
2024-11-11:00:42:40 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.9566330909729 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.16668509830996184,
 'clean_test_loss_avg_over_batch': 0.40115488895887064,
 'epoch': 59,
 'test_acc': 0.9134,
 'test_asr': 0.9603333333333334,
 'test_ra': 0.03811111111111111,
 'train_acc': 0.9644431089743589,
 'train_acc_clean_only': 0.9924097404620932,
 'train_asr_bd_only': 0.7128554265118142,
 'train_epoch_loss_avg_over_batch': 0.11403728233984647,
 'train_ra_bd_only': 0.3616339607529035}
2024-11-11:00:42:43 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.16668509830996184,
 'clean_test_loss_avg_over_batch': 0.40115488895887064,
 'epoch': 59,
 'test_acc': 0.9134,
 'test_asr': 0.9603333333333334,
 'test_ra': 0.03811111111111111,
 'train_acc': 0.9644431089743589,
 'train_acc_clean_only': 0.9924097404620932,
 'train_asr_bd_only': 0.7128554265118142,
 'train_epoch_loss_avg_over_batch': 0.11403728233984647,
 'train_ra_bd_only': 0.3616339607529035}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.055955648422241 s
2024-11-11:00:42:53 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.055955648422241 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.13007340212614918,
 'clean_test_loss_avg_over_batch': 0.4122216456298587,
 'epoch': 60,
 'test_acc': 0.9113,
 'test_asr': 0.962,
 'test_ra': 0.03666666666666667,
 'train_acc': 0.9661658653846154,
 'train_acc_clean_only': 0.9930334527810546,
 'train_asr_bd_only': 0.7243037467441394,
 'train_epoch_loss_avg_over_batch': 0.10883950384763572,
 'train_ra_bd_only': 0.35624123422159887}
2024-11-11:00:42:57 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.13007340212614918,
 'clean_test_loss_avg_over_batch': 0.4122216456298587,
 'epoch': 60,
 'test_acc': 0.9113,
 'test_asr': 0.962,
 'test_ra': 0.03666666666666667,
 'train_acc': 0.9661658653846154,
 'train_acc_clean_only': 0.9930334527810546,
 'train_asr_bd_only': 0.7243037467441394,
 'train_epoch_loss_avg_over_batch': 0.10883950384763572,
 'train_ra_bd_only': 0.35624123422159887}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.081904649734497 s
2024-11-11:00:43:07 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.081904649734497 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.215902901713697,
 'clean_test_loss_avg_over_batch': 0.3798971305353732,
 'epoch': 61,
 'test_acc': 0.9153,
 'test_asr': 0.9512222222222222,
 'test_ra': 0.04688888888888889,
 'train_acc': 0.9665665064102564,
 'train_acc_clean_only': 0.9934784544159544,
 'train_asr_bd_only': 0.7243589743589743,
 'train_epoch_loss_avg_over_batch': 0.10702070263811411,
 'train_ra_bd_only': 0.3561698717948718}
2024-11-11:00:43:11 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.215902901713697,
 'clean_test_loss_avg_over_batch': 0.3798971305353732,
 'epoch': 61,
 'test_acc': 0.9153,
 'test_asr': 0.9512222222222222,
 'test_ra': 0.04688888888888889,
 'train_acc': 0.9665665064102564,
 'train_acc_clean_only': 0.9934784544159544,
 'train_asr_bd_only': 0.7243589743589743,
 'train_epoch_loss_avg_over_batch': 0.10702070263811411,
 'train_ra_bd_only': 0.3561698717948718}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.028907775878906 s
2024-11-11:00:43:21 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.028907775878906 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.17585633238646345,
 'clean_test_loss_avg_over_batch': 0.4036584693608405,
 'epoch': 62,
 'test_acc': 0.9188,
 'test_asr': 0.957,
 'test_ra': 0.04111111111111111,
 'train_acc': 0.9666466346153846,
 'train_acc_clean_only': 0.9933449074074074,
 'train_asr_bd_only': 0.7263621794871795,
 'train_epoch_loss_avg_over_batch': 0.10778403547711861,
 'train_ra_bd_only': 0.3551682692307692}
2024-11-11:00:43:25 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.17585633238646345,
 'clean_test_loss_avg_over_batch': 0.4036584693608405,
 'epoch': 62,
 'test_acc': 0.9188,
 'test_asr': 0.957,
 'test_ra': 0.04111111111111111,
 'train_acc': 0.9666466346153846,
 'train_acc_clean_only': 0.9933449074074074,
 'train_asr_bd_only': 0.7263621794871795,
 'train_epoch_loss_avg_over_batch': 0.10778403547711861,
 'train_ra_bd_only': 0.3551682692307692}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.085335969924927 s
2024-11-11:00:43:35 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.085335969924927 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.16003684444405453,
 'clean_test_loss_avg_over_batch': 0.38590577584278735,
 'epoch': 63,
 'test_acc': 0.9174,
 'test_asr': 0.9607777777777777,
 'test_ra': 0.03744444444444445,
 'train_acc': 0.967167467948718,
 'train_acc_clean_only': 0.9931000712250713,
 'train_asr_bd_only': 0.7337740384615384,
 'train_epoch_loss_avg_over_batch': 0.1037782415222281,
 'train_ra_bd_only': 0.3453525641025641}
2024-11-11:00:43:38 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.16003684444405453,
 'clean_test_loss_avg_over_batch': 0.38590577584278735,
 'epoch': 63,
 'test_acc': 0.9174,
 'test_asr': 0.9607777777777777,
 'test_ra': 0.03744444444444445,
 'train_acc': 0.967167467948718,
 'train_acc_clean_only': 0.9931000712250713,
 'train_asr_bd_only': 0.7337740384615384,
 'train_epoch_loss_avg_over_batch': 0.1037782415222281,
 'train_ra_bd_only': 0.3453525641025641}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.983525514602661 s
2024-11-11:00:43:49 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.983525514602661 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.15859474197135004,
 'clean_test_loss_avg_over_batch': 0.40248606174807006,
 'epoch': 64,
 'test_acc': 0.9175,
 'test_asr': 0.9598888888888889,
 'test_ra': 0.03855555555555556,
 'train_acc': 0.966806891025641,
 'train_acc_clean_only': 0.9933000934870676,
 'train_asr_bd_only': 0.7284741690028034,
 'train_epoch_loss_avg_over_batch': 0.10227948671254591,
 'train_ra_bd_only': 0.35122146575891067}
2024-11-11:00:43:52 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.15859474197135004,
 'clean_test_loss_avg_over_batch': 0.40248606174807006,
 'epoch': 64,
 'test_acc': 0.9175,
 'test_asr': 0.9598888888888889,
 'test_ra': 0.03855555555555556,
 'train_acc': 0.966806891025641,
 'train_acc_clean_only': 0.9933000934870676,
 'train_asr_bd_only': 0.7284741690028034,
 'train_epoch_loss_avg_over_batch': 0.10227948671254591,
 'train_ra_bd_only': 0.35122146575891067}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.020851612091064 s
2024-11-11:00:44:03 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.020851612091064 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.19680249124345645,
 'clean_test_loss_avg_over_batch': 0.3960079814814314,
 'epoch': 65,
 'test_acc': 0.9167,
 'test_asr': 0.9575555555555556,
 'test_ra': 0.04055555555555555,
 'train_acc': 0.9706730769230769,
 'train_acc_clean_only': 0.9954371438746439,
 'train_asr_bd_only': 0.7477964743589743,
 'train_epoch_loss_avg_over_batch': 0.0937770691055518,
 'train_ra_bd_only': 0.3339342948717949}
2024-11-11:00:44:06 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.19680249124345645,
 'clean_test_loss_avg_over_batch': 0.3960079814814314,
 'epoch': 65,
 'test_acc': 0.9167,
 'test_asr': 0.9575555555555556,
 'test_ra': 0.04055555555555555,
 'train_acc': 0.9706730769230769,
 'train_acc_clean_only': 0.9954371438746439,
 'train_asr_bd_only': 0.7477964743589743,
 'train_epoch_loss_avg_over_batch': 0.0937770691055518,
 'train_ra_bd_only': 0.3339342948717949}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.936668157577515 s
2024-11-11:00:44:16 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.936668157577515 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.14637673278929483,
 'clean_test_loss_avg_over_batch': 0.39948067861267283,
 'epoch': 66,
 'test_acc': 0.9174,
 'test_asr': 0.9635555555555556,
 'test_ra': 0.035,
 'train_acc': 0.9693108974358975,
 'train_acc_clean_only': 0.9943017406401639,
 'train_asr_bd_only': 0.7444933920704846,
 'train_epoch_loss_avg_over_batch': 0.09607938558627398,
 'train_ra_bd_only': 0.33800560672807367}
2024-11-11:00:44:20 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.14637673278929483,
 'clean_test_loss_avg_over_batch': 0.39948067861267283,
 'epoch': 66,
 'test_acc': 0.9174,
 'test_asr': 0.9635555555555556,
 'test_ra': 0.035,
 'train_acc': 0.9693108974358975,
 'train_acc_clean_only': 0.9943017406401639,
 'train_asr_bd_only': 0.7444933920704846,
 'train_epoch_loss_avg_over_batch': 0.09607938558627398,
 'train_ra_bd_only': 0.33800560672807367}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.037556648254395 s
2024-11-11:00:44:30 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.037556648254395 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.21243397553097193,
 'clean_test_loss_avg_over_batch': 0.40074409808539135,
 'epoch': 67,
 'test_acc': 0.9199,
 'test_asr': 0.9528888888888889,
 'test_ra': 0.04533333333333334,
 'train_acc': 0.971474358974359,
 'train_acc_clean_only': 0.9948580968280467,
 'train_asr_bd_only': 0.7611611611611612,
 'train_epoch_loss_avg_over_batch': 0.09119366126564833,
 'train_ra_bd_only': 0.32232232232232233}
2024-11-11:00:44:34 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.21243397553097193,
 'clean_test_loss_avg_over_batch': 0.40074409808539135,
 'epoch': 67,
 'test_acc': 0.9199,
 'test_asr': 0.9528888888888889,
 'test_ra': 0.04533333333333334,
 'train_acc': 0.971474358974359,
 'train_acc_clean_only': 0.9948580968280467,
 'train_asr_bd_only': 0.7611611611611612,
 'train_epoch_loss_avg_over_batch': 0.09119366126564833,
 'train_ra_bd_only': 0.32232232232232233}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.98464298248291 s
2024-11-11:00:44:44 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.98464298248291 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.16018520277255857,
 'clean_test_loss_avg_over_batch': 0.42108308439013326,
 'epoch': 68,
 'test_acc': 0.9165,
 'test_asr': 0.9613333333333334,
 'test_ra': 0.03722222222222222,
 'train_acc': 0.9731971153846154,
 'train_acc_clean_only': 0.995414477784703,
 'train_asr_bd_only': 0.7734187349879904,
 'train_epoch_loss_avg_over_batch': 0.08505490848269218,
 'train_ra_bd_only': 0.3096477181745396}
2024-11-11:00:44:47 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.16018520277255857,
 'clean_test_loss_avg_over_batch': 0.42108308439013326,
 'epoch': 68,
 'test_acc': 0.9165,
 'test_asr': 0.9613333333333334,
 'test_ra': 0.03722222222222222,
 'train_acc': 0.9731971153846154,
 'train_acc_clean_only': 0.995414477784703,
 'train_asr_bd_only': 0.7734187349879904,
 'train_epoch_loss_avg_over_batch': 0.08505490848269218,
 'train_ra_bd_only': 0.3096477181745396}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.985605955123901 s
2024-11-11:00:44:58 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.985605955123901 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.16879783581260224,
 'clean_test_loss_avg_over_batch': 0.41559005896501905,
 'epoch': 69,
 'test_acc': 0.9175,
 'test_asr': 0.9632222222222222,
 'test_ra': 0.035555555555555556,
 'train_acc': 0.9736378205128206,
 'train_acc_clean_only': 0.995548730275311,
 'train_asr_bd_only': 0.7763078773301263,
 'train_epoch_loss_avg_over_batch': 0.08364670515920107,
 'train_ra_bd_only': 0.3084786530366807}
2024-11-11:00:45:01 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.16879783581260224,
 'clean_test_loss_avg_over_batch': 0.41559005896501905,
 'epoch': 69,
 'test_acc': 0.9175,
 'test_asr': 0.9632222222222222,
 'test_ra': 0.035555555555555556,
 'train_acc': 0.9736378205128206,
 'train_acc_clean_only': 0.995548730275311,
 'train_asr_bd_only': 0.7763078773301263,
 'train_epoch_loss_avg_over_batch': 0.08364670515920107,
 'train_ra_bd_only': 0.3084786530366807}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.10299301147461 s
2024-11-11:00:45:12 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.10299301147461 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.16380692365198907,
 'clean_test_loss_avg_over_batch': 0.42803320684764956,
 'epoch': 70,
 'test_acc': 0.9135,
 'test_asr': 0.9606666666666667,
 'test_ra': 0.03777777777777778,
 'train_acc': 0.9746594551282052,
 'train_acc_clean_only': 0.9961047922184878,
 'train_asr_bd_only': 0.7816943721209694,
 'train_epoch_loss_avg_over_batch': 0.08076232557590955,
 'train_ra_bd_only': 0.30783096334868815}
2024-11-11:00:45:15 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.16380692365198907,
 'clean_test_loss_avg_over_batch': 0.42803320684764956,
 'epoch': 70,
 'test_acc': 0.9135,
 'test_asr': 0.9606666666666667,
 'test_ra': 0.03777777777777778,
 'train_acc': 0.9746594551282052,
 'train_acc_clean_only': 0.9961047922184878,
 'train_asr_bd_only': 0.7816943721209694,
 'train_epoch_loss_avg_over_batch': 0.08076232557590955,
 'train_ra_bd_only': 0.30783096334868815}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.038003921508789 s
2024-11-11:00:45:26 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.038003921508789 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.15228148198253671,
 'clean_test_loss_avg_over_batch': 0.4370567466639265,
 'epoch': 71,
 'test_acc': 0.9126,
 'test_asr': 0.9646666666666667,
 'test_ra': 0.033666666666666664,
 'train_acc': 0.9751201923076923,
 'train_acc_clean_only': 0.996171567209028,
 'train_asr_bd_only': 0.7856999799719607,
 'train_epoch_loss_avg_over_batch': 0.07835509588894171,
 'train_ra_bd_only': 0.2998197476467054}
2024-11-11:00:45:29 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.15228148198253671,
 'clean_test_loss_avg_over_batch': 0.4370567466639265,
 'epoch': 71,
 'test_acc': 0.9126,
 'test_asr': 0.9646666666666667,
 'test_ra': 0.033666666666666664,
 'train_acc': 0.9751201923076923,
 'train_acc_clean_only': 0.996171567209028,
 'train_asr_bd_only': 0.7856999799719607,
 'train_epoch_loss_avg_over_batch': 0.07835509588894171,
 'train_ra_bd_only': 0.2998197476467054}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.921969175338745 s
2024-11-11:00:45:39 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.921969175338745 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.19632272655800195,
 'clean_test_loss_avg_over_batch': 0.4233872892358635,
 'epoch': 72,
 'test_acc': 0.9168,
 'test_asr': 0.9544444444444444,
 'test_ra': 0.04411111111111111,
 'train_acc': 0.9760416666666667,
 'train_acc_clean_only': 0.9960600124654972,
 'train_asr_bd_only': 0.7960368294635709,
 'train_epoch_loss_avg_over_batch': 0.07624446412978264,
 'train_ra_bd_only': 0.2908326661329063}
2024-11-11:00:45:43 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.19632272655800195,
 'clean_test_loss_avg_over_batch': 0.4233872892358635,
 'epoch': 72,
 'test_acc': 0.9168,
 'test_asr': 0.9544444444444444,
 'test_ra': 0.04411111111111111,
 'train_acc': 0.9760416666666667,
 'train_acc_clean_only': 0.9960600124654972,
 'train_asr_bd_only': 0.7960368294635709,
 'train_epoch_loss_avg_over_batch': 0.07624446412978264,
 'train_ra_bd_only': 0.2908326661329063}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.054264068603516 s
2024-11-11:00:45:53 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.054264068603516 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.19777125608123525,
 'clean_test_loss_avg_over_batch': 0.45988590713543226,
 'epoch': 73,
 'test_acc': 0.9112,
 'test_asr': 0.959,
 'test_ra': 0.03966666666666667,
 'train_acc': 0.9769030448717949,
 'train_acc_clean_only': 0.9960821850722347,
 'train_asr_bd_only': 0.8044826896137682,
 'train_epoch_loss_avg_over_batch': 0.07245711096538565,
 'train_ra_bd_only': 0.2809685811486892}
2024-11-11:00:45:57 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.19777125608123525,
 'clean_test_loss_avg_over_batch': 0.45988590713543226,
 'epoch': 73,
 'test_acc': 0.9112,
 'test_asr': 0.959,
 'test_ra': 0.03966666666666667,
 'train_acc': 0.9769030448717949,
 'train_acc_clean_only': 0.9960821850722347,
 'train_asr_bd_only': 0.8044826896137682,
 'train_epoch_loss_avg_over_batch': 0.07245711096538565,
 'train_ra_bd_only': 0.2809685811486892}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.949913501739502 s
2024-11-11:00:46:07 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.949913501739502 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.21568585344603364,
 'clean_test_loss_avg_over_batch': 0.41722115647943714,
 'epoch': 74,
 'test_acc': 0.9176,
 'test_asr': 0.9523333333333334,
 'test_ra': 0.04611111111111111,
 'train_acc': 0.9771834935897435,
 'train_acc_clean_only': 0.9956591425136904,
 'train_asr_bd_only': 0.8111244497799119,
 'train_epoch_loss_avg_over_batch': 0.07117641497021303,
 'train_ra_bd_only': 0.2773109243697479}
2024-11-11:00:46:11 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.21568585344603364,
 'clean_test_loss_avg_over_batch': 0.41722115647943714,
 'epoch': 74,
 'test_acc': 0.9176,
 'test_asr': 0.9523333333333334,
 'test_ra': 0.04611111111111111,
 'train_acc': 0.9771834935897435,
 'train_acc_clean_only': 0.9956591425136904,
 'train_asr_bd_only': 0.8111244497799119,
 'train_epoch_loss_avg_over_batch': 0.07117641497021303,
 'train_ra_bd_only': 0.2773109243697479}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.06570315361023 s
2024-11-11:00:46:21 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.06570315361023 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.22251302045835575,
 'clean_test_loss_avg_over_batch': 0.4201499317077142,
 'epoch': 75,
 'test_acc': 0.9154,
 'test_asr': 0.9551111111111111,
 'test_ra': 0.043111111111111114,
 'train_acc': 0.9792668269230769,
 'train_acc_clean_only': 0.9969061609686609,
 'train_asr_bd_only': 0.8205128205128205,
 'train_epoch_loss_avg_over_batch': 0.06654064393817233,
 'train_ra_bd_only': 0.2686298076923077}
2024-11-11:00:46:25 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.22251302045835575,
 'clean_test_loss_avg_over_batch': 0.4201499317077142,
 'epoch': 75,
 'test_acc': 0.9154,
 'test_asr': 0.9551111111111111,
 'test_ra': 0.043111111111111114,
 'train_acc': 0.9792668269230769,
 'train_acc_clean_only': 0.9969061609686609,
 'train_asr_bd_only': 0.8205128205128205,
 'train_epoch_loss_avg_over_batch': 0.06654064393817233,
 'train_ra_bd_only': 0.2686298076923077}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.979280471801758 s
2024-11-11:00:46:35 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.979280471801758 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.15969255912891575,
 'clean_test_loss_avg_over_batch': 0.42783422221111345,
 'epoch': 76,
 'test_acc': 0.9113,
 'test_asr': 0.9653333333333334,
 'test_ra': 0.03344444444444444,
 'train_acc': 0.9794871794871794,
 'train_acc_clean_only': 0.9969951923076923,
 'train_asr_bd_only': 0.8219150641025641,
 'train_epoch_loss_avg_over_batch': 0.06634907017533596,
 'train_ra_bd_only': 0.26842948717948717}
2024-11-11:00:46:38 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.15969255912891575,
 'clean_test_loss_avg_over_batch': 0.42783422221111345,
 'epoch': 76,
 'test_acc': 0.9113,
 'test_asr': 0.9653333333333334,
 'test_ra': 0.03344444444444444,
 'train_acc': 0.9794871794871794,
 'train_acc_clean_only': 0.9969951923076923,
 'train_asr_bd_only': 0.8219150641025641,
 'train_epoch_loss_avg_over_batch': 0.06634907017533596,
 'train_ra_bd_only': 0.26842948717948717}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.876319646835327 s
2024-11-11:00:46:49 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.876319646835327 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.2308790962356077,
 'clean_test_loss_avg_over_batch': 0.43408663618036464,
 'epoch': 77,
 'test_acc': 0.916,
 'test_asr': 0.9506666666666667,
 'test_ra': 0.04788888888888889,
 'train_acc': 0.9798677884615384,
 'train_acc_clean_only': 0.9965722171522693,
 'train_asr_bd_only': 0.8295613859403165,
 'train_epoch_loss_avg_over_batch': 0.06250362310271997,
 'train_ra_bd_only': 0.2611656318846385}
2024-11-11:00:46:52 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.2308790962356077,
 'clean_test_loss_avg_over_batch': 0.43408663618036464,
 'epoch': 77,
 'test_acc': 0.916,
 'test_asr': 0.9506666666666667,
 'test_ra': 0.04788888888888889,
 'train_acc': 0.9798677884615384,
 'train_acc_clean_only': 0.9965722171522693,
 'train_asr_bd_only': 0.8295613859403165,
 'train_epoch_loss_avg_over_batch': 0.06250362310271997,
 'train_ra_bd_only': 0.2611656318846385}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.0012366771698 s
2024-11-11:00:47:02 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.0012366771698 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.20039541463197116,
 'clean_test_loss_avg_over_batch': 0.438522941798349,
 'epoch': 78,
 'test_acc': 0.9157,
 'test_asr': 0.9581111111111111,
 'test_ra': 0.04044444444444444,
 'train_acc': 0.9799879807692308,
 'train_acc_clean_only': 0.9964827923957081,
 'train_asr_bd_only': 0.8317326930772309,
 'train_epoch_loss_avg_over_batch': 0.06199378758573379,
 'train_ra_bd_only': 0.2579031612645058}
2024-11-11:00:47:06 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.20039541463197116,
 'clean_test_loss_avg_over_batch': 0.438522941798349,
 'epoch': 78,
 'test_acc': 0.9157,
 'test_asr': 0.9581111111111111,
 'test_ra': 0.04044444444444444,
 'train_acc': 0.9799879807692308,
 'train_acc_clean_only': 0.9964827923957081,
 'train_asr_bd_only': 0.8317326930772309,
 'train_epoch_loss_avg_over_batch': 0.06199378758573379,
 'train_ra_bd_only': 0.2579031612645058}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.99267053604126 s
2024-11-11:00:47:16 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.99267053604126 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.288577996036956,
 'clean_test_loss_avg_over_batch': 0.43372555850427363,
 'epoch': 79,
 'test_acc': 0.9164,
 'test_asr': 0.9363333333333334,
 'test_ra': 0.06177777777777778,
 'train_acc': 0.9818709935897436,
 'train_acc_clean_only': 0.9970846129879378,
 'train_asr_bd_only': 0.8447653429602888,
 'train_epoch_loss_avg_over_batch': 0.05711680022426523,
 'train_ra_bd_only': 0.24829522663457682}
2024-11-11:00:47:20 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.288577996036956,
 'clean_test_loss_avg_over_batch': 0.43372555850427363,
 'epoch': 79,
 'test_acc': 0.9164,
 'test_asr': 0.9363333333333334,
 'test_ra': 0.06177777777777778,
 'train_acc': 0.9818709935897436,
 'train_acc_clean_only': 0.9970846129879378,
 'train_asr_bd_only': 0.8447653429602888,
 'train_epoch_loss_avg_over_batch': 0.05711680022426523,
 'train_ra_bd_only': 0.24829522663457682}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.075764894485474 s
2024-11-11:00:47:30 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.075764894485474 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.19829908384561118,
 'clean_test_loss_avg_over_batch': 0.43414540569993515,
 'epoch': 80,
 'test_acc': 0.9145,
 'test_asr': 0.9572222222222222,
 'test_ra': 0.041444444444444443,
 'train_acc': 0.9813100961538461,
 'train_acc_clean_only': 0.9967724702844678,
 'train_asr_bd_only': 0.84221065278334,
 'train_epoch_loss_avg_over_batch': 0.056923782610549374,
 'train_ra_bd_only': 0.24769723668402083}
2024-11-11:00:47:34 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.19829908384561118,
 'clean_test_loss_avg_over_batch': 0.43414540569993515,
 'epoch': 80,
 'test_acc': 0.9145,
 'test_asr': 0.9572222222222222,
 'test_ra': 0.041444444444444443,
 'train_acc': 0.9813100961538461,
 'train_acc_clean_only': 0.9967724702844678,
 'train_asr_bd_only': 0.84221065278334,
 'train_epoch_loss_avg_over_batch': 0.056923782610549374,
 'train_ra_bd_only': 0.24769723668402083}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.938230752944946 s
2024-11-11:00:47:44 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.938230752944946 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.23184711467737043,
 'clean_test_loss_avg_over_batch': 0.45665672185677514,
 'epoch': 81,
 'test_acc': 0.9128,
 'test_asr': 0.9544444444444444,
 'test_ra': 0.04388888888888889,
 'train_acc': 0.9830328525641026,
 'train_acc_clean_only': 0.9971288032228628,
 'train_asr_bd_only': 0.8561410538970147,
 'train_epoch_loss_avg_over_batch': 0.051937557341387636,
 'train_ra_bd_only': 0.23662592666800242}
2024-11-11:00:47:47 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.23184711467737043,
 'clean_test_loss_avg_over_batch': 0.45665672185677514,
 'epoch': 81,
 'test_acc': 0.9128,
 'test_asr': 0.9544444444444444,
 'test_ra': 0.04388888888888889,
 'train_acc': 0.9830328525641026,
 'train_acc_clean_only': 0.9971288032228628,
 'train_asr_bd_only': 0.8561410538970147,
 'train_epoch_loss_avg_over_batch': 0.051937557341387636,
 'train_ra_bd_only': 0.23662592666800242}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.884865760803223 s
2024-11-11:00:47:58 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.884865760803223 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.23180947772843738,
 'clean_test_loss_avg_over_batch': 0.43525604073759877,
 'epoch': 82,
 'test_acc': 0.9147,
 'test_asr': 0.9548888888888889,
 'test_ra': 0.043444444444444445,
 'train_acc': 0.9831730769230769,
 'train_acc_clean_only': 0.9973513176638177,
 'train_asr_bd_only': 0.8555689102564102,
 'train_epoch_loss_avg_over_batch': 0.05206015832387866,
 'train_ra_bd_only': 0.23737980769230768}
2024-11-11:00:48:01 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.23180947772843738,
 'clean_test_loss_avg_over_batch': 0.43525604073759877,
 'epoch': 82,
 'test_acc': 0.9147,
 'test_asr': 0.9548888888888889,
 'test_ra': 0.043444444444444445,
 'train_acc': 0.9831730769230769,
 'train_acc_clean_only': 0.9973513176638177,
 'train_asr_bd_only': 0.8555689102564102,
 'train_epoch_loss_avg_over_batch': 0.05206015832387866,
 'train_ra_bd_only': 0.23737980769230768}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.9644775390625 s
2024-11-11:00:48:11 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.9644775390625 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.242833976646964,
 'clean_test_loss_avg_over_batch': 0.44368971874819524,
 'epoch': 83,
 'test_acc': 0.913,
 'test_asr': 0.9541111111111111,
 'test_ra': 0.044444444444444446,
 'train_acc': 0.9843549679487179,
 'train_acc_clean_only': 0.997151187376199,
 'train_asr_bd_only': 0.8691120465023051,
 'train_epoch_loss_avg_over_batch': 0.04882497172563886,
 'train_ra_bd_only': 0.22309079975947083}
2024-11-11:00:48:15 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.242833976646964,
 'clean_test_loss_avg_over_batch': 0.44368971874819524,
 'epoch': 83,
 'test_acc': 0.913,
 'test_asr': 0.9541111111111111,
 'test_ra': 0.044444444444444446,
 'train_acc': 0.9843549679487179,
 'train_acc_clean_only': 0.997151187376199,
 'train_asr_bd_only': 0.8691120465023051,
 'train_epoch_loss_avg_over_batch': 0.04882497172563886,
 'train_ra_bd_only': 0.22309079975947083}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.006331205368042 s
2024-11-11:00:48:25 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.006331205368042 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.21286740767913806,
 'clean_test_loss_avg_over_batch': 0.4410801482728765,
 'epoch': 84,
 'test_acc': 0.9141,
 'test_asr': 0.9615555555555556,
 'test_ra': 0.037333333333333336,
 'train_acc': 0.9850761217948718,
 'train_acc_clean_only': 0.9979522336234335,
 'train_asr_bd_only': 0.8692169036651312,
 'train_epoch_loss_avg_over_batch': 0.04783752223906609,
 'train_ra_bd_only': 0.22291207690767073}
2024-11-11:00:48:29 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.21286740767913806,
 'clean_test_loss_avg_over_batch': 0.4410801482728765,
 'epoch': 84,
 'test_acc': 0.9141,
 'test_asr': 0.9615555555555556,
 'test_ra': 0.037333333333333336,
 'train_acc': 0.9850761217948718,
 'train_acc_clean_only': 0.9979522336234335,
 'train_asr_bd_only': 0.8692169036651312,
 'train_epoch_loss_avg_over_batch': 0.04783752223906609,
 'train_ra_bd_only': 0.22291207690767073}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.037192583084106 s
2024-11-11:00:48:39 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.037192583084106 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.21382077911894926,
 'clean_test_loss_avg_over_batch': 0.4575257112708273,
 'epoch': 85,
 'test_acc': 0.9121,
 'test_asr': 0.9583333333333334,
 'test_ra': 0.04055555555555555,
 'train_acc': 0.9856971153846154,
 'train_acc_clean_only': 0.9979076703913101,
 'train_asr_bd_only': 0.8758510212254705,
 'train_epoch_loss_avg_over_batch': 0.045634453340123095,
 'train_ra_bd_only': 0.21505806968362035}
2024-11-11:00:48:42 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.21382077911894926,
 'clean_test_loss_avg_over_batch': 0.4575257112708273,
 'epoch': 85,
 'test_acc': 0.9121,
 'test_asr': 0.9583333333333334,
 'test_ra': 0.04055555555555555,
 'train_acc': 0.9856971153846154,
 'train_acc_clean_only': 0.9979076703913101,
 'train_asr_bd_only': 0.8758510212254705,
 'train_epoch_loss_avg_over_batch': 0.045634453340123095,
 'train_ra_bd_only': 0.21505806968362035}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.997994661331177 s
2024-11-11:00:48:53 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.997994661331177 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.22500210806307658,
 'clean_test_loss_avg_over_batch': 0.445404589176178,
 'epoch': 86,
 'test_acc': 0.9139,
 'test_asr': 0.9568888888888889,
 'test_ra': 0.04188888888888889,
 'train_acc': 0.9849358974358975,
 'train_acc_clean_only': 0.9971953879713307,
 'train_asr_bd_only': 0.8746495794953945,
 'train_epoch_loss_avg_over_batch': 0.04597564644347399,
 'train_ra_bd_only': 0.21766119343211854}
2024-11-11:00:48:56 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.22500210806307658,
 'clean_test_loss_avg_over_batch': 0.445404589176178,
 'epoch': 86,
 'test_acc': 0.9139,
 'test_asr': 0.9568888888888889,
 'test_ra': 0.04188888888888889,
 'train_acc': 0.9849358974358975,
 'train_acc_clean_only': 0.9971953879713307,
 'train_asr_bd_only': 0.8746495794953945,
 'train_epoch_loss_avg_over_batch': 0.04597564644347399,
 'train_ra_bd_only': 0.21766119343211854}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.994700193405151 s
2024-11-11:00:49:07 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.994700193405151 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.220772137078391,
 'clean_test_loss_avg_over_batch': 0.45520217490347126,
 'epoch': 87,
 'test_acc': 0.9103,
 'test_asr': 0.9567777777777777,
 'test_ra': 0.04188888888888889,
 'train_acc': 0.985957532051282,
 'train_acc_clean_only': 0.9977295492487479,
 'train_asr_bd_only': 0.8800800800800801,
 'train_epoch_loss_avg_over_batch': 0.04467566514459367,
 'train_ra_bd_only': 0.21421421421421422}
2024-11-11:00:49:10 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.220772137078391,
 'clean_test_loss_avg_over_batch': 0.45520217490347126,
 'epoch': 87,
 'test_acc': 0.9103,
 'test_asr': 0.9567777777777777,
 'test_ra': 0.04188888888888889,
 'train_acc': 0.985957532051282,
 'train_acc_clean_only': 0.9977295492487479,
 'train_asr_bd_only': 0.8800800800800801,
 'train_epoch_loss_avg_over_batch': 0.04467566514459367,
 'train_ra_bd_only': 0.21421421421421422}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.957765102386475 s
2024-11-11:00:49:20 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.957765102386475 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.27809509944537997,
 'clean_test_loss_avg_over_batch': 0.4441569298505783,
 'epoch': 88,
 'test_acc': 0.9152,
 'test_asr': 0.9453333333333334,
 'test_ra': 0.05311111111111111,
 'train_acc': 0.987099358974359,
 'train_acc_clean_only': 0.9981082103670071,
 'train_asr_bd_only': 0.8879534976949288,
 'train_epoch_loss_avg_over_batch': 0.041917261180396265,
 'train_ra_bd_only': 0.2064541992383243}
2024-11-11:00:49:24 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.27809509944537997,
 'clean_test_loss_avg_over_batch': 0.4441569298505783,
 'epoch': 88,
 'test_acc': 0.9152,
 'test_asr': 0.9453333333333334,
 'test_ra': 0.05311111111111111,
 'train_acc': 0.987099358974359,
 'train_acc_clean_only': 0.9981082103670071,
 'train_asr_bd_only': 0.8879534976949288,
 'train_epoch_loss_avg_over_batch': 0.041917261180396265,
 'train_ra_bd_only': 0.2064541992383243}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.99426007270813 s
2024-11-11:00:49:34 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.99426007270813 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.251360762549538,
 'clean_test_loss_avg_over_batch': 0.446204548583755,
 'epoch': 89,
 'test_acc': 0.9134,
 'test_asr': 0.9504444444444444,
 'test_ra': 0.04833333333333333,
 'train_acc': 0.9871794871794872,
 'train_acc_clean_only': 0.9979078566659247,
 'train_asr_bd_only': 0.8905811623246493,
 'train_epoch_loss_avg_over_batch': 0.04047672253890106,
 'train_ra_bd_only': 0.20340681362725452}
2024-11-11:00:49:38 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.251360762549538,
 'clean_test_loss_avg_over_batch': 0.446204548583755,
 'epoch': 89,
 'test_acc': 0.9134,
 'test_asr': 0.9504444444444444,
 'test_ra': 0.04833333333333333,
 'train_acc': 0.9871794871794872,
 'train_acc_clean_only': 0.9979078566659247,
 'train_asr_bd_only': 0.8905811623246493,
 'train_epoch_loss_avg_over_batch': 0.04047672253890106,
 'train_ra_bd_only': 0.20340681362725452}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.10960865020752 s
2024-11-11:00:49:48 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.10960865020752 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.24266419709253478,
 'clean_test_loss_avg_over_batch': 0.4492355308766606,
 'epoch': 90,
 'test_acc': 0.9115,
 'test_asr': 0.9558888888888889,
 'test_ra': 0.043111111111111114,
 'train_acc': 0.9885416666666667,
 'train_acc_clean_only': 0.9984643461230304,
 'train_asr_bd_only': 0.8991579791499599,
 'train_epoch_loss_avg_over_batch': 0.03816425490240829,
 'train_ra_bd_only': 0.1970729751403368}
2024-11-11:00:49:51 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.24266419709253478,
 'clean_test_loss_avg_over_batch': 0.4492355308766606,
 'epoch': 90,
 'test_acc': 0.9115,
 'test_asr': 0.9558888888888889,
 'test_ra': 0.043111111111111114,
 'train_acc': 0.9885416666666667,
 'train_acc_clean_only': 0.9984643461230304,
 'train_asr_bd_only': 0.8991579791499599,
 'train_epoch_loss_avg_over_batch': 0.03816425490240829,
 'train_ra_bd_only': 0.1970729751403368}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.123593807220459 s
2024-11-11:00:50:02 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.123593807220459 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.2802908223804454,
 'clean_test_loss_avg_over_batch': 0.4465707084989246,
 'epoch': 91,
 'test_acc': 0.9148,
 'test_asr': 0.9446666666666667,
 'test_ra': 0.05377777777777778,
 'train_acc': 0.9881410256410257,
 'train_acc_clean_only': 0.9980188322240278,
 'train_asr_bd_only': 0.8993396037622573,
 'train_epoch_loss_avg_over_batch': 0.03772831543897971,
 'train_ra_bd_only': 0.19651791074644787}
2024-11-11:00:50:05 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.2802908223804454,
 'clean_test_loss_avg_over_batch': 0.4465707084989246,
 'epoch': 91,
 'test_acc': 0.9148,
 'test_asr': 0.9446666666666667,
 'test_ra': 0.05377777777777778,
 'train_acc': 0.9881410256410257,
 'train_acc_clean_only': 0.9980188322240278,
 'train_asr_bd_only': 0.8993396037622573,
 'train_epoch_loss_avg_over_batch': 0.03772831543897971,
 'train_ra_bd_only': 0.19651791074644787}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.052467346191406 s
2024-11-11:00:50:16 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.052467346191406 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.23558815964825555,
 'clean_test_loss_avg_over_batch': 0.4492050601711756,
 'epoch': 92,
 'test_acc': 0.9143,
 'test_asr': 0.955,
 'test_ra': 0.04388888888888889,
 'train_acc': 0.9883012820512821,
 'train_acc_clean_only': 0.9983753227098727,
 'train_asr_bd_only': 0.8975541299117883,
 'train_epoch_loss_avg_over_batch': 0.036808117799078804,
 'train_ra_bd_only': 0.19727345629510826}
2024-11-11:00:50:19 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.23558815964825555,
 'clean_test_loss_avg_over_batch': 0.4492050601711756,
 'epoch': 92,
 'test_acc': 0.9143,
 'test_asr': 0.955,
 'test_ra': 0.04388888888888889,
 'train_acc': 0.9883012820512821,
 'train_acc_clean_only': 0.9983753227098727,
 'train_asr_bd_only': 0.8975541299117883,
 'train_epoch_loss_avg_over_batch': 0.036808117799078804,
 'train_ra_bd_only': 0.19727345629510826}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.007051467895508 s
2024-11-11:00:50:30 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.007051467895508 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.2505864499950073,
 'clean_test_loss_avg_over_batch': 0.4481032379443132,
 'epoch': 93,
 'test_acc': 0.9134,
 'test_asr': 0.9503333333333334,
 'test_ra': 0.04844444444444444,
 'train_acc': 0.9881610576923077,
 'train_acc_clean_only': 0.9982194128513877,
 'train_asr_bd_only': 0.8976157082748948,
 'train_epoch_loss_avg_over_batch': 0.03832093515696052,
 'train_ra_bd_only': 0.1985574033259868}
2024-11-11:00:50:33 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.2505864499950073,
 'clean_test_loss_avg_over_batch': 0.4481032379443132,
 'epoch': 93,
 'test_acc': 0.9134,
 'test_asr': 0.9503333333333334,
 'test_ra': 0.04844444444444444,
 'train_acc': 0.9881610576923077,
 'train_acc_clean_only': 0.9982194128513877,
 'train_asr_bd_only': 0.8976157082748948,
 'train_epoch_loss_avg_over_batch': 0.03832093515696052,
 'train_ra_bd_only': 0.1985574033259868}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.056950569152832 s
2024-11-11:00:50:43 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.056950569152832 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.2782734109377357,
 'clean_test_loss_avg_over_batch': 0.4417150096048283,
 'epoch': 94,
 'test_acc': 0.9151,
 'test_asr': 0.9462222222222222,
 'test_ra': 0.052333333333333336,
 'train_acc': 0.9886017628205128,
 'train_acc_clean_only': 0.9982415919157744,
 'train_asr_bd_only': 0.901862607650711,
 'train_epoch_loss_avg_over_batch': 0.03636768914472598,
 'train_ra_bd_only': 0.19266973763268577}
2024-11-11:00:50:47 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.2782734109377357,
 'clean_test_loss_avg_over_batch': 0.4417150096048283,
 'epoch': 94,
 'test_acc': 0.9151,
 'test_asr': 0.9462222222222222,
 'test_ra': 0.052333333333333336,
 'train_acc': 0.9886017628205128,
 'train_acc_clean_only': 0.9982415919157744,
 'train_asr_bd_only': 0.901862607650711,
 'train_epoch_loss_avg_over_batch': 0.03636768914472598,
 'train_ra_bd_only': 0.19266973763268577}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.962764024734497 s
2024-11-11:00:50:57 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.962764024734497 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.2745144554007221,
 'clean_test_loss_avg_over_batch': 0.4434709164160716,
 'epoch': 95,
 'test_acc': 0.9145,
 'test_asr': 0.9453333333333334,
 'test_ra': 0.05311111111111111,
 'train_acc': 0.9884214743589743,
 'train_acc_clean_only': 0.9982861085761346,
 'train_asr_bd_only': 0.8996595233326657,
 'train_epoch_loss_avg_over_batch': 0.03729725475423038,
 'train_ra_bd_only': 0.19587422391347886}
2024-11-11:00:51:01 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.2745144554007221,
 'clean_test_loss_avg_over_batch': 0.4434709164160716,
 'epoch': 95,
 'test_acc': 0.9145,
 'test_asr': 0.9453333333333334,
 'test_ra': 0.05311111111111111,
 'train_acc': 0.9884214743589743,
 'train_acc_clean_only': 0.9982861085761346,
 'train_asr_bd_only': 0.8996595233326657,
 'train_epoch_loss_avg_over_batch': 0.03729725475423038,
 'train_ra_bd_only': 0.19587422391347886}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.016533613204956 s
2024-11-11:00:51:11 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.016533613204956 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.26762133700327134,
 'clean_test_loss_avg_over_batch': 0.4449839126082915,
 'epoch': 96,
 'test_acc': 0.9139,
 'test_asr': 0.9468888888888889,
 'test_ra': 0.051111111111111114,
 'train_acc': 0.9893629807692308,
 'train_acc_clean_only': 0.9986868169778985,
 'train_asr_bd_only': 0.9054297735924665,
 'train_epoch_loss_avg_over_batch': 0.03507786349345667,
 'train_ra_bd_only': 0.18873973151673012}
2024-11-11:00:51:14 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.26762133700327134,
 'clean_test_loss_avg_over_batch': 0.4449839126082915,
 'epoch': 96,
 'test_acc': 0.9139,
 'test_asr': 0.9468888888888889,
 'test_ra': 0.051111111111111114,
 'train_acc': 0.9893629807692308,
 'train_acc_clean_only': 0.9986868169778985,
 'train_asr_bd_only': 0.9054297735924665,
 'train_epoch_loss_avg_over_batch': 0.03507786349345667,
 'train_ra_bd_only': 0.18873973151673012}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.206527709960938 s
2024-11-11:00:51:25 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.206527709960938 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.27218355479794487,
 'clean_test_loss_avg_over_batch': 0.44255523930622054,
 'epoch': 97,
 'test_acc': 0.9144,
 'test_asr': 0.9458888888888889,
 'test_ra': 0.052444444444444446,
 'train_acc': 0.9894831730769231,
 'train_acc_clean_only': 0.9988203085004563,
 'train_asr_bd_only': 0.9054676547166033,
 'train_epoch_loss_avg_over_batch': 0.035739885842523134,
 'train_ra_bd_only': 0.1910674944922892}
2024-11-11:00:51:28 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.27218355479794487,
 'clean_test_loss_avg_over_batch': 0.44255523930622054,
 'epoch': 97,
 'test_acc': 0.9144,
 'test_asr': 0.9458888888888889,
 'test_ra': 0.052444444444444446,
 'train_acc': 0.9894831730769231,
 'train_acc_clean_only': 0.9988203085004563,
 'train_asr_bd_only': 0.9054676547166033,
 'train_epoch_loss_avg_over_batch': 0.035739885842523134,
 'train_ra_bd_only': 0.1910674944922892}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 9.937732458114624 s
2024-11-11:00:51:39 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 9.937732458114624 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.26751596176288495,
 'clean_test_loss_avg_over_batch': 0.44639923168888573,
 'epoch': 98,
 'test_acc': 0.9139,
 'test_asr': 0.9485555555555556,
 'test_ra': 0.05,
 'train_acc': 0.9899038461538462,
 'train_acc_clean_only': 0.9983751057294217,
 'train_asr_bd_only': 0.9136964357228674,
 'train_epoch_loss_avg_over_batch': 0.03384241685390663,
 'train_ra_bd_only': 0.18261914297156587}
2024-11-11:00:51:42 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.26751596176288495,
 'clean_test_loss_avg_over_batch': 0.44639923168888573,
 'epoch': 98,
 'test_acc': 0.9139,
 'test_asr': 0.9485555555555556,
 'test_ra': 0.05,
 'train_acc': 0.9899038461538462,
 'train_acc_clean_only': 0.9983751057294217,
 'train_asr_bd_only': 0.9136964357228674,
 'train_epoch_loss_avg_over_batch': 0.03384241685390663,
 'train_ra_bd_only': 0.18261914297156587}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:one epoch training part done, use time = 10.06657361984253 s
2024-11-11:00:51:52 [INFO    ] [trainer_cls.py:1800] one epoch training part done, use time = 10.06657361984253 s
INFO:root:{'batch': 390,
 'bd_test_loss_avg_over_batch': 0.27890731000774344,
 'clean_test_loss_avg_over_batch': 0.4411826394969904,
 'epoch': 99,
 'test_acc': 0.9141,
 'test_asr': 0.9447777777777778,
 'test_ra': 0.05355555555555556,
 'train_acc': 0.9889022435897435,
 'train_acc_clean_only': 0.998397542899112,
 'train_asr_bd_only': 0.9033874523952696,
 'train_epoch_loss_avg_over_batch': 0.03538360295053094,
 'train_ra_bd_only': 0.19182200841852073}
2024-11-11:00:51:56 [INFO    ] [trainer_cls.py:65] {'batch': 390,
 'bd_test_loss_avg_over_batch': 0.27890731000774344,
 'clean_test_loss_avg_over_batch': 0.4411826394969904,
 'epoch': 99,
 'test_acc': 0.9141,
 'test_asr': 0.9447777777777778,
 'test_ra': 0.05355555555555556,
 'train_acc': 0.9889022435897435,
 'train_acc_clean_only': 0.998397542899112,
 'train_asr_bd_only': 0.9033874523952696,
 'train_epoch_loss_avg_over_batch': 0.03538360295053094,
 'train_ra_bd_only': 0.19182200841852073}
DEBUG:root:return df with np.nan and None converted by str()
DEBUG:root:return df with np.nan and None converted by str()
INFO:root:saving...
2024-11-11:00:51:56 [INFO    ] [save_load_attack.py:141] saving...
DEBUG:root:location : ./record/badnet_attack_preactresnet_cifar10/attack_result.pt
INFO:root:Saved, folder path: ./record/badnet_attack_preactresnet_cifar10
2024-11-11:00:51:57 [INFO    ] [save_load_attack.py:149] Saved, folder path: ./record/badnet_attack_preactresnet_cifar10
