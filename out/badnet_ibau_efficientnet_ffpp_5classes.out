/home/fmg/yuran/miniconda3/envs/backdoorbenchv2/lib/python3.8/site-packages/torchvision/io/image.py:13: UserWarning: Failed to load image Python extension: libc10_hip.so: cannot open shared object file: No such file or directory
  warn(f"Failed to load image Python extension: {e}")
WARNING:root:save_path MUST have 'record' in its abspath, and data_path in attack result MUST have 'data' in its path
WARNING:root:For ImageNet, this script need large size of RAM to load the whole dataset.
WARNING:root:save_path MUST have 'record' in its abspath, and data_path in attack result MUST have 'data' in its path
WARNING:root:For ImageNet, this script need large size of RAM to load the whole dataset.
INFO:root:{'K': 5,
 'adam_betas': [0.9, 0.999],
 'amp': True,
 'batch_size': 256,
 'checkpoint_load': None,
 'checkpoint_save': 'record/badnet_attack_efficientnet_ffpp_5classes/defense/i-bau/checkpoint/',
 'client_optimizer': 'adam',
 'dataset': 'ffpp_5classes',
 'dataset_path': './data/ffpp_5classes',
 'device': 'cuda',
 'epochs': 100,
 'frequency_save': 0,
 'img_size': (64, 64, 3),
 'index': None,
 'input_channel': 3,
 'input_height': 64,
 'input_width': 64,
 'log': 'record/badnet_attack_efficientnet_ffpp_5classes/defense/i-bau/log/',
 'lr': 0.0001,
 'lr_scheduler': 'CosineAnnealingLR',
 'model': 'efficientnet_b3',
 'n_rounds': 5,
 'non_blocking': True,
 'num_classes': 5,
 'num_workers': 4,
 'optim': 'Adam',
 'pin_memory': True,
 'prefetch': False,
 'random_seed': 0,
 'ratio': 0.05,
 'result_file': 'badnet_attack_efficientnet_ffpp_5classes',
 'save_path': 'record/badnet_attack_efficientnet_ffpp_5classes/defense/i-bau/',
 'sgd_momentum': 0.9,
 'terminal_info': ['./defense/i-bau.py',
                   '--yaml_path',
                   './config/defense/i-bau/cifar10.yaml',
                   '--model',
                   'efficientnet_b3',
                   '--dataset',
                   'ffpp_5classes',
                   '--result_file',
                   'badnet_attack_efficientnet_ffpp_5classes'],
 'wd': 0,
 'yaml_path': './config/defense/i-bau/cifar10.yaml'}
2024-12-08:19:04:44 [INFO    ] [i-bau.py:378] {'K': 5,
 'adam_betas': [0.9, 0.999],
 'amp': True,
 'batch_size': 256,
 'checkpoint_load': None,
 'checkpoint_save': 'record/badnet_attack_efficientnet_ffpp_5classes/defense/i-bau/checkpoint/',
 'client_optimizer': 'adam',
 'dataset': 'ffpp_5classes',
 'dataset_path': './data/ffpp_5classes',
 'device': 'cuda',
 'epochs': 100,
 'frequency_save': 0,
 'img_size': (64, 64, 3),
 'index': None,
 'input_channel': 3,
 'input_height': 64,
 'input_width': 64,
 'log': 'record/badnet_attack_efficientnet_ffpp_5classes/defense/i-bau/log/',
 'lr': 0.0001,
 'lr_scheduler': 'CosineAnnealingLR',
 'model': 'efficientnet_b3',
 'n_rounds': 5,
 'non_blocking': True,
 'num_classes': 5,
 'num_workers': 4,
 'optim': 'Adam',
 'pin_memory': True,
 'prefetch': False,
 'random_seed': 0,
 'ratio': 0.05,
 'result_file': 'badnet_attack_efficientnet_ffpp_5classes',
 'save_path': 'record/badnet_attack_efficientnet_ffpp_5classes/defense/i-bau/',
 'sgd_momentum': 0.9,
 'terminal_info': ['./defense/i-bau.py',
                   '--yaml_path',
                   './config/defense/i-bau/cifar10.yaml',
                   '--model',
                   'efficientnet_b3',
                   '--dataset',
                   'ffpp_5classes',
                   '--result_file',
                   'badnet_attack_efficientnet_ffpp_5classes'],
 'wd': 0,
 'yaml_path': './config/defense/i-bau/cifar10.yaml'}
INFO:root:{'git hash': None,
 'last 3 log': 'commit 28ea486d763dab2463bf5a1b1587a3ad84778208\n'
               'Author: QiuMatthew <q_masio@outlook.com>\n'
               'Date:   Sun Dec 8 14:27:55 2024 +0900\n'
               '\n'
               '    new result: 2classes (not merged)\n'
               '\n'
               'commit b356c5112aa08ea5cd22aca804589eacf1d1d2cd\n'
               'Author: QiuMatthew <q_masio@outlook.com>\n'
               'Date:   Wed Nov 27 11:57:58 2024 +0900\n'
               '\n'
               '    running defenses on badnet 2classes\n'
               '\n'
               'commit 120fb5158c8452beb1d6b1e9be6474e81854d34b\n'
               'Author: QiuMatthew <uzenkyu@gmail.com>\n'
               'Date:   Tue Nov 26 18:36:04 2024 +0900\n'
               '\n'
               '    support ffpp_2classes, including the script for generating '
               'dataset, badnet attack and defenses',
 'status': 'On branch test-number-of-class\n'
           "Your branch is up to date with 'origin/test-number-of-class'.\n"
           '\n'
           'Changes not staged for commit:\n'
           '  (use "git add <file>..." to update what will be committed)\n'
           '  (use "git checkout -- <file>..." to discard changes in working '
           'directory)\n'
           '\n'
           '\tmodified:   out/badnet_ibau_efficientnet_ffpp_5classes.out\n'
           '\tmodified:   script/badnet_nad_efficientnet_ffpp_4classes.sh\n'
           '\n'
           'Untracked files:\n'
           '  (use "git add <file>..." to include in what will be committed)\n'
           '\n'
           '\tout/badnet_nad_efficientnet_ffpp_4classes.out\n'
           '\trecord/badnet_attack_efficientnet_ffpp_4classes/defense/nad/\n'
           '\n'
           'no changes added to commit (use "git add" and/or "git commit -a")'}
2024-12-08:19:04:45 [INFO    ] [i-bau.py:381] {'git hash': None,
 'last 3 log': 'commit 28ea486d763dab2463bf5a1b1587a3ad84778208\n'
               'Author: QiuMatthew <q_masio@outlook.com>\n'
               'Date:   Sun Dec 8 14:27:55 2024 +0900\n'
               '\n'
               '    new result: 2classes (not merged)\n'
               '\n'
               'commit b356c5112aa08ea5cd22aca804589eacf1d1d2cd\n'
               'Author: QiuMatthew <q_masio@outlook.com>\n'
               'Date:   Wed Nov 27 11:57:58 2024 +0900\n'
               '\n'
               '    running defenses on badnet 2classes\n'
               '\n'
               'commit 120fb5158c8452beb1d6b1e9be6474e81854d34b\n'
               'Author: QiuMatthew <uzenkyu@gmail.com>\n'
               'Date:   Tue Nov 26 18:36:04 2024 +0900\n'
               '\n'
               '    support ffpp_2classes, including the script for generating '
               'dataset, badnet attack and defenses',
 'status': 'On branch test-number-of-class\n'
           "Your branch is up to date with 'origin/test-number-of-class'.\n"
           '\n'
           'Changes not staged for commit:\n'
           '  (use "git add <file>..." to update what will be committed)\n'
           '  (use "git checkout -- <file>..." to discard changes in working '
           'directory)\n'
           '\n'
           '\tmodified:   out/badnet_ibau_efficientnet_ffpp_5classes.out\n'
           '\tmodified:   script/badnet_nad_efficientnet_ffpp_4classes.sh\n'
           '\n'
           'Untracked files:\n'
           '  (use "git add <file>..." to include in what will be committed)\n'
           '\n'
           '\tout/badnet_nad_efficientnet_ffpp_4classes.out\n'
           '\trecord/badnet_attack_efficientnet_ffpp_4classes/defense/nad/\n'
           '\n'
           'no changes added to commit (use "git add" and/or "git commit -a")'}
INFO:root:We use clean train data, the original paper use clean test data.
2024-12-08:19:04:49 [INFO    ] [i-bau.py:419] We use clean train data, the original paper use clean test data.
INFO:root:save file format is .png
2024-12-08:19:04:49 [INFO    ] [bd_dataset_v2.py:133] save file format is .png
loading...
loading...
INFO:root:=> Conducting Defence..
2024-12-08:19:04:58 [INFO    ] [i-bau.py:521] => Conducting Defence..
INFO:root:{'bd_test_loss_avg_over_batch': 0.07643997635353696,
 'clean_test_loss_avg_over_batch': 1.9875545714582716,
 'epoch': 0,
 'ra_test_loss_avg_over_batch': 4.611286726864901,
 'test_acc': 0.6814285714285714,
 'test_asr': 0.9873214285714286,
 'test_ra': 0.009821428571428571}
2024-12-08:19:27:00 [INFO    ] [trainer_cls.py:65] {'bd_test_loss_avg_over_batch': 0.07643997635353696,
 'clean_test_loss_avg_over_batch': 1.9875545714582716,
 'epoch': 0,
 'ra_test_loss_avg_over_batch': 4.611286726864901,
 'test_acc': 0.6814285714285714,
 'test_asr': 0.9873214285714286,
 'test_ra': 0.009821428571428571}
INFO:root:{'bd_test_loss_avg_over_batch': 0.10037612373178656,
 'clean_test_loss_avg_over_batch': 2.388139558689935,
 'epoch': 1,
 'ra_test_loss_avg_over_batch': 4.4111011028289795,
 'test_acc': 0.6771428571428572,
 'test_asr': 0.9858928571428571,
 'test_ra': 0.01125}
2024-12-08:19:48:59 [INFO    ] [trainer_cls.py:65] {'bd_test_loss_avg_over_batch': 0.10037612373178656,
 'clean_test_loss_avg_over_batch': 2.388139558689935,
 'epoch': 1,
 'ra_test_loss_avg_over_batch': 4.4111011028289795,
 'test_acc': 0.6771428571428572,
 'test_asr': 0.9858928571428571,
 'test_ra': 0.01125}
INFO:root:{'bd_test_loss_avg_over_batch': 0.21380603990771554,
 'clean_test_loss_avg_over_batch': 2.5595430774348125,
 'epoch': 2,
 'ra_test_loss_avg_over_batch': 3.4987766525962134,
 'test_acc': 0.6771428571428572,
 'test_asr': 0.9776785714285714,
 'test_ra': 0.019107142857142857}
2024-12-08:20:10:58 [INFO    ] [trainer_cls.py:65] {'bd_test_loss_avg_over_batch': 0.21380603990771554,
 'clean_test_loss_avg_over_batch': 2.5595430774348125,
 'epoch': 2,
 'ra_test_loss_avg_over_batch': 3.4987766525962134,
 'test_acc': 0.6771428571428572,
 'test_asr': 0.9776785714285714,
 'test_ra': 0.019107142857142857}
INFO:root:{'bd_test_loss_avg_over_batch': 0.17999427223747427,
 'clean_test_loss_avg_over_batch': 2.7908748388290405,
 'epoch': 3,
 'ra_test_loss_avg_over_batch': 3.9906298138878564,
 'test_acc': 0.6794285714285714,
 'test_asr': 0.9825,
 'test_ra': 0.014642857142857143}
2024-12-08:20:32:45 [INFO    ] [trainer_cls.py:65] {'bd_test_loss_avg_over_batch': 0.17999427223747427,
 'clean_test_loss_avg_over_batch': 2.7908748388290405,
 'epoch': 3,
 'ra_test_loss_avg_over_batch': 3.9906298138878564,
 'test_acc': 0.6794285714285714,
 'test_asr': 0.9825,
 'test_ra': 0.014642857142857143}
INFO:root:{'bd_test_loss_avg_over_batch': 0.11755658516829665,
 'clean_test_loss_avg_over_batch': 2.988969922065735,
 'epoch': 4,
 'ra_test_loss_avg_over_batch': 4.608868317170576,
 'test_acc': 0.6808571428571428,
 'test_asr': 0.9855357142857143,
 'test_ra': 0.011785714285714287}
2024-12-08:20:54:16 [INFO    ] [trainer_cls.py:65] {'bd_test_loss_avg_over_batch': 0.11755658516829665,
 'clean_test_loss_avg_over_batch': 2.988969922065735,
 'epoch': 4,
 'ra_test_loss_avg_over_batch': 4.608868317170576,
 'test_acc': 0.6808571428571428,
 'test_asr': 0.9855357142857143,
 'test_ra': 0.011785714285714287}
INFO:root:saving...
2024-12-08:20:54:17 [INFO    ] [save_load_attack.py:176] saving...
